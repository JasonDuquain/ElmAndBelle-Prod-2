/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

:root {
  font-size: 1em;
  scroll-behavior: smooth;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

@media (max-width: 57.5em) {
  :root {
    font-size: .9em;
  }
}

@media (max-width: 48.75em) {
  :root {
    font-size: .8em;
  }
}

body {
  font-size: 100%;
  font-family: 'Raleway', serif;
  color: #333;
}

section {
  padding: 6em 2em;
}

.pre-heading {
  text-transform: uppercase;
  text-align: center;
  color: #999;
  margin-bottom: .3em;
}

.sect-heading {
  font-size: 2.3em;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 2px;
  margin-bottom: .2em;
  color: #333333;
}

.sect-heading-img {
  height: 13px;
  width: 142px;
  background-image: url("../img/heading-img.svg");
  margin: 0 auto 3em auto;
  opacity: .5;
}

/*svg#test {
    width: 142px;
    height: 13px;
    margin: 0 auto 3em auto;
    text-align: center;
    display: block;
}

.intro use {
    opacity: .5;
    display: inline-block;
    fill: #414042;
}*/
/* SIGN UP BUTTON IS AN ANCHOR..NOT A INPUT TYPE=SUBMIT */
.btn-standard {
  position: relative;
  color: #fff;
  background-color: #867236;
  display: inline-block;
  padding: .6em 1.2em;
}

.btn-standard::before, .btn-standard::after {
  content: "";
  -webkit-transition: all 250ms;
  transition: all 250ms;
  position: absolute;
  border-color: transparent;
  border-style: solid;
  border-width: 0;
  height: 1.0909em;
  /* was 24px */
  width: 1.0909em;
  /* was 24px */
}

.btn-standard::before {
  border-top-width: .090em;
  /* was 2px */
  border-color: #867236;
  top: -.227em;
  /* was 5px */
  left: 0;
}

.btn-standard::after {
  border-bottom-width: .090em;
  /* was 2px */
  border-color: #867236;
  bottom: -.227em;
  /* was 5px */
  right: 0px;
}

.btn-standard:hover::before, .btn-standard:hover::after {
  width: 100%;
}

.btn-flex {
  -ms-flex-item-align: center;
      align-self: center;
}

.js-btt-btn {
  position: fixed;
  bottom: 1em;
  right: 1em;
  width: 2.7em;
  height: 2.7em;
  border-radius: 50%;
  background-color: #333;
  text-align: center;
  line-height: 2.7em;
  color: #fff;
  font-size: 1.2em;
  opacity: 0;
  visibility: hidden;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

.js-btt-btn.active {
  opacity: 1;
  visibility: visible;
}

.js-btt-btn:hover {
  color: forestgreen;
}

.site-header {
  -webkit-transition: all 400ms ease-out;
  transition: all 400ms ease-out;
  padding: .5em 1.5em;
  background-color: #fff;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  border-bottom: 1px solid #ccc;
}

@media (min-width: 75em) {
  .site-header {
    padding: 0 calc(50% - 600px);
  }
}

.site-header__social {
  width: 33.333%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.site-header__social:hover .site-header__social-link:not(:hover) {
  opacity: .85;
}

.site-header__social-link {
  -webkit-transition: -webkit-transform 300ms ease-in;
  transition: -webkit-transform 300ms ease-in;
  transition: transform 300ms ease-in;
  transition: transform 300ms ease-in, -webkit-transform 300ms ease-in;
}

.site-header__social-link:hover {
  -webkit-transform: scale(1.3);
          transform: scale(1.3);
}

.site-header .fa {
  font-size: 1.4em;
  display: inline-block;
  color: #867236;
}

.site-header a:not(:first-of-type) {
  margin-left: .7em;
}

.site-header__logo-link {
  width: 33.333%;
  text-align: center;
}

.site-header__logo {
  width: 8em;
  height: auto;
}

.site-header__button-container {
  width: 33.333%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

.site-header__button:link, .site-header__button:visited {
  font-size: .75em;
  font-weight: 500;
  -webkit-transition: background-color 300ms ease-out;
  transition: background-color 300ms ease-out;
  padding: .7em 1.4em;
  color: #fff;
  background-color: #867236;
  border: 1px solid #867236;
  display: inline-block;
  border-radius: 99em;
}

.site-header__button:link:hover, .site-header__button:visited:hover {
  background-color: #cfb877;
  border: 1px solid #cfb877;
}

.site-header__button-2:link, .site-header__button-2:visited {
  background-color: transparent;
  border: 1px solid #867236;
  color: #867236;
}

.site-header__button-2:link:hover, .site-header__button-2:visited:hover {
  background-color: #867236;
  color: #fff;
  border-color: #867236;
}

.navigation {
  padding: 1em 1.5em;
  -webkit-transition: background-color 350ms ease-in;
  transition: background-color 350ms ease-in;
}

.navigation__list {
  width: 70%;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
}

.navigation__item--hide {
  margin-left: 2em;
  -webkit-transform: scale(2.2);
          transform: scale(2.2);
  opacity: 0;
  -webkit-transition: opacity 800ms, -webkit-transform 1000ms ease-out;
  transition: opacity 800ms, -webkit-transform 1000ms ease-out;
  transition: transform 1000ms ease-out, opacity 800ms;
  transition: transform 1000ms ease-out, opacity 800ms, -webkit-transform 1000ms ease-out;
}

.navigation__item--hide .navigation__link:link::after, .navigation__item--hide .navigation__link:visited::after {
  display: none;
}

.navigation__link:link, .navigation__link:visited {
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
  display: inline-block;
  font-size: .75em;
  font-weight: 500;
  color: #333;
  text-transform: uppercase;
  position: relative;
  padding-bottom: .2em;
}

.navigation__link:link:hover, .navigation__link:visited:hover {
  color: #867236;
}

.navigation__link:link::after, .navigation__link:visited::after {
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
  position: absolute;
  content: "";
  left: 50%;
  right: 50%;
  bottom: 0;
  height: 2px;
  background-color: #867236;
}

.navigation__link:hover::after {
  left: 0;
  right: 0;
}

.navigation.fixed {
  position: fixed;
  z-index: 200;
  top: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.7);
  -webkit-box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);
          box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);
  padding-top: 0;
  padding-bottom: 0;
  overflow: hidden;
  /* added to keep the sticky nav from expanding when logo animation happens */
}

.navigation.fixed .navigation__list {
  width: 90%;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.navigation.fixed .navigation__item--hide {
  margin-right: auto;
  margin-bottom: -8px;
  opacity: 1;
  -webkit-transform: scale(1.1);
          transform: scale(1.1);
}

.navigation.fixed .navigation__item--hide svg {
  fill: #fff;
  width: 250px;
  height: 60px;
}

.navigation.fixed .navigation__item {
  margin-left: 2em;
}

.navigation.fixed .navigation__link:link, .navigation.fixed .navigation__link:visited {
  color: #fff;
}

.navigation.fixed .navigation__link.active:link, .navigation.fixed .navigation__link.active:visited {
  color: #867236;
}

.navigation.fixed .navigation__link.active:link::after, .navigation.fixed .navigation__link.active:visited::after {
  color: #dccc9d;
  left: 0;
  right: 0;
  -webkit-transition-delay: 300ms;
          transition-delay: 300ms;
  /* added to try to keep other links from starting to animate this on the way down/up to the target link */
}

.large-hero {
  height: 55vw;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.2)), to(rgba(0, 0, 0, 0.2))), url("../img/hero.jpg");
  background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), url("../img/hero.jpg");
  background-size: cover;
  position: relative;
  background-repeat: no-repeat;
  background-position: center;
  border-bottom: 0.3em solid #dccc9d;
  position: relative;
  overflow: hidden;
}

.large-hero__overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: #333 center/cover no-repeat;
  z-index: 0;
  -webkit-filter: blur(4px);
          filter: blur(4px);
  opacity: 0;
}

.large-hero__main-heading {
  color: #fff;
  text-align: center;
  font-family: 'Tangerine', cursive;
  text-shadow: 2px 2px 3px rgba(0, 0, 0, 0.7);
  font-size: 3.5em;
  line-height: 1.1;
  color: #eee;
  margin: 0;
  position: absolute;
  top: 10%;
  left: 30%;
  -webkit-transform: translateX(-50%, -50%);
          transform: translateX(-50%, -50%);
  width: 55%;
  z-index: 1;
}

.large-hero__main-heading .word {
  color: #dccc9d;
  font-size: 1.1em;
}

.large-hero__main-heading [class^=test] {
  opacity: 0;
  display: block;
  -webkit-animation: fade-in 800ms 700ms ease-in both;
          animation: fade-in 800ms 700ms ease-in both;
}

.large-hero__main-heading .testtwo {
  -webkit-animation-delay: 2000ms;
          animation-delay: 2000ms;
}

.large-hero__main-heading .testthree {
  -webkit-animation-delay: 4000ms;
          animation-delay: 4000ms;
}

.large-hero__main-heading .testfour {
  font-size: .9em;
  -webkit-animation-delay: 5300ms;
          animation-delay: 5300ms;
  display: block;
  text-align: right;
  margin-top: .75em;
}

@-webkit-keyframes fade-in {
  100% {
    opacity: 1;
  }
}

@keyframes fade-in {
  100% {
    opacity: 1;
  }
}

.intro {
  /*****   OVERLAP GALLERY   ******/
  /*****   SUMMARY   ******/
  /*****    BRAND LOGOS    *****/
}

@media (min-width: 75em) {
  .intro {
    padding: 6em calc(50% - 600px);
  }
}

.intro__grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: 4.5em;
  margin: 4em 0;
}

.intro__gallery {
  display: grid;
  grid-template-columns: repeat(9, 1fr);
  grid-template-rows: repeat(9, 1fr);
  background-image: url("../img/scissors.jpg");
  background-size: cover;
}

.intro__img {
  width: 100%;
  border-radius: 2px;
  -webkit-box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
          box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
  -webkit-transition: -webkit-transform 300ms ease-out;
  transition: -webkit-transform 300ms ease-out;
  transition: transform 300ms ease-out;
  transition: transform 300ms ease-out, -webkit-transform 300ms ease-out;
}

.intro__img:hover {
  -webkit-transform: scale(1.1);
          transform: scale(1.1);
  -webkit-box-shadow: 0 10px 15px rgba(0, 0, 0, 0.4);
          box-shadow: 0 10px 15px rgba(0, 0, 0, 0.4);
  z-index: 60;
}

.intro__img-1 {
  grid-column: 3 / 8;
  grid-row: 2 / 7;
  z-index: 50;
}

.intro__img-2 {
  -webkit-transform: translateX(2em);
          transform: translateX(2em);
  grid-column: 5 / 10;
  grid-row: 5 / 9;
  -webkit-box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
          box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
  z-index: 55;
}

.intro__img-2:hover {
  -webkit-transform: scale(1.1) translateX(2em);
          transform: scale(1.1) translateX(2em);
}

.intro__summary {
  -ms-flex-item-align: center;
      align-self: center;
}

.intro__summary p:first-of-type::first-letter {
  font-family: 'Libre Baskerville', serif;
  font-size: 3.8em;
  line-height: 1.1;
  float: left;
  color: #dccc9d;
  margin-right: .1em;
}

.intro__summary p {
  font-size: 1em;
  line-height: 1.6;
}

.intro__summary p:not(:last-of-type) {
  margin-bottom: .8em;
}

.intro__brands {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(135px, 1fr));
  grid-gap: 2em;
  width: 80%;
  justify-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin: 0 auto;
}

.intro__brands__heading {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  grid-gap: .75em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  color: #cfb877;
  font-size: 1.3em;
  font-weight: 500;
  line-height: 1;
  margin: 1em 0 2.5em 0;
  text-transform: uppercase;
}

.intro__brands__heading::before, .intro__brands__heading::after {
  content: "";
  height: 5px;
  border-radius: 10px;
  background-image: -webkit-gradient(linear, left top, right top, from(#dccc9d), to(transparent));
  background-image: linear-gradient(to right, #dccc9d, transparent);
}

.intro__brands__heading::before {
  background-image: -webkit-gradient(linear, right top, left top, from(#dccc9d), to(transparent));
  background-image: linear-gradient(to left, #dccc9d, transparent);
}

.intro__brands__img {
  width: 150px;
  height: 100px;
  -o-object-fit: cover;
     object-fit: cover;
  opacity: .2;
  -webkit-filter: grayscale(100%);
          filter: grayscale(100%);
  -webkit-transition: 400ms ease-out;
  transition: 400ms ease-out;
}

.intro__brands__img:hover {
  opacity: 1;
  -webkit-filter: grayscale(0);
          filter: grayscale(0);
}

.services {
  /**********   SERVICES TABLE LIST   **********/
}

.services__grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  grid-gap: 2em;
  max-width: 1280px;
  margin: 0 auto;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.services__main {
  width: 400px;
  position: relative;
  border-radius: 3px;
  -webkit-box-shadow: 0 0 2px 2px rgba(204, 204, 204, 0.3);
          box-shadow: 0 0 2px 2px rgba(204, 204, 204, 0.3);
  -webkit-transition: -webkit-transform 300ms ease-in;
  transition: -webkit-transform 300ms ease-in;
  transition: transform 300ms ease-in;
  transition: transform 300ms ease-in, -webkit-transform 300ms ease-in;
}

.services__image-wrap {
  position: relative;
}

.services__image-wrap::after {
  position: absolute;
  content: "";
  background-image: url("../img/blog-entry-overlay.svg");
  left: 0;
  right: 0;
  bottom: 0;
  height: 52px;
  /*will not fit perfectly when width changes - update this soon*/
  background-repeat: no-repeat;
  background-size: 100%;
}

.services__image {
  display: block;
}

.services__description {
  padding: 2em;
  background-color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.services__description-heading {
  font-size: 1.2em;
  margin: 1em 0 .5em 0;
  text-transform: capitalize;
  font-family: 'Quicksand', sans-serif;
  -webkit-transition: -webkit-transform 300ms ease-out;
  transition: -webkit-transform 300ms ease-out;
  transition: transform 300ms ease-out;
  transition: transform 300ms ease-out, -webkit-transform 300ms ease-out;
}

.services__summary {
  color: #ccc;
  margin-bottom: 2em;
  -webkit-hyphens: auto;
      -ms-hyphens: auto;
          hyphens: auto;
}

.services__link {
  color: #777;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  position: relative;
  padding-bottom: .3em;
}

.services__link:hover {
  color: #333;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.services__link::after {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  content: "";
  height: 1px;
  -webkit-transform: scaleX(0);
          transform: scaleX(0);
  -webkit-transform-origin: left center;
          transform-origin: left center;
  z-index: 88;
  background-color: currentColor;
  -webkit-transition: -webkit-transform 350ms ease-out;
  transition: -webkit-transform 350ms ease-out;
  transition: transform 350ms ease-out;
  transition: transform 350ms ease-out, -webkit-transform 350ms ease-out;
}

.services__link:hover::after {
  -webkit-transform: scaleX(1);
          transform: scaleX(1);
}

.services__table {
  width: 60%;
  border-collapse: collapse;
  border-radius: 20px;
  opacity: 0;
  visibility: hidden;
  -webkit-transform: scale(0);
          transform: scale(0);
  -webkit-transition: 400ms ease-out;
  transition: 400ms ease-out;
}

.services__table-caption {
  padding: .5em 0 .5em 0;
  text-align: center;
  font-size: 3.4em;
  color: #333;
  background-color: #f0e9d5;
}

.services__table-caption-span {
  font-family: 'Rochester', cursive;
  line-height: .7;
  text-align: center;
  display: block;
  font-size: 1.2em;
  color: #867236;
}

.services__table tr:nth-of-type(odd) {
  background-color: #f0e9d5;
}

.services__table tr:nth-of-type(even) {
  background-color: #dccc9d;
}

.services__table th {
  text-align: left;
  padding: 0 1em;
  text-transform: uppercase;
  font-size: 2em;
  font-weight: 700;
}

.services__table td {
  padding: 1em 1em 1em 2em;
  font-weight: 500;
}

/********  TABLE WRAPPER/MODAL STYLES  **********/
.cut-and-design_wrap, .color_wrap, .additional_wrap {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 100;
  background-color: rgba(0, 0, 0, 0.8);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  opacity: 0;
  visibility: hidden;
  -webkit-transition: all 600ms ease-out;
  transition: all 600ms ease-out;
}

.cut-and-design_wrap:target, .color_wrap:target, .additional_wrap:target {
  opacity: 1;
  visibility: visible;
}

.cut-and-design_wrap:target .services__table-cut,
.cut-and-design_wrap:target .services__table-color,
.cut-and-design_wrap:target .services__table-additional, .color_wrap:target .services__table-cut,
.color_wrap:target .services__table-color,
.color_wrap:target .services__table-additional, .additional_wrap:target .services__table-cut,
.additional_wrap:target .services__table-color,
.additional_wrap:target .services__table-additional {
  opacity: 1;
  visibility: visible;
  -webkit-transform: scale(1);
          transform: scale(1);
}

.close_modal {
  position: absolute;
  display: block;
  font-size: 3em;
  top: 3em;
  right: 1em;
  width: 1em;
  height: 1em;
  border-radius: 50%;
  background-color: #fff;
  text-align: center;
  line-height: .9em;
  cursor: pointer;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.close_modal:hover {
  color: green;
}

.demo {
  max-width: 1100px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-auto-rows: 300px;
  grid-gap: 1em;
  grid-auto-flow: dense;
}

.demo a {
  overflow: hidden;
  border-radius: 10px;
  background-color: #000;
}

.demo a:hover figure {
  -webkit-transform: scale(1.3);
          transform: scale(1.3);
  opacity: 1;
}

/*
.demo a:hover figcaption{
    opacity: 1;
    color: #fff;
    background-color: rgba(0,0,0,.65);
    padding: 2em 0;
    display: block;
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    text-align: center;
    transform: translateY(-50%);
}
*/
.demo figure {
  width: 100%;
  height: 100%;
  position: relative;
  opacity: .7;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.demo figcaption {
  opacity: 0;
  -webkit-transition: padding 300ms ease-in 200ms;
  transition: padding 300ms ease-in 200ms;
}

.demo img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.demo a:nth-child(1) img {
  -o-object-position: left center;
     object-position: left center;
}

.demo a:nth-child(2), .demo a:nth-child(4), .demo a:nth-child(9) {
  grid-column: span 2;
}

.demo a:nth-child(1), .demo a:nth-child(5) {
  grid-row: span 2;
}

.stats {
  background-color: #f0e7e7;
  background-image: url("../../img/elementor.svg");
  background-repeat: repeat-x;
  background-size: 80% 20%;
  padding-top: 2em;
  padding-bottom: 2em;
}

.stats__grid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-gap: 2em;
  margin: 0 auto;
}

.stats__wrap {
  grid-column: 1 / 3;
  padding: 1em;
  -ms-flex-item-align: center;
      align-self: center;
}

.stats__heading {
  margin-bottom: 1.5em;
  color: #777;
}

.stats__summary {
  color: #333;
}

.stats__stat {
  background-color: #fff;
  padding: 1.5em 2.5em;
  text-align: center;
  border-radius: 3px;
}

.stats__number {
  font-size: 2.5em;
  font-weight: bold;
}

.stats__service {
  color: #333;
}

.subscribe {
  background-image: url(../img/subscribe.jpg);
  background-repeat: no-repeat;
  background-size: cover;
}

@media (min-width: 75em) {
  .subscribe {
    padding: 6em calc(50% - 600px);
  }
}

.subscribe__heading {
  font-size: 1.3em;
}

.subscribe__paragraph {
  text-align: center;
  margin-bottom: 1.8em;
}

.subscribe__form {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 3em 1.5em;
}

.subscribe__input, .subscribe__email {
  width: 100%;
  border-radius: 0 .25em .25em 0;
  padding: .375em .3125em .3125em;
  border: 1px solid #ccc;
  font: inherit;
  color: inherit;
  height: 2.125em;
  cursor: pointer;
}

.subscribe__input:focus, .subscribe__email:focus {
  outline: none;
  -webkit-box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
          box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
}

.subscribe__label {
  display: block;
  width: 100%;
  margin-bottom: .4em;
}

.subscribe__field-prefixed {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.subscribe__field-prefix {
  -webkit-transition: color 300ms ease-out 100ms;
  transition: color 300ms ease-out 100ms;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 2.2em;
          flex: 0 0 2.2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #ccc;
  border-right: 0;
  border-radius: .25em 0 0 .25em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: .375em .375em .3125em .375em;
  color: #867236;
  background-color: transparent;
}

.subscribe__field-prefix.input-color {
  color: #eee;
  background-color: #867236;
}

.subscribe__input-wrap:last-of-type {
  -ms-flex-item-align: end;
      align-self: end;
}

.testimonial {
  background-image: linear-gradient(105deg, #fff, #fff, 50%, transparent 50%), url(../img/bg-testimonial.jpg);
  background-attachment: fixed;
  background-size: cover;
  padding: 6em 2em 2em 2em;
}

@media (min-width: 75em) {
  .testimonial {
    padding: 6em calc(50% - 600px);
  }
}

.testimonial__cell {
  -webkit-box-shadow: 2px 2px 3px 3px rgba(224, 224, 224, 0.3);
          box-shadow: 2px 2px 3px 3px rgba(224, 224, 224, 0.3);
  background-color: #fff;
  border-radius: 3px;
  margin: 1em;
}

.testimonial__wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  border-bottom: 1px solid #ccc;
  padding: 2rem;
}

.testimonial__image {
  width: 8em;
  height: 8em;
  border-radius: 50%;
  margin-right: 2em;
}

.testimonial__name {
  font-family: 'Quicksand', sans-serif;
  font-size: 1.7em;
  font-weight: 700;
  color: #777;
}

.testimonial__address {
  color: #777;
}

.testimonial__review {
  font-size: 1.1em;
  line-height: 1.5;
  color: #333;
  padding: 2rem 2rem 4rem 2rem;
  position: relative;
  z-index: 2;
}

.testimonial__review::before {
  content: "\201C";
  color: #dccc9d;
  font-size: 14em;
  line-height: .5;
  position: absolute;
  top: .15em;
  left: -.03em;
  font-family: sans-serif;
  z-index: -1;
}

.bold {
  font-weight: 700;
}

/* OLD STYLES WITH SLANT AND QUOTE  */
div.quoteWrap {
  padding: 2em;
  background-color: #f8956c;
  margin-left: -1.5em;
  margin-right: -1.5em;
  -webkit-clip-path: polygon(0 1em, 100% 0, 100% calc(100% - 1em), 0 100%);
          clip-path: polygon(0 1em, 100% 0, 100% calc(100% - 1em), 0 100%);
  color: #fff;
}

blockquote::before {
  content: "\201C";
  color: rgba(255, 255, 255, 0.3);
  font-size: 11em;
  line-height: .5;
  display: block;
  position: absolute;
  top: .05em;
  left: -.22em;
  font-family: sans-serif;
}

cite {
  font-style: italic;
  font-weight: 700;
  text-align: right;
  display: block;
}

footer {
  font-size: .8em;
  background-color: black;
  color: #888;
  padding: 3em;
}

@media (min-width: 75em) {
  footer {
    padding: 4em calc(50% - 600px);
  }
}

.logo-container {
  text-align: center;
  margin-bottom: 1.5em;
}

footer img {
  width: 7em;
  text-align: center;
}

div.footer--copyright {
  text-align: center;
  margin-top: 1.5em;
}

p.footer--main {
  max-width: 70%;
  margin: 0 auto 2.5em auto;
}

@media (max-width: 48.75em) {
  p.footer--main {
    max-width: none;
  }
}

div.footerNavWrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-bottom: 2em;
}

div.footer--icons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 15%;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

@media (max-width: 48.75em) {
  div.footer--icons {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    margin-top: 1.6em;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    font-size: 1.4em;
  }
}

@media (max-width: 48.75em) {
  div.footer--icons a {
    -webkit-box-flex: initial;
        -ms-flex: initial;
            flex: initial;
  }
}

div.footer--icons a:not(:last-of-type) {
  margin-right: 1em;
}

div.footer--icons i {
  -webkit-transition: color 300ms ease-out 50ms;
  transition: color 300ms ease-out 50ms;
  color: #888;
  width: 1.5em;
  height: 1.5em;
  display: inline-block;
  background-color: #fff;
  border-radius: 50%;
  text-align: center;
  line-height: 1.5em;
  font-size: 1.4em;
}

div.footer--icons a:first-of-type i:hover {
  color: #3b5998;
}

div.footer--icons a:nth-of-type(2) i:hover {
  color: #cb2027;
}

div.footer--icons a:last-of-type i:hover {
  color: #c32aa3;
}

.footer__navs {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 70%;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

@media (max-width: 48.75em) {
  .footer__navs {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
  }
}

.footer__links {
  color: #dccc9d;
  padding: 1em 2em;
  display: inline-block;
  text-transform: uppercase;
  -webkit-transition: background-color 300ms ease-out, -webkit-transform 300ms ease-out;
  transition: background-color 300ms ease-out, -webkit-transform 300ms ease-out;
  transition: background-color 300ms ease-out, transform 300ms ease-out;
  transition: background-color 300ms ease-out, transform 300ms ease-out, -webkit-transform 300ms ease-out;
}

.footer__links:hover {
  color: #867236;
  background-color: rgba(255, 255, 255, 0.15);
  -webkit-transform: translateY(-3px);
          transform: translateY(-3px);
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
