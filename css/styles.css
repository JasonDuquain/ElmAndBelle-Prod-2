/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

:root {
  font-size: 1em;
  scroll-behavior: smooth;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

@media (max-width: 61.25em) {
  :root {
    font-size: .9em;
  }
}

@media (max-width: 52.5em) {
  :root {
    font-size: .8em;
  }
}

body {
  font-size: 100%;
  font-family: 'Raleway', serif;
  color: #333;
  /* keeps horizontal scrollbars from appearing when items are animated to the left or right of the viewport */
  overflow-x: hidden;
}

section {
  padding: 6em 2em;
}

@media (max-width: 52.5em) {
  section {
    padding: 4em 1em;
  }
}

.pre-heading {
  text-transform: uppercase;
  text-align: center;
  color: #999;
  margin-bottom: .3em;
}

.sect-heading {
  font-size: 2.3em;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 2px;
  margin-bottom: .2em;
  color: #333333;
}

.sect-heading-img {
  height: .8125em;
  width: 8.875em;
  background-image: url("../img/heading-img.svg");
  margin: 0 auto 3em auto;
  opacity: .5;
}

/* SIGN UP BUTTON IS AN ANCHOR..NOT A INPUT TYPE=SUBMIT */
.btn-standard {
  position: relative;
  color: #fff;
  display: inline-block;
  padding: .6em 1.2em;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#aa9145), to(#867236));
  background-image: linear-gradient(#aa9145, #867236);
  border-radius: 3px;
}

.btn-standard::before, .btn-standard::after {
  content: "";
  -webkit-transition: all 250ms;
  transition: all 250ms;
  position: absolute;
  border-color: transparent;
  border-style: solid;
  border-width: 0;
  height: 1.0909em;
  /* was 24px */
  width: 1.0909em;
  /* was 24px */
}

.btn-standard::before {
  border-top-width: .090em;
  /* was 2px */
  border-color: #867236;
  top: -.227em;
  /* was 5px */
  left: 0;
}

.btn-standard::after {
  border-bottom-width: .090em;
  /* was 2px */
  border-color: #867236;
  bottom: -.227em;
  /* was 5px */
  right: 0px;
}

.btn-standard:hover::before, .btn-standard:hover::after {
  width: 100%;
}

.btn-flex {
  -ms-flex-item-align: center;
      align-self: center;
  margin-top: 1.5em;
}

.js-btt-btn {
  position: fixed;
  bottom: 1em;
  right: 1em;
  width: 2.7em;
  height: 2.7em;
  border-radius: 50%;
  border: 1px solid #333;
  background-color: #333;
  text-align: center;
  line-height: 2.7em;
  color: #fff;
  font-size: 1.2em;
  opacity: 0;
  visibility: hidden;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

.js-btt-btn.active {
  opacity: 1;
  visibility: visible;
}

.js-btt-btn:hover {
  color: #333;
  background-color: #fff;
}

.hamburger-icon {
  display: none;
  width: 24px;
  height: 22px;
  cursor: pointer;
  position: fixed;
  top: 16px;
  right: 16px;
  z-index: 300;
}

@media (max-width: 47.5em) {
  .hamburger-icon {
    display: block;
  }
}

.hamburger-icon::before {
  content: "";
  position: absolute;
  top: 0;
  height: 2px;
  background-color: #000;
  width: 100%;
  -webkit-transition: all 500ms ease-out;
  transition: all 500ms ease-out;
  -webkit-transform-origin: left center;
          transform-origin: left center;
}

.hamburger-icon__middle {
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  height: 2px;
  width: 100%;
  background-color: #000;
  position: absolute;
  content: "";
  -webkit-transition: all 500ms ease-out;
  transition: all 500ms ease-out;
}

.hamburger-icon::after {
  content: "";
  position: absolute;
  height: 2px;
  background-color: #000;
  width: 100%;
  bottom: 0;
  -webkit-transition: all 500ms ease-out;
  transition: all 500ms ease-out;
  -webkit-transform-origin: left center;
          transform-origin: left center;
}

.hamburger-icon.interact::before {
  -webkit-transform: rotate(45deg) scaleX(1.2);
          transform: rotate(45deg) scaleX(1.2);
}

.hamburger-icon.interact::after {
  -webkit-transform: rotate(-45deg) scaleX(1.2);
          transform: rotate(-45deg) scaleX(1.2);
}

.hamburger-icon.interact .hamburger-icon__middle {
  -webkit-transform: translateY(-50%) scaleX(0);
          transform: translateY(-50%) scaleX(0);
}

.site-header {
  -webkit-transition: all 400ms ease-out;
  transition: all 400ms ease-out;
  background-color: #fff;
  width: 100%;
}

.site-header__wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: .5em 1.5em;
}

@media (min-width: 75em) {
  .site-header__wrap {
    padding: 0 calc(50% - 600px);
  }
}

.site-header__social {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.site-header__social:hover .site-header__social-link:not(:hover) {
  opacity: .80;
}

@media (max-width: 47.5em) {
  .site-header__social {
    display: none;
  }
}

.site-header__social-link {
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

.site-header__social-link:hover {
  -webkit-transform: scale(1.3);
          transform: scale(1.3);
}

.site-header__social-link:hover .fa.fa-facebook-square {
  color: #3b5998;
}

.site-header__social-link:hover .fa.fa-pinterest-square {
  color: #cb2027;
}

.site-header__social-link:hover .fa.fa-instagram {
  color: #c32aa3;
}

.site-header .fa {
  font-size: 1.4em;
  display: inline-block;
  color: #867236;
}

.site-header a:not(:first-of-type) {
  margin-left: .7em;
}

.site-header__logo-link {
  font-family: 'lucien_schoenschriftv_catRg', cursive;
  font-size: 4em;
  line-height: 1.6;
  color: #333;
  -webkit-box-flex: 2;
      -ms-flex: 2;
          flex: 2;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.site-header__amp {
  color: #867236;
}

.site-header__button-container {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 47.5em) {
  .site-header__button-container {
    display: none;
  }
}

.site-header__button:link, .site-header__button:visited {
  font-size: .75em;
  font-weight: 500;
  -webkit-transition: background-color 300ms ease-out;
  transition: background-color 300ms ease-out;
  padding: .7em 1.4em;
  color: #fff;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#aa9145), to(#867236));
  background-image: linear-gradient(#aa9145, #867236);
  border: 1px solid #867236;
  display: inline-block;
  border-radius: 99em;
}

.site-header__button:link:hover, .site-header__button:visited:hover {
  background-image: -webkit-gradient(linear, left top, left bottom, from(#dccc9d), to(#aa9145));
  background-image: linear-gradient(#dccc9d, #aa9145);
  border: 1px solid #cfb877;
}

.site-header__button-2:link, .site-header__button-2:visited {
  background-image: none;
  background-color: transparent;
  border: 1px solid #867236;
  color: #867236;
}

.site-header__button-2:link:hover, .site-header__button-2:visited:hover {
  background-color: #867236;
  color: #fff;
  border-color: #dccc9d;
}

.navigation {
  padding: 1em 1.5em;
  -webkit-transition: background-color 350ms ease-in;
  transition: background-color 350ms ease-in;
  border-top: 1px solid #ccc;
}

@media (min-width: 75em) {
  .navigation {
    padding: 1em calc(50% - 600px);
  }
}

@media (max-width: 47.5em) {
  .navigation {
    display: none;
  }
}

.navigation__amp {
  color: #dccc9d;
}

.navigation__logo-text {
  font-family: 'lucien_schoenschriftv_catRg', cursive;
  font-size: 2.7em;
  text-transform: none;
}

.navigation__list {
  width: 70%;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
}

.navigation__item--hide {
  margin-left: 2em;
  /* removed as svg space was preserved in mozilla changed to 
        transform: scale(2.2);
        opacity: 0; 
        transition: transform 1000ms ease-out, opacity 800ms; */
  display: none;
}

.navigation__item--hide .navigation__link:link::after, .navigation__item--hide .navigation__link:visited::after {
  display: none;
}

.navigation__link:link, .navigation__link:visited {
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
  display: inline-block;
  font-size: .85em;
  font-weight: 500;
  color: #333;
  text-transform: uppercase;
  position: relative;
  padding-bottom: .4em;
}

.navigation__link:link:hover, .navigation__link:visited:hover {
  color: #867236;
}

.navigation__link:link::after, .navigation__link:visited::after {
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
  position: absolute;
  content: "";
  left: 50%;
  right: 50%;
  bottom: 0;
  height: 2px;
  background-color: #867236;
}

.navigation__link:hover::after {
  left: 0;
  right: 0;
}

.navigation.fixed {
  position: fixed;
  z-index: 200;
  top: 0;
  left: 0;
  right: 0;
  padding: .75em;
  background-color: rgba(0, 0, 0, 0.7);
  -webkit-box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);
          box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);
  overflow: hidden;
  /* added to keep the sticky nav from expanding when logo animation happens */
}

.navigation.fixed .navigation__list {
  width: 90%;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  max-width: 1280px;
}

.navigation.fixed .navigation__item--hide {
  margin-right: auto;
  /* removed as svg space was preserved in mozilla
            opacity: 1;
            transform: scale(1.1);
             */
  display: block;
}

.navigation.fixed .navigation__item {
  margin-left: 2em;
}

.navigation.fixed .navigation__link:link, .navigation.fixed .navigation__link:visited {
  color: #fff;
}

.navigation.fixed .navigation__link.active:link, .navigation.fixed .navigation__link.active:visited {
  color: #dccc9d;
}

.navigation.fixed .navigation__link.active:link::after, .navigation.fixed .navigation__link.active:visited::after {
  background-color: #dccc9d;
  color: #dccc9d;
  left: 0;
  right: 0;
  -webkit-transition-delay: 300ms;
          transition-delay: 300ms;
  /* added to try to keep other links from starting to animate this on the way down/up to the target link */
}

.navigation.fixed .navigation__link:link::after, .navigation.fixed .navigation__link:visited::after {
  background-color: #dccc9d;
}

@media (max-width: 47.5em) {
  .navigation.hamburger-on {
    display: block;
  }
  .navigation.hamburger-on .navigation__list {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    width: 80%;
  }
  .navigation.hamburger-on .navigation__item {
    background-color: #777;
    text-align: center;
  }
  .navigation.hamburger-on .navigation__item:not(:last-of-type) {
    border-bottom: 1px dotted #fff;
  }
  .navigation.hamburger-on .navigation__link {
    color: #fff;
    font-size: 1em;
    padding: 1.5em;
    display: block;
  }
  .navigation.hamburger-on .navigation__link:hover {
    background-color: #dccc9d;
    color: #fff;
  }
  .navigation.hamburger-on .navigation__link:hover::after {
    left: 50%;
    right: 50%;
  }
  /***** FIXED HEADER  ******/
  .navigation.hamburger-on.fixed .navigation__item {
    width: 100%;
  }
  .navigation.hamburger-on.fixed .navigation__item--hide {
    margin-right: 0;
  }
  /*.navigation.hamburger-on.fixed .navigation__link:link, & .navigation__link:visited {
        color: #fff;
    }*/
  .navigation.hamburger-on.fixed .navigation__link.active:link, .navigation.hamburger-on.fixed .navigation__link.active:visited {
    color: #dccc9d;
  }
  .navigation.hamburger-on.fixed .navigation__link.active:link:hover, .navigation.hamburger-on.fixed .navigation__link.active:visited:hover {
    color: #fff;
  }
  .navigation.hamburger-on.fixed .navigation__link.active:link::after, .navigation.hamburger-on.fixed .navigation__link.active:visited::after {
    left: 50%;
    right: 50%;
  }
}

.large-hero {
  height: 55vw;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.2)), to(rgba(0, 0, 0, 0.2))), url("https://res.cloudinary.com/jduquain/c_scale,f_auto,q_auto,w_1920/v1563456910/eandb/hero.jpg");
  background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), url("https://res.cloudinary.com/jduquain/c_scale,f_auto,q_auto,w_1920/v1563456910/eandb/hero.jpg");
  background-size: cover;
  position: relative;
  background-repeat: no-repeat;
  background-position: center;
  border-bottom: 0.6vw solid #dccc9d;
  position: relative;
  overflow: hidden;
}

.large-hero__overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: #333 center/cover no-repeat;
  z-index: 0;
  -webkit-filter: blur(4px);
          filter: blur(4px);
  opacity: 0;
}

.large-hero__main-heading {
  color: #fff;
  text-align: center;
  font-family: 'Tangerine', cursive;
  text-shadow: 2px 2px 3px rgba(0, 0, 0, 0.7);
  font-size: 3.7em;
  line-height: 1.1;
  color: #fff;
  margin: 0;
  position: absolute;
  top: 10%;
  left: 50%;
  -webkit-transform: translate(-50%, 0%);
          transform: translate(-50%, 0%);
  width: 55%;
  z-index: 1;
}

@media (max-width: 43.75em) {
  .large-hero__main-heading {
    font-size: 3em;
  }
}

@media (max-width: 35em) {
  .large-hero__main-heading {
    font-size: 2.5em;
  }
}

@media (max-width: 28.125em) {
  .large-hero__main-heading {
    font-size: 2.2em;
  }
}

.large-hero__quote {
  opacity: 0;
  display: block;
}

.large-hero__quote--4 {
  font-family: 'Raleway', sans-serif;
  font-size: .5em;
  font-weight: 300;
  display: block;
  text-align: right;
  margin-top: .85em;
}

.large-hero__amp {
  font-size: 1.4em;
  line-height: .6;
}

.large-hero__amp--right {
  margin-left: 3px;
}

@-webkit-keyframes fade-in {
  100% {
    opacity: 1;
  }
}

@keyframes fade-in {
  100% {
    opacity: 1;
  }
}

.large-hero.loaded .large-hero__quote {
  -webkit-animation: fade-in 800ms 700ms ease-in both;
          animation: fade-in 800ms 700ms ease-in both;
}

.large-hero.loaded .large-hero__quote--2 {
  -webkit-animation-delay: 2000ms;
          animation-delay: 2000ms;
}

.large-hero.loaded .large-hero__quote--3 {
  -webkit-animation-delay: 4000ms;
          animation-delay: 4000ms;
}

.large-hero.loaded .large-hero__quote--4 {
  -webkit-animation-delay: 5300ms;
          animation-delay: 5300ms;
}

.intro {
  /*****   OVERLAP GALLERY   ******/
  /*&__gallery {
        display: grid;
        grid-template-columns: repeat(9, 1fr);
        grid-template-rows: repeat(9, 1fr);
        background-image: url('../img/scissors.jpg');
        background-size: cover;
    }
    
    &__img {
        width: 100%;
        border-radius: 2px;
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
        transition: transform 300ms ease-out;
        
        &:hover {
            transform: scale(1.1);
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.4);
            z-index: 60;
        }
        
        &-1 {
            grid-column: 3 / 8;
            grid-row: 2 / 7;
            z-index: 50;
        }
        
        &-2 {
            transform: translateX(2em);
            grid-column: 5 / 10;
            grid-row: 5 / 9;
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
            z-index: 55;
            
            &:hover {
                transform: scale(1.1) translateX(2em);
            }
        }
        
    }*/
  /*****   SUMMARY   ******/
  /*****    BRAND LOGOS    *****/
}

@media (min-width: 80em) {
  .intro {
    padding: 6em calc(50% - 640px);
  }
}

.intro__grid {
  display: grid;
  grid-template-columns: 1.5fr 1fr;
  grid-column-gap: .5em;
  margin: 4em 0;
}

.intro__summary {
  -ms-flex-item-align: center;
      align-self: center;
}

.intro__summary p:first-of-type::first-letter {
  font-family: serif;
  font-size: 4.6em;
  line-height: .9;
  float: left;
  color: #867236;
  margin-right: .1em;
}

.intro__summary p {
  font-size: 1em;
  line-height: 1.6;
}

.intro__summary p:not(:last-of-type) {
  margin-bottom: .8em;
}

.intro__brands {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(135px, 1fr));
  grid-gap: 2em;
  width: 90%;
  justify-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin: 0 auto;
}

@media (max-width: 70em) {
  .intro__brands {
    width: 100%;
  }
}

.intro__brands__heading {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  grid-gap: .75em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  color: rgba(171, 147, 116, 0.8);
  font-size: 1.4em;
  font-weight: 500;
  line-height: 1;
  margin: 1em 0 2.5em 0;
  text-transform: uppercase;
}

.intro__brands__heading::before, .intro__brands__heading::after {
  content: "";
  height: .3125em;
  border-radius: .625em;
  background-image: -webkit-gradient(linear, left top, right top, from(rgba(171, 147, 116, 0.8)), to(transparent));
  background-image: linear-gradient(to right, rgba(171, 147, 116, 0.8), transparent);
}

.intro__brands__heading::before {
  background-image: -webkit-gradient(linear, right top, left top, from(rgba(171, 147, 116, 0.8)), to(transparent));
  background-image: linear-gradient(to left, rgba(171, 147, 116, 0.8), transparent);
}

.intro__brands__img {
  width: 9.375em;
  height: 6.25em;
  -o-object-fit: cover;
     object-fit: cover;
  opacity: .2;
  -webkit-filter: grayscale(100%);
          filter: grayscale(100%);
  -webkit-transition: 400ms ease-out;
  transition: 400ms ease-out;
}

.intro__brands__img:hover {
  opacity: 1;
  -webkit-filter: grayscale(0);
          filter: grayscale(0);
}

/******** DIAMOND INTRO GRID  *********/
@media (max-width: 70em) {
  .img-clip-block {
    -ms-flex-item-align: center;
        align-self: center;
  }
}

.img-clip-row {
  text-align: center;
  margin-top: -9.625em;
}

@media (max-width: 70em) {
  .img-clip-row {
    margin-top: -7.725em;
  }
}

.img-clip-wrap {
  display: inline-block;
  width: 18.75em;
  /* was 300px */
  height: 18.75em;
  /* was 300px */
  background-image: url("https://res.cloudinary.com/jduquain/c_scale,f_auto,h_600,q_auto,w_600/v1563446284/eandb/thumbsandservices/addtl_svcs.jpg");
  /* 600x600 */
  background-repeat: no-repeat;
  margin-left: auto;
  margin-right: auto;
  position: relative;
  -webkit-clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
          clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
}

@media (max-width: 70em) {
  .img-clip-wrap {
    width: 15em;
    height: 15em;
  }
}

.img-clip-row:first-of-type {
  margin-top: auto;
}

.img-clip-row:first-of-type .img-clip-wrap {
  background-position: top;
}

.img-clip-row:nth-of-type(2) .img-clip-wrap:nth-of-type(odd) {
  background-position: left;
}

.img-clip-row:nth-of-type(2) .img-clip-wrap:nth-of-type(even) {
  background-position: right;
}

.img-clip-row:last-of-type .img-clip-wrap {
  background-position: bottom;
}

.overlay {
  -webkit-transition: all 0.3s linear;
  transition: all 0.3s linear;
  background: rgba(171, 147, 116, 0.8);
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  pointer-events: none;
}

.overlay-content {
  color: rgba(255, 255, 255, 0.4);
  font-weight: 400;
  font-size: 180%;
  text-transform: uppercase;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
}

@media (max-width: 70em) {
  .overlay-content {
    font-size: 150%;
  }
}

.overlay-content img {
  width: 100%;
  height: auto;
}

@media (max-width: 70em) {
  .overlay-content img {
    width: 90%;
  }
}

.img-clip-wrap:hover .overlay {
  -webkit-transition: all 0.4s ease-in;
  transition: all 0.4s ease-in;
  background: none;
  /* transparent would also work */
}

.services {
  /**********   SERVICES TABLE LIST   **********/
}

@media (max-width: 28.125em) {
  .services {
    padding-right: 0;
    padding-left: 0;
  }
}

.services__grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  grid-gap: 1em;
  max-width: 1280px;
  margin: 0 auto;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

@media (max-width: 61.25em) {
  .services__grid {
    grid-row-gap: 3em;
    justify-items: center;
  }
}

.services__wrap {
  -webkit-transition: all 700ms ease-out;
  transition: all 700ms ease-out;
}

.services__wrap:first-of-type {
  opacity: 0;
}

.services__wrap:nth-of-type(2) {
  opacity: 0;
}

.services__wrap:last-of-type {
  opacity: 0;
}

.services__main {
  width: 400px;
  position: relative;
  border-radius: 3px;
  -webkit-box-shadow: 0 0 2px 2px rgba(204, 204, 204, 0.3);
          box-shadow: 0 0 2px 2px rgba(204, 204, 204, 0.3);
}

.services__image-wrap {
  position: relative;
}

.services__image-wrap::after {
  position: absolute;
  content: "";
  background-image: url("../img/blog-entry-overlay.svg");
  left: 0;
  right: 0;
  bottom: 0;
  height: 52px;
  /*will not fit perfectly when width changes - update this soon*/
  background-repeat: no-repeat;
  background-size: 100%;
}

.services__image {
  display: block;
}

.services__description {
  padding: 2em;
  background-color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.services__border {
  height: 4px;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc;
  margin: 1em 0;
}

.services__description-heading {
  font-size: 1.3em;
  text-transform: uppercase;
  margin: .3em 0 .6em 0;
  color: #777;
  font-weight: 300;
}

.services__summary {
  color: #333;
  margin-bottom: 1em;
  -webkit-hyphens: auto;
      -ms-hyphens: auto;
          hyphens: auto;
}

.services__link {
  color: #777;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  position: relative;
  padding-bottom: .3em;
}

.services__link:hover {
  color: #333;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.services__link::after {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  content: "";
  height: 1px;
  -webkit-transform: scaleX(0);
          transform: scaleX(0);
  -webkit-transform-origin: left center;
          transform-origin: left center;
  z-index: 88;
  background-color: currentColor;
  -webkit-transition: -webkit-transform 350ms ease-out;
  transition: -webkit-transform 350ms ease-out;
  transition: transform 350ms ease-out;
  transition: transform 350ms ease-out, -webkit-transform 350ms ease-out;
}

.services__link:hover::after {
  -webkit-transform: scaleX(1);
          transform: scaleX(1);
}

.services__special {
  max-width: 33%;
  padding: 1.5em;
  margin: 5em auto 0 auto;
  border-top: 0.625em solid #867236;
  border-bottom: 0.625em solid #867236;
  border-radius: 3em;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#fefaf0));
  background-image: linear-gradient(#fff, #fefaf0);
}

.services__special-heading {
  text-align: center;
  font-weight: 300;
  text-transform: uppercase;
  font-size: 1.6em;
  color: #867236;
  margin-bottom: 1em;
}

.services__special-month {
  font-weight: 500;
}

.services__special-para {
  font-size: 1.2em;
  line-height: 1.4;
}

.services__table-wrap {
  width: 60%;
  position: relative;
  opacity: 0;
  pointer-events: none;
  -webkit-transform: scale(0);
          transform: scale(0);
  -webkit-transition: 400ms ease-out;
  transition: 400ms ease-out;
}

.services__table {
  width: 100%;
  border-collapse: collapse;
  /* only do a bottom radius as the caption has a top radius  */
  border-radius: 0 0 12px 12px;
  /* added this for border-radius to work */
  overflow: hidden;
}

.services__table-caption {
  padding: .5em 0 .5em 0;
  text-align: center;
  font-size: 3.4em;
  color: #333;
  background-color: #f0e9d5;
  /* mozilla needs the caption to have a border radius in order for the top of the table to have a border radius  */
  border-radius: 12px 12px 0 0;
}

.services__table-caption-span {
  font-family: 'Tangerine', cursive;
  line-height: .7;
  text-align: center;
  display: block;
  font-size: 2em;
  color: #867236;
}

.services__table tr:nth-of-type(odd) {
  background-color: #f0e9d5;
}

.services__table tr:nth-of-type(even) {
  background-color: #dccc9d;
}

.services__table th {
  text-align: left;
  padding: 0 1em;
  text-transform: uppercase;
  font-size: 2em;
  font-weight: 700;
}

.services__table td {
  padding: 1em 1em 1em 2em;
  font-weight: 500;
}

/** Animate services sects on scroll  ***/
.services__grid.animate-in .services__wrap {
  -webkit-transform: translateX(0);
          transform: translateX(0);
  opacity: 1;
}

/********  TABLE WRAPPER/MODAL STYLES  **********/
.cut-and-design_wrap, .color_wrap, .additional_wrap {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 100;
  background-color: rgba(0, 0, 0, 0.8);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  opacity: 0;
  pointer-events: none;
  -webkit-transition: all 600ms ease-out;
  transition: all 600ms ease-out;
}

.cut-and-design_wrap:target, .color_wrap:target, .additional_wrap:target {
  opacity: 1;
  pointer-events: auto;
}

.cut-and-design_wrap:target .services__table-wrap, .color_wrap:target .services__table-wrap, .additional_wrap:target .services__table-wrap {
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
  pointer-events: auto;
}

.close_modal {
  position: absolute;
  display: block;
  font-size: 3em;
  top: 0;
  right: 0;
  width: 1em;
  height: 1em;
  text-align: center;
  line-height: .9em;
  cursor: pointer;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
  color: #333;
  border-top-right-radius: 12px;
}

.close_modal:hover {
  color: #fff;
}

.gallery {
  padding-bottom: 12em;
}

.gallery__grid {
  pointer-events: none;
  max-width: 1280px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  grid-auto-flow: dense;
  grid-auto-rows: 300px;
}

.gallery__link {
  pointer-events: auto;
  display: block;
  overflow: hidden;
  background: #131212;
}

.gallery__link.featured {
  grid-row: span 2;
  grid-column: span 2;
}

@media (max-width: 35em) {
  .gallery__link.featured {
    grid-row: span 1;
    grid-column: span 1;
  }
}

.gallery__grid:hover .gallery__figure {
  opacity: .3;
}

.gallery__grid:hover .gallery__figure:hover {
  opacity: 1;
}

.gallery__figure {
  width: 100%;
  height: 100%;
  position: relative;
  -webkit-transition: opacity 800ms ease-out;
  transition: opacity 800ms ease-out;
  overflow: hidden;
}

.gallery__image {
  display: block;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

/****** ANIMATED HOVER STYLE one *****/
/*

.snip1576 {
    font-size: 24px;
    position: relative;
    background-color: #fff;
    color: #444;
    display: inline-block;
    overflow: hidden;
    text-align: center;
}

.snip1576 * {
    box-sizing: border-box;
    transition: all 0.45s ease;
}

.snip1576:after {
    transition: all 0.5s linear;
    content: '';
    position: absolute;
    background-color: $gold;
    height: 150%;
    bottom: -145%;
    left: 0;
    right: 0;
}

.snip1576 figcaption {
	line-height: 1.1em;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    transition-delay: 0s;
    opacity: 0;
}

.snip1576 h3 {
    font-size: 1em;
    font-weight: 400;
    letter-spacing: 1px;
    margin: 0;
    text-transform: uppercase;
}

.snip1576 h3 span {
    display: block;
    font-weight: 700;
    text-transform: none;
}

.snip1576:hover > img,
.snip1576.hover > img {
    opacity: .1;
}

.snip1576:hover:after,
.snip1576.hover:after {
    bottom: 95%;
}

.snip1576:hover figcaption,
.snip1576.hover figcaption {
    opacity: 1;
    transition-delay: .4s;
}

.demo .snip1576 {
    opacity: 1;
}

.demo a:hover .snip1576 {
    transform: none;
}

*/
/****** ANIMATED HOVER STYLE two *****/
/*

.snip1334 {
    position: relative;
    overflow: hidden;
    width: 100%;
    color: #fff;
    text-align: left;
    line-height: 1.4em;
}

.snip1334 * {
    box-sizing: border-box;
    transition: all 0.35s ease-out;
}

*/
/*
.snip1334 img {
    transition: all 0.8s ease-out;
}

.snip1334:before {
    transition: all 300ms ease-out 300ms;
    position: absolute;
    content: '';
    background: rgba(0,0,0,.7);
    z-index: 1;
    left: 50%;
    right: 50%;
    top: 0;
    bottom: 0;
    box-shadow: 0 0 50px white;
}

.snip1334 figcaption {
    position: absolute;
    top: 0;
    height: 100%;
    left: 0;
    width: 100%;
    z-index: 2;
}

.snip1334 h2 {
    position: absolute;
    top: 0;
    transform: translateY(-100%);
}

.snip1334 p {
    position: absolute;
    bottom: 0;
    padding-left: 60px !important;
    font-size: .8em;
    transform: translateY(100%);
}

.snip1334 h2, .snip1334 p {
    margin: 0;
    width: 100%;
    padding: 25px;
    opacity: 0;
}


.snip1334:hover:before {
    left: 0;
    right: 0;
    box-shadow: 0 0 0px white;
    transition-delay: 0s;
}

.snip1334:hover figcaption h2,
.snip1334:hover figcaption p {
    transition-delay: 300ms;
}

.snip1334:hover figcaption h2 {
    opacity: .5;
    transform: translateY(0);
}

.snip1334:hover figcaption p {
    opacity: .7;
    transform: translateY(0);
}


.demo .snip1334 {
    opacity: .7;
}

.demo a:hover .snip1334 {
    transform: none;
}

.demo .snip1334 figcaption {
    opacity: 1;
}


*/
.subscribe {
  background-image: url("https://res.cloudinary.com/jduquain/c_scale,f_auto,q_auto,w_1920/v1563458466/eandb/bg-subscribe.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center bottom;
  padding-top: 8em;
  padding-bottom: 8em;
}

@media (min-width: 75em) {
  .subscribe {
    padding: 8em calc(50% - 600px);
  }
}

.subscribe__heading {
  font-size: 1.5em;
  margin-bottom: 1em;
  font-weight: 400;
}

.subscribe__paragraph {
  text-align: center;
  margin-bottom: 4em;
}

.subscribe__form {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 3em 1.5em;
}

.subscribe__input, .subscribe__email {
  width: 100%;
  border-radius: 0 .25em .25em 0;
  padding: .375em .3125em .3125em;
  border: 1px solid #ccc;
  font: inherit;
  color: inherit;
  height: 2.125em;
  cursor: pointer;
}

.subscribe__input:focus, .subscribe__email:focus {
  outline: none;
  -webkit-box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
          box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
}

.subscribe__label {
  display: block;
  width: 100%;
  margin-bottom: .4em;
}

.subscribe__field-prefixed {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.subscribe__field-prefix {
  -webkit-transition: color 300ms ease-out 100ms;
  transition: color 300ms ease-out 100ms;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 2.2em;
          flex: 0 0 2.2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #ccc;
  border-right: 0;
  border-radius: .25em 0 0 .25em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: .375em .375em .3125em .375em;
  color: #867236;
  background-color: transparent;
}

.subscribe__field-prefix.input-color {
  color: #eee;
  background-color: #867236;
}

.subscribe__input-wrap:last-of-type {
  -ms-flex-item-align: end;
      align-self: end;
}

.testimonial {
  background-image: linear-gradient(105deg, #fff, #fff, 50%, transparent 50%), url("https://res.cloudinary.com/jduquain/c_scale,f_auto,q_auto,w_1920/v1563456911/eandb/bg-testimonial.jpg");
  background-attachment: fixed;
  background-size: cover;
  padding: 6em 2em 2em 2em;
}

@media (min-width: 75em) {
  .testimonial {
    padding: 6em calc(50% - 600px);
  }
}

.testimonial__cell {
  -webkit-box-shadow: 2px 2px 3px 3px rgba(224, 224, 224, 0.3);
          box-shadow: 2px 2px 3px 3px rgba(224, 224, 224, 0.3);
  background-color: #fff;
  border-radius: 5px;
  margin-left: 9em;
  margin-right: 9em;
  padding-bottom: 4em;
}

.testimonial__wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  border-bottom: 1px solid #ccc;
  padding: 1em;
}

.testimonial__image {
  width: 5em;
  height: 5em;
  border-radius: 50%;
  border: 1px solid #777;
  display: block;
}

.testimonial__name {
  font-size: 1.3em;
  font-style: italic;
  color: #777;
  text-align: center;
}

.testimonial__review {
  font-size: 1.1em;
  line-height: 1.6;
  color: #333;
  padding: 2em;
  position: relative;
  z-index: 2;
}

.testimonial__review::before {
  content: "\201C";
  color: #dccc9d;
  font-size: 14em;
  line-height: .5;
  position: absolute;
  top: .13em;
  left: -.03em;
  font-family: sans-serif;
  z-index: -1;
}

.slick-track {
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important;
  -webkit-box-align: center !important;
      -ms-flex-align: center !important;
          align-items: center !important;
}

footer {
  font-size: .8em;
  background-color: black;
  color: #888;
  padding: 3em;
}

@media (min-width: 80em) {
  footer {
    padding: 4em calc(50% - 640px);
  }
}

.logo-container {
  text-align: center;
  margin-bottom: 1.5em;
}

footer img {
  width: 7em;
  text-align: center;
}

div.footer--copyright {
  text-align: center;
  margin-top: 1.5em;
}

p.footer--main {
  max-width: 70%;
  margin: 0 auto 2.5em auto;
}

div.footerNavWrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-bottom: 2em;
}

div.footer--icons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 15%;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

@media (max-width: 52.5em) {
  div.footer--icons {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    margin-top: 1.6em;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    font-size: 1.4em;
  }
}

@media (max-width: 52.5em) {
  div.footer--icons a {
    -webkit-box-flex: initial;
        -ms-flex: initial;
            flex: initial;
  }
}

div.footer--icons a:not(:last-of-type) {
  margin-right: 1em;
}

div.footer--icons i {
  -webkit-transition: color 300ms ease-out 50ms;
  transition: color 300ms ease-out 50ms;
  color: #888;
  width: 1.5em;
  height: 1.5em;
  display: inline-block;
  background-color: #fff;
  border-radius: 50%;
  text-align: center;
  line-height: 1.5em;
  font-size: 1.4em;
}

div.footer--icons a:first-of-type i:hover {
  color: #3b5998;
}

div.footer--icons a:nth-of-type(2) i:hover {
  color: #cb2027;
}

div.footer--icons a:last-of-type i:hover {
  color: #c32aa3;
}

.footer__navs {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 70%;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  /*@include breakpoint(max-width $medium) {
        flex: 0 0 100%;
    }*/
}

.footer__links {
  color: #dccc9d;
  padding: 1em 2em;
  display: inline-block;
  text-transform: uppercase;
  -webkit-transition: background-color 300ms ease-out, -webkit-transform 300ms ease-out;
  transition: background-color 300ms ease-out, -webkit-transform 300ms ease-out;
  transition: background-color 300ms ease-out, transform 300ms ease-out;
  transition: background-color 300ms ease-out, transform 300ms ease-out, -webkit-transform 300ms ease-out;
}

.footer__links:hover {
  color: #867236;
  background-color: rgba(255, 255, 255, 0.15);
  -webkit-transform: translateY(-3px);
          transform: translateY(-3px);
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
