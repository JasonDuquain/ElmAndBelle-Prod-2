/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

@font-face {
  font-family: 'lucien_schoenschriftv_catRg';
  src: url("../fonts/Lucian Schoenschrift CAT-webfont.woff2") format("woff2"), url("../fonts/Lucian Schoenschrift CAT-webfont.woff") format("woff"), url("../fonts/Lucian Schoenschrift CAT-webfont.eot"), url("../fonts/Lucian Schoenschrift CAT-webfont.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
  outline: none;
}

:root {
  font-size: 1em;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  scroll-behavior: smooth;
}

@media (max-width: 61.25em) {
  :root {
    font-size: .9em;
  }
}

@media (max-width: 52.5em) {
  :root {
    font-size: .8em;
  }
}

a:active {
  color: #bf2b58;
}

body {
  font-size: 100%;
  font-family: 'Raleway', serif;
  color: #333;
  /* keeps horizontal scrollbars from appearing when items are animated to the left or right of the viewport */
  overflow-x: hidden;
  background-color: #f9fafb;
}

section {
  padding: 8em 2em;
}

@media (max-width: 52.5em) {
  section {
    padding: 5em 1em;
  }
}

.pre-heading {
  text-transform: uppercase;
  text-align: center;
  color: #9b9797;
  margin-bottom: .3em;
}

.sect-heading {
  font-size: 2.3em;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: .03em;
  margin-bottom: .2em;
  color: #333333;
}

.sect-heading-img {
  height: .8125em;
  width: 8.875em;
  background-image: url("../img/heading-img.svg");
  margin: 0 auto 4em auto;
  opacity: .5;
}

/* SIGN UP BUTTON IS AN ANCHOR..NOT A INPUT TYPE=SUBMIT */
.btn-standard {
  position: relative;
  color: #fff;
  display: inline-block;
  padding: .6em 1.2em;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#aa9145), to(#867236));
  background-image: linear-gradient(#aa9145, #867236);
  border-radius: 3px;
}

.btn-standard::before, .btn-standard::after {
  content: "";
  -webkit-transition: all 250ms;
  transition: all 250ms;
  position: absolute;
  border-color: transparent;
  border-style: solid;
  border-width: 0;
  height: 1.0909em;
  /* was 24px */
  width: 1.0909em;
  /* was 24px */
}

.btn-standard::before {
  border-top-width: .090em;
  /* was 2px */
  border-color: #867236;
  top: -.227em;
  /* was 5px */
  left: 0;
}

.btn-standard::after {
  border-bottom-width: .090em;
  /* was 2px */
  border-color: #867236;
  bottom: -.227em;
  /* was 5px */
  right: 0px;
}

.btn-standard:hover::before, .btn-standard:hover::after {
  width: 100%;
}

.btn-standard:active {
  color: #f9fafb;
}

.btn-flex {
  -ms-flex-item-align: center;
      align-self: center;
  margin-top: 1em;
}

@media (max-width: 28.125em) {
  .btn-flex {
    margin-top: .25em;
    margin-bottom: .25em;
  }
}

.js-btt-btn {
  position: fixed;
  bottom: -2.7em;
  right: .5em;
  width: 1.7em;
  height: 1.7em;
  border-radius: 50%;
  border: none;
  background-color: rgba(53, 49, 49, 0.8);
  text-align: center;
  line-height: 1.7em;
  color: #fff;
  font-size: 2em;
  opacity: 0;
  pointer-events: none;
  -webkit-transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  cursor: pointer;
  z-index: 9500;
}

.js-btt-btn.active {
  opacity: 1;
  bottom: 2.3em;
  pointer-events: auto;
}

.js-btt-btn:hover {
  background-color: black;
}

.js-btt-btn:hover {
  color: #eee;
}

.hamburger-icon {
  display: none;
  width: 26px;
  height: 23px;
  cursor: pointer;
  position: fixed;
  top: 14px;
  right: 16px;
  z-index: 8000;
}

@media (max-width: 47.5em) {
  .hamburger-icon {
    display: block;
  }
}

@media (max-width: 23.0625em) {
  .hamburger-icon {
    right: 10px;
  }
}

.hamburger-icon::before {
  content: "";
  position: absolute;
  top: 0;
  height: 4px;
  border-radius: 3em;
  background-color: #000;
  width: 100%;
  -webkit-transition: all 550ms ease-out;
  transition: all 550ms ease-out;
  -webkit-transform-origin: left center;
          transform-origin: left center;
}

.hamburger-icon__middle {
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  height: 4px;
  border-radius: 3em;
  width: 100%;
  background-color: #000;
  position: absolute;
  content: "";
  -webkit-transition: all 550ms ease-out;
  transition: all 550ms ease-out;
}

.hamburger-icon::after {
  content: "";
  position: absolute;
  height: 4px;
  border-radius: 3em;
  background-color: #000;
  width: 100%;
  bottom: 0;
  -webkit-transition: all 550ms ease-out;
  transition: all 550ms ease-out;
  -webkit-transform-origin: left center;
          transform-origin: left center;
}

.hamburger-icon.interact::before {
  -webkit-transform: rotate(45deg) scaleX(1.1);
          transform: rotate(45deg) scaleX(1.1);
}

.hamburger-icon.interact::after {
  -webkit-transform: rotate(-45deg) scaleX(1.1) translate(-1px, 1px);
          transform: rotate(-45deg) scaleX(1.1) translate(-1px, 1px);
}

.hamburger-icon.interact .hamburger-icon__middle {
  -webkit-transform: translateY(-50%) scaleX(0);
          transform: translateY(-50%) scaleX(0);
}

.site-header {
  -webkit-transition: all 400ms ease-out;
  transition: all 400ms ease-out;
  background-color: #fff;
  width: 100%;
}

.site-header__wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0 1.5em;
}

@media (min-width: 80em) {
  .site-header__wrap {
    padding: 0 calc(50% - 640px);
  }
}

.site-header__social {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.site-header__social:hover .site-header__social-link:not(:hover) {
  opacity: .80;
}

@media (max-width: 47.5em) {
  .site-header__social {
    display: none;
  }
}

.site-header__social-link {
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

.site-header__social-link:hover {
  -webkit-transform: scale(1.3);
          transform: scale(1.3);
}

.site-header__social-link:hover .fa.fa-facebook-square {
  color: #3b5998;
}

.site-header__social-link:hover .fa.fa-pinterest-square {
  color: #cb2027;
}

.site-header__social-link:hover .fa.fa-instagram {
  color: #c32aa3;
}

.site-header .fa {
  font-size: 1.5em;
  display: inline-block;
  color: #867236;
}

.site-header a:not(:first-of-type) {
  margin-left: .7em;
}

.site-header__logo-link {
  font-family: 'lucien_schoenschriftv_catRg', cursive;
  font-size: 3.8em;
  line-height: 1.5;
  color: #353131;
  -webkit-box-flex: 2;
      -ms-flex: 2;
          flex: 2;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 47.5em) {
  .site-header__logo-link {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 85%;
            flex: 0 0 85%;
    margin: 0 auto;
  }
}

@media (max-width: 35em) {
  .site-header__logo-link {
    font-size: 3.5em;
    line-height: 1.5;
  }
}

@media (max-width: 28.125em) {
  .site-header__logo-link {
    font-size: 2.8em;
  }
}

@media (max-width: 23.0625em) {
  .site-header__logo-link {
    font-size: 2.6em;
  }
}

.site-header__logo-link:active {
  color: #353131;
}

.site-header__amp {
  color: #867236;
}

.site-header__button-container {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 47.5em) {
  .site-header__button-container {
    display: none;
  }
}

.site-header__button:link, .site-header__button:visited {
  font-size: .85em;
  text-transform: uppercase;
  -webkit-transition: background-color 300ms ease-out;
  transition: background-color 300ms ease-out;
  padding: .8em 1.4em .7em 1.4em;
  color: #fff;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#aa9145), to(#867236));
  background-image: linear-gradient(#aa9145, #867236);
  border: 1px solid #867236;
  display: inline-block;
  border-radius: 99em;
}

.site-header__button:link:hover, .site-header__button:visited:hover {
  background-image: -webkit-gradient(linear, left top, left bottom, from(#dccc9d), to(#aa9145));
  background-image: linear-gradient(#dccc9d, #aa9145);
  border: 1px solid #cfb877;
}

.site-header__button-2:link, .site-header__button-2:visited {
  background-image: none;
  background-color: transparent;
  border: 1px solid #867236;
  color: #867236;
}

.site-header__button-2:link:hover, .site-header__button-2:visited:hover {
  background-color: #867236;
  color: #fff;
  border-color: #dccc9d;
}

.navigation {
  padding: .75em 1.5em;
  -webkit-transition: background-color 350ms ease-in;
  transition: background-color 350ms ease-in;
  border-top: 1px solid #ccc;
}

@media (min-width: 75em) {
  .navigation {
    padding: 0.75em calc(50% - 600px);
  }
}

@media (max-width: 47.5em) {
  .navigation {
    display: none;
  }
}

.navigation__amp {
  color: #dccc9d;
}

.navigation__logo-text {
  font-family: 'lucien_schoenschriftv_catRg', cursive;
  font-size: 2.7em;
  text-transform: none;
}

.navigation__list {
  width: 70%;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-transform: translateY(1px);
          transform: translateY(1px);
}

.navigation__item--hide {
  margin-left: 2em;
  display: none;
}

.navigation__item--hide .navigation__link:link::after, .navigation__item--hide .navigation__link:visited::after {
  display: none;
}

.navigation__link:link, .navigation__link:visited {
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
  display: inline-block;
  font-size: .85em;
  font-weight: 500;
  color: #353131;
  text-transform: uppercase;
  letter-spacing: .03em;
  position: relative;
  padding-bottom: .4em;
}

.navigation__link:link:hover, .navigation__link:visited:hover {
  color: #867236;
}

.navigation__link:link::after, .navigation__link:visited::after {
  -webkit-transition: left 300ms ease-in, right 300ms ease-in;
  transition: left 300ms ease-in, right 300ms ease-in;
  position: absolute;
  content: "";
  left: 50%;
  right: 50%;
  bottom: 0;
  height: 2px;
  background-color: #867236;
}

.navigation__link:hover::after {
  left: 0;
  right: 0;
}

.navigation.fixed {
  position: fixed;
  z-index: 200;
  top: 0;
  left: 0;
  right: 0;
  padding: .75em 2em;
  background-color: rgba(0, 0, 0, 0.5);
  -webkit-box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);
          box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);
  overflow: hidden;
  /* added to keep the sticky nav from expanding when logo animation happens */
}

.navigation.fixed .navigation__list {
  width: 100%;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  max-width: 1280px;
}

.navigation.fixed .navigation__item--hide {
  margin-right: auto;
  display: block;
}

.navigation.fixed .navigation__item {
  margin-left: 2em;
}

.navigation.fixed .navigation__item--hide {
  margin-left: 0;
}

.navigation.fixed .navigation__link:link, .navigation.fixed .navigation__link:visited {
  color: #fff;
}

.navigation.fixed .navigation__link.active:link, .navigation.fixed .navigation__link.active:visited {
  color: #dccc9d;
}

.navigation.fixed .navigation__link.active:link::after, .navigation.fixed .navigation__link.active:visited::after {
  background-color: #dccc9d;
  color: #dccc9d;
  left: 0;
  right: 0;
  -webkit-transition-delay: 300ms;
          transition-delay: 300ms;
  /* added to try to keep other links from starting to animate this on the way down/up to the target link */
}

.navigation.fixed .navigation__link:link::after, .navigation.fixed .navigation__link:visited::after {
  background-color: #dccc9d;
}

@media (max-width: 47.5em) {
  .navigation.hamburger-on {
    display: block;
  }
  .navigation.hamburger-on .navigation__list {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    width: 80%;
  }
  .navigation.hamburger-on .navigation__item {
    background-color: #9b9797;
    text-align: center;
  }
  .navigation.hamburger-on .navigation__item:not(:last-of-type) {
    border-bottom: 1px dotted #fff;
  }
  .navigation.hamburger-on .navigation__link {
    color: #fff;
    padding: 1em;
    display: block;
    font-size: .9em;
    -webkit-transform: translateY(1px);
            transform: translateY(1px);
  }
  .navigation.hamburger-on .navigation__link:hover {
    background-color: #dccc9d;
    color: #fff;
  }
  .navigation.hamburger-on .navigation__link:hover::after {
    left: 50%;
    right: 50%;
  }
  /***** FIXED HEADER  ******/
  .navigation.hamburger-on.fixed .navigation__item {
    width: 60%;
    margin-left: 0;
  }
}

@media (max-width: 47.5em) and (max-width: 35em) {
  .navigation.hamburger-on.fixed .navigation__item {
    width: 70%;
  }
}

@media (max-width: 47.5em) {
  .navigation.hamburger-on.fixed .navigation__item--hide {
    display: none;
  }
  .navigation.hamburger-on.fixed .navigation__link.active:link, .navigation.hamburger-on.fixed .navigation__link.active:visited {
    color: #dccc9d;
  }
  .navigation.hamburger-on.fixed .navigation__link.active:link:hover, .navigation.hamburger-on.fixed .navigation__link.active:visited:hover {
    color: #fff;
  }
  .navigation.hamburger-on.fixed .navigation__link.active:link::after, .navigation.hamburger-on.fixed .navigation__link.active:visited::after {
    left: 50%;
    right: 50%;
  }
}

.large-hero {
  height: 55vw;
  border-bottom: 0.6vw solid #dccc9d;
  position: relative;
  overflow: hidden;
}

@media (max-width: 61.25em) {
  .large-hero {
    height: 64vw;
  }
}

@media (max-width: 43.75em) {
  .large-hero {
    height: 90vw;
  }
}

@media (max-width: 35em) {
  .large-hero {
    height: 150vw;
  }
}

.large-hero__image {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  display: block;
  -o-object-position: 60% 100%;
     object-position: 60% 100%;
}

.large-hero__overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: #333 center/cover no-repeat;
  z-index: 0;
  -webkit-filter: blur(4px);
          filter: blur(4px);
  opacity: 0;
}

.large-hero__main-heading {
  text-align: center;
  font-family: 'Tangerine', cursive;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
  font-size: 3.8em;
  line-height: 1.06;
  color: #fff;
  margin: 0;
  position: absolute;
  top: 9%;
  left: 49%;
  -webkit-transform: translate(-50%, 0%);
          transform: translate(-50%, 0%);
  width: 66%;
  max-width: 850px;
  z-index: 1;
}

@media (max-width: 43.75em) {
  .large-hero__main-heading {
    width: 81%;
  }
}

@media (max-width: 35em) {
  .large-hero__main-heading {
    font-size: 3.7em;
    width: 86%;
  }
}

@media (max-width: 28.125em) {
  .large-hero__main-heading {
    font-size: 3.51em;
    width: 97%;
  }
}

@media (max-width: 23.0625em) {
  .large-hero__main-heading {
    font-size: 3em;
    width: 98%;
  }
}

.large-hero__quote {
  opacity: 0;
  display: block;
}

.large-hero__quote--4 {
  font-family: 'Raleway', sans-serif;
  font-size: .5em;
  font-weight: 300;
  display: block;
  text-align: right;
  margin-top: .88em;
}

.large-hero__amp {
  font-size: 1.4em;
  line-height: .6;
}

.large-hero__amp--right {
  margin-left: 13px;
}

@-webkit-keyframes fade-in {
  100% {
    opacity: 1;
  }
}

@keyframes fade-in {
  100% {
    opacity: 1;
  }
}

.large-hero.loaded .large-hero__quote {
  -webkit-animation: fade-in 800ms 700ms ease-in both;
          animation: fade-in 800ms 700ms ease-in both;
}

.large-hero.loaded .large-hero__quote--2 {
  -webkit-animation-delay: 2000ms;
          animation-delay: 2000ms;
}

.large-hero.loaded .large-hero__quote--3 {
  -webkit-animation-delay: 4000ms;
          animation-delay: 4000ms;
}

.large-hero.loaded .large-hero__quote--4 {
  -webkit-animation-delay: 5300ms;
          animation-delay: 5300ms;
}

.rotate-1 span {
  display: block;
  -webkit-transform: rotate(-45deg) translate(-0.1em, 0.5em);
          transform: rotate(-45deg) translate(-0.1em, 0.5em);
  -webkit-transform-origin: left center;
          transform-origin: left center;
}

.rotate-2 span {
  display: block;
  -webkit-transform: rotate(45deg) translate(-0.4em, -0.75em);
          transform: rotate(45deg) translate(-0.4em, -0.75em);
  -webkit-transform-origin: left center;
          transform-origin: left center;
}

.intro {
  /*****   SUMMARY   ******/
  /*****    BRAND LOGOS    *****/
}

@media (min-width: 80em) {
  .intro {
    padding: 6em calc(50% - 627px);
  }
}

.intro__grid {
  display: grid;
  grid-template-columns: 1.5fr 1fr;
  grid-column-gap: .5em;
  margin: 4em 0;
}

@media (max-width: 43.75em) {
  .intro__grid {
    grid-template-columns: 1fr;
    grid-column-gap: 0;
    grid-row-gap: 1em;
  }
}

.intro__summary {
  -ms-flex-item-align: center;
      align-self: center;
}

@media (max-width: 43.75em) {
  .intro__summary {
    padding: 3em;
    font-size: 1.2em;
  }
}

@media (max-width: 35em) {
  .intro__summary {
    padding: 2em 0;
  }
}

@media (max-width: 28.125em) {
  .intro__summary {
    font-size: 1.1em;
  }
}

.intro__summary p:first-of-type::first-letter {
  font-family: serif;
  font-size: 4.6em;
  line-height: .9;
  float: left;
  color: #867236;
  margin-right: .1em;
}

.intro__summary p {
  font-size: 1.1em;
  line-height: 1.5;
}

.intro__summary p:not(:last-of-type) {
  margin-bottom: .8em;
}

.intro__link {
  color: #aa9145;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.intro__link:hover {
  color: #867236;
}

.intro__brands {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(8.437em, 1fr));
  grid-gap: 2em;
  width: 90%;
  justify-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin: 0 auto;
}

@media (max-width: 35em) {
  .intro__brands {
    width: 100%;
  }
}

.intro__brands__heading {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  grid-gap: .75em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  color: rgba(171, 147, 116, 0.8);
  font-size: 1.4em;
  font-weight: 500;
  line-height: 1;
  margin: 2.5em 0;
  text-transform: uppercase;
}

.intro__brands__heading::before, .intro__brands__heading::after {
  content: "";
  height: .3125em;
  border-radius: .625em;
  background-image: -webkit-gradient(linear, left top, right top, from(rgba(171, 147, 116, 0.8)), to(transparent));
  background-image: linear-gradient(to right, rgba(171, 147, 116, 0.8), transparent);
}

.intro__brands__heading::before {
  background-image: -webkit-gradient(linear, right top, left top, from(rgba(171, 147, 116, 0.8)), to(transparent));
  background-image: linear-gradient(to left, rgba(171, 147, 116, 0.8), transparent);
}

.intro__brands__img {
  width: 9.375em;
  height: 6.25em;
  -o-object-fit: cover;
     object-fit: cover;
  opacity: .35;
  -webkit-filter: grayscale(100%);
          filter: grayscale(100%);
  -webkit-transition: 400ms ease-out;
  transition: 400ms ease-out;
}

.intro__brands__img:hover {
  opacity: 1;
  -webkit-filter: grayscale(0);
          filter: grayscale(0);
}

/******** DIAMOND INTRO GRID  *********/
@media (max-width: 70em) {
  .img-clip-block {
    -ms-flex-item-align: center;
        align-self: center;
  }
}

.img-clip-row {
  text-align: center;
  margin-top: -9.505em;
}

@media (max-width: 70em) {
  .img-clip-row {
    margin-top: -7.625em;
  }
}

@media (max-width: 61.25em) {
  .img-clip-row {
    margin-top: -7.05em;
  }
}

@media (max-width: 52.5em) {
  .img-clip-row {
    margin-top: -6.95em;
  }
}

@media (max-width: 28.125em) {
  .img-clip-row {
    margin-top: -6.5em;
  }
}

@media (max-width: 23.0625em) {
  .img-clip-row {
    margin-top: -5.1em;
  }
}

.img-clip-wrap {
  display: inline-block;
  width: 18.75em;
  /* was 300px */
  height: 18.75em;
  /* was 300px */
  background-image: url("https://res.cloudinary.com/jduquain/c_fill,f_auto,h_600,q_auto,w_600/v1564019205/eandb/diamond_lhkr7u.jpg");
  /* 600x600 */
  background-repeat: no-repeat;
  margin-left: auto;
  margin-right: auto;
  position: relative;
  -webkit-clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
          clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
}

@media (max-width: 70em) {
  .img-clip-wrap {
    width: 15em;
    height: 15em;
    background-image: url("https://res.cloudinary.com/jduquain/c_fill,f_auto,h_480,q_auto,w_480/v1564019205/eandb/diamond_lhkr7u.jpg");
  }
}

@media (max-width: 61.25em) {
  .img-clip-wrap {
    width: 14em;
    height: 14em;
    background-image: url("https://res.cloudinary.com/jduquain/c_fill,f_auto,h_403,q_auto,w_403/v1564019205/eandb/diamond_lhkr7u.jpg");
  }
}

@media (max-width: 52.5em) {
  .img-clip-wrap {
    width: 13.8em;
    height: 13.8em;
    background-image: url("https://res.cloudinary.com/jduquain/c_fill,f_auto,h_353,q_auto,w_353/v1564019205/eandb/diamond_lhkr7u.jpg");
  }
}

@media (max-width: 28.125em) {
  .img-clip-wrap {
    width: 13em;
    height: 13em;
    background-image: url("https://res.cloudinary.com/jduquain/c_fill,f_auto,h_333,q_auto,w_333/v1564019205/eandb/diamond_lhkr7u.jpg");
  }
}

@media (max-width: 23.0625em) {
  .img-clip-wrap {
    width: 10em;
    height: 10em;
    background-image: url("https://res.cloudinary.com/jduquain/c_fill,f_auto,h_256,q_auto,w_256/v1564019205/eandb/diamond_lhkr7u.jpg");
  }
}

.img-clip-row:first-of-type {
  margin-top: auto;
}

.img-clip-row:first-of-type .img-clip-wrap {
  background-position: top;
}

.img-clip-row:nth-of-type(2) .img-clip-wrap:nth-of-type(odd) {
  background-position: left;
}

.img-clip-row:nth-of-type(2) .img-clip-wrap:nth-of-type(even) {
  background-position: right;
}

.img-clip-row:last-of-type .img-clip-wrap {
  background-position: bottom;
}

.overlay {
  -webkit-transition: all 400ms linear;
  transition: all 400ms linear;
  background: rgba(171, 147, 116, 0.75);
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 888;
}

.overlay-content {
  font-family: 'lucien_schoenschriftv_catRg', cursive;
  color: #fff;
  font-weight: 400;
  font-size: 250%;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
}

@media (max-width: 70em) {
  .overlay-content {
    font-size: 210%;
  }
}

@media (max-width: 28.125em) {
  .overlay-content {
    font-size: 190%;
  }
}

@media (max-width: 23.0625em) {
  .overlay-content {
    font-size: 150%;
  }
}

.overlay-content.ampersand {
  color: #dccc9d;
}

.overlay-content img {
  width: 100%;
  height: auto;
}

@media (max-width: 70em) {
  .overlay-content img {
    width: 90%;
  }
}

.img-clip-wrap:hover .overlay {
  -webkit-transition: all 0.4s ease-in;
  transition: all 0.4s ease-in;
  background: none;
  /* transparent would also work */
}

.services {
  /**********   SERVICES TABLE LIST   **********/
  /* IF THERE ARE ANY MORE ISSUES WITH BEING TOO NARROW AT MOBILE WIDTHS ADD A MIN-WIDTH */
}

@media (max-width: 28.125em) {
  .services {
    padding-right: 0;
    padding-left: 0;
  }
}

.services__grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  grid-gap: 1em;
  max-width: 1280px;
  margin: 0 auto;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

@media (max-width: 73.125em) {
  .services__grid {
    grid-template-columns: repeat(auto-fit, minmax(310px, 1fr));
  }
}

@media (max-width: 65.625em) {
  .services__grid {
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    -webkit-box-align: initial;
        -ms-flex-align: initial;
            align-items: initial;
    justify-items: center;
  }
}

@media (max-width: 56.25em) {
  .services__grid {
    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
    grid-row-gap: 2.5em;
    font-size: 1.1em;
  }
}

@media (max-width: 52.5em) {
  .services__grid {
    font-size: 1.2em;
  }
}

@media (max-width: 35em) {
  .services__grid {
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  }
}

@media (max-width: 28.125em) {
  .services__grid {
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  }
}

@media (max-width: 23.0625em) {
  .services__grid {
    grid-template-columns: repeat(auto-fit, minmax(310px, 1fr));
  }
}

.services__main {
  width: 400px;
  position: relative;
  border-radius: 3px;
  -webkit-box-shadow: 0 0 2px 2px rgba(204, 204, 204, 0.3);
          box-shadow: 0 0 2px 2px rgba(204, 204, 204, 0.3);
}

@media (max-width: 81.25em) {
  .services__main {
    width: 350px;
  }
}

@media (max-width: 73.125em) {
  .services__main {
    width: 310px;
  }
}

@media (max-width: 65.625em) {
  .services__main {
    width: 400px;
  }
}

@media (max-width: 56.25em) {
  .services__main {
    width: 500px;
  }
}

@media (max-width: 35em) {
  .services__main {
    width: 400px;
  }
}

@media (max-width: 28.125em) {
  .services__main {
    width: 350px;
  }
}

@media (max-width: 23.0625em) {
  .services__main {
    width: 310px;
  }
}

.services__image-wrap {
  position: relative;
}

.services__image-wrap::after {
  position: absolute;
  content: "";
  background-image: url("../img/curve-overlay.svg");
  left: 0;
  right: 0;
  bottom: 0;
  height: 52px;
  background-repeat: no-repeat;
  background-size: 100%;
}

@media (max-width: 81.25em) {
  .services__image-wrap::after {
    height: 45px;
  }
}

@media (max-width: 73.125em) {
  .services__image-wrap::after {
    height: 40px;
  }
}

@media (max-width: 65.625em) {
  .services__image-wrap::after {
    height: 52px;
  }
}

@media (max-width: 56.25em) {
  .services__image-wrap::after {
    height: 65px;
  }
}

@media (max-width: 35em) {
  .services__image-wrap::after {
    height: 52px;
  }
}

@media (max-width: 28.125em) {
  .services__image-wrap::after {
    height: 45px;
  }
}

@media (max-width: 23.0625em) {
  .services__image-wrap::after {
    height: 40px;
  }
}

.services__image {
  display: block;
  width: 100%;
  height: 100%;
}

.services__description {
  padding: 2em;
  background-color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

@media (max-width: 28.125em) {
  .services__description {
    padding: 1em 2em;
  }
}

.services__border {
  height: 4px;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc;
  margin: 1em 0;
}

.services__description-heading {
  font-size: 1.4em;
  text-transform: uppercase;
  margin: .3em 0 .85em 0;
  color: #7a7575;
  font-weight: 300;
}

.services__list {
  color: #353131;
  margin-bottom: .5em;
}

.services__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.services__item + .services__item {
  margin-top: .6em;
}

.services .fa {
  font-size: 1.3em;
  display: inline-block;
  color: #867236;
  margin-right: .25em;
}

.services__link {
  color: #7a7575;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  position: relative;
  padding-bottom: .3em;
}

.services__link:hover {
  color: #353131;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.services__link::after {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  content: "";
  height: 1px;
  -webkit-transform: scaleX(0);
          transform: scaleX(0);
  -webkit-transform-origin: left center;
          transform-origin: left center;
  z-index: 88;
  background-color: currentColor;
  -webkit-transition: -webkit-transform 350ms ease-out;
  transition: -webkit-transform 350ms ease-out;
  transition: transform 350ms ease-out;
  transition: transform 350ms ease-out, -webkit-transform 350ms ease-out;
}

.services__link:hover::after {
  -webkit-transform: scaleX(1);
          transform: scaleX(1);
}

.services__special {
  max-width: 33%;
  padding: 1.5em;
  margin: 5em auto 0 auto;
  border-top: 0.625em solid #867236;
  border-bottom: 0.625em solid #867236;
  border-radius: 3em;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#fefaf0));
  background-image: linear-gradient(#fff, #fefaf0);
}

.services__special-heading {
  text-align: center;
  font-weight: 300;
  text-transform: uppercase;
  font-size: 1.6em;
  color: #867236;
  margin-bottom: 1em;
}

.services__special-month {
  font-weight: 500;
}

.services__special-para {
  font-size: 1.2em;
  line-height: 1.4;
}

.services__table-wrap {
  max-width: 840px;
  margin: 0 auto;
  display: none;
  width: 70%;
  position: relative;
  opacity: 0;
  pointer-events: none;
  -webkit-transform: scale(0);
          transform: scale(0);
  -webkit-transition: all 400ms ease-out;
  transition: all 400ms ease-out;
}

@media (max-width: 43.75em) {
  .services__table-wrap {
    width: 80%;
  }
}

@media (max-width: 35em) {
  .services__table-wrap {
    width: 85%;
  }
}

@media (max-width: 28.125em) {
  .services__table-wrap {
    width: 90%;
  }
}

.services__table-wrap.enabled {
  display: block;
}

.services__table {
  width: 100%;
  border-collapse: collapse;
  /* only do a bottom radius as the caption has a top radius  */
  border-radius: 0 0 12px 12px;
  /* added this for border-radius to work */
  overflow: hidden;
}

.services__table-caption {
  padding: .25em 0 .25em 0;
  text-align: center;
  font-size: 2.8em;
  color: #333;
  background-color: #f0e9d5;
  /* mozilla needs the caption to have a border radius in order for the top of the table to have a border radius  */
  border-radius: 12px 12px 0 0;
}

@media (max-width: 35em) {
  .services__table-caption {
    font-size: 2.4em;
  }
}

@media (max-width: 28.125em) {
  .services__table-caption {
    font-size: 1.7em;
  }
}

.services__table-caption-span {
  font-family: 'Tangerine', cursive;
  line-height: .7;
  text-align: center;
  display: block;
  font-size: 1.6em;
  color: #867236;
}

.services__table tr:nth-of-type(odd) {
  background-color: #f0e9d5;
}

.services__table tr:nth-of-type(even) {
  background-color: #dccc9d;
}

.services__table th {
  text-align: left;
  padding: 0 .75em;
  text-transform: uppercase;
  font-size: 1.4em;
  font-weight: 700;
}

@media (max-width: 35em) {
  .services__table th {
    font-size: 1.3em;
  }
}

@media (max-width: 28.125em) {
  .services__table th {
    font-size: 1.1em;
  }
}

.services__table td {
  padding: .6em .75em .6em 1.1em;
  font-weight: 500;
}

@media (max-width: 28.125em) {
  .services__table td {
    font-size: .9em;
  }
}

/** Animate services sects on scroll  ***/
/*

.services__grid.animate-in .services__wrap {
    transform: translateX(0); 
    opacity: 1;
}

*/
/********  TABLE WRAPPER/MODAL STYLES  **********/
.cut-and-design_wrap, .color_wrap, .additional_wrap {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 100;
  background-color: rgba(0, 0, 0, 0.8);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  opacity: 0;
  pointer-events: none;
  -webkit-transition: all 400ms ease-out;
  transition: all 400ms ease-out;
}

.cut-and-design_wrap:target, .color_wrap:target, .additional_wrap:target {
  opacity: 1;
  pointer-events: auto;
}

.cut-and-design_wrap:target .services__table-wrap, .color_wrap:target .services__table-wrap, .additional_wrap:target .services__table-wrap {
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
  pointer-events: auto;
}

.close_modal {
  position: absolute;
  display: block;
  font-size: 3em;
  top: 0;
  right: 0;
  width: 1em;
  height: 1em;
  text-align: center;
  line-height: .9em;
  cursor: pointer;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
  color: #353131;
  border-top-right-radius: 12px;
}

.close_modal:hover {
  color: #9b9797;
}

.wrap-close {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* iphone5 */
@media only screen and (min-device-width: 325px) and (max-device-width: 573px) and (orientation: portrait) {
  .services__table-wrap {
    width: 90%;
    color: #111;
  }
  .services__table-caption {
    font-size: 1.4em;
  }
  .services__table-caption-span {
    font-size: 2.2em;
  }
  .services__table th {
    font-size: .9em;
  }
}

/* iphone5 */
@media only screen and (min-device-width: 380px) and (max-device-width: 673px) and (orientation: portrait) {
  .services__table-wrap {
    width: 90%;
    color: #111;
  }
  .services__table-caption {
    font-size: 1.4em;
  }
  .services__table-caption-span {
    font-size: 2.2em;
  }
  .services__table th {
    font-size: .9em;
  }
}

/*********** LANDSCAPE STYLES and laptops that are not very high i.e 1280 x 570 ***********/
@media screen and (orientation: landscape) and (max-height: 600px) {
  .services__table-wrap {
    width: 68%;
    color: #111;
  }
  .services__table-caption {
    font-size: 1.4em;
  }
  .services__table-caption-span {
    font-size: 2.2em;
  }
  .services__table th {
    font-size: .9em;
  }
  .services__table td {
    font-size: .8em;
    padding: .50em .50em .50em 1.1em;
  }
}

.gallery {
  padding-bottom: 18em;
}

@media (max-width: 43.75em) {
  .gallery {
    padding: 5em 0 12em 0;
  }
}

.gallery__grid {
  pointer-events: none;
  max-width: 1280px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(18.75em, 1fr));
  grid-auto-flow: dense;
  grid-auto-rows: 20em;
}

@media (max-width: 43.75em) {
  .gallery__grid {
    grid-template-columns: repeat(auto-fit, minmax(15em, 1fr));
    grid-auto-rows: 17em;
  }
}

@media (max-width: 28.125em) {
  .gallery__grid {
    grid-template-columns: repeat(auto-fit, minmax(11em, 1fr));
    grid-auto-rows: 12.5em;
  }
}

.gallery__link {
  pointer-events: auto;
  display: block;
  background: #131212;
  /* 
        overflow: hidden;
        width: 100%;
        height: 100%;
        
        */
}

.gallery__link.featured {
  grid-row: span 2;
  grid-column: span 2;
  /*@include breakpoint(max-width $small) {
            grid-row: span 1;
            grid-column: span 1;
        }*/
}

.gallery__link.tall {
  grid-row: span 2;
}

.gallery__grid:hover .gallery__figure {
  opacity: .3;
}

.gallery__grid:hover .gallery__figure:hover {
  opacity: 1;
}

.gallery__figure {
  width: 100%;
  height: 100%;
  -webkit-transition: opacity 800ms ease-out;
  transition: opacity 800ms ease-out;
}

.gallery__image {
  display: block;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

/****** ANIMATED HOVER STYLE one *****/
/*

.snip1576 {
    font-size: 24px;
    position: relative;
    background-color: #fff;
    color: #444;
    display: inline-block;
    overflow: hidden;
    text-align: center;
}

.snip1576 * {
    box-sizing: border-box;
    transition: all 0.45s ease;
}

.snip1576:after {
    transition: all 0.5s linear;
    content: '';
    position: absolute;
    background-color: $gold;
    height: 150%;
    bottom: -145%;
    left: 0;
    right: 0;
}

.snip1576 figcaption {
	line-height: 1.1em;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    transition-delay: 0s;
    opacity: 0;
}

.snip1576 h3 {
    font-size: 1em;
    font-weight: 400;
    letter-spacing: 1px;
    margin: 0;
    text-transform: uppercase;
}

.snip1576 h3 span {
    display: block;
    font-weight: 700;
    text-transform: none;
}

.snip1576:hover > img,
.snip1576.hover > img {
    opacity: .1;
}

.snip1576:hover:after,
.snip1576.hover:after {
    bottom: 95%;
}

.snip1576:hover figcaption,
.snip1576.hover figcaption {
    opacity: 1;
    transition-delay: .4s;
}

.demo .snip1576 {
    opacity: 1;
}

.demo a:hover .snip1576 {
    transform: none;
}

*/
/****** ANIMATED HOVER STYLE two *****/
/*

.snip1334 {
    position: relative;
    overflow: hidden;
    width: 100%;
    color: #fff;
    text-align: left;
    line-height: 1.4em;
}

.snip1334 * {
    box-sizing: border-box;
    transition: all 0.35s ease-out;
}

*/
/*
.snip1334 img {
    transition: all 0.8s ease-out;
}

.snip1334:before {
    transition: all 300ms ease-out 300ms;
    position: absolute;
    content: '';
    background: rgba(0,0,0,.7);
    z-index: 1;
    left: 50%;
    right: 50%;
    top: 0;
    bottom: 0;
    box-shadow: 0 0 50px white;
}

.snip1334 figcaption {
    position: absolute;
    top: 0;
    height: 100%;
    left: 0;
    width: 100%;
    z-index: 2;
}

.snip1334 h2 {
    position: absolute;
    top: 0;
    transform: translateY(-100%);
}

.snip1334 p {
    position: absolute;
    bottom: 0;
    padding-left: 60px !important;
    font-size: .8em;
    transform: translateY(100%);
}

.snip1334 h2, .snip1334 p {
    margin: 0;
    width: 100%;
    padding: 25px;
    opacity: 0;
}


.snip1334:hover:before {
    left: 0;
    right: 0;
    box-shadow: 0 0 0px white;
    transition-delay: 0s;
}

.snip1334:hover figcaption h2,
.snip1334:hover figcaption p {
    transition-delay: 300ms;
}

.snip1334:hover figcaption h2 {
    opacity: .5;
    transform: translateY(0);
}

.snip1334:hover figcaption p {
    opacity: .7;
    transform: translateY(0);
}


.demo .snip1334 {
    opacity: .7;
}

.demo a:hover .snip1334 {
    transform: none;
}

.demo .snip1334 figcaption {
    opacity: 1;
}


*/
.tns-outer {
  padding: 0 !important;
}

.tns-outer [hidden] {
  display: none !important;
}

.tns-outer [aria-controls],
.tns-outer [data-action] {
  cursor: pointer;
}

.tns-slider {
  -webkit-transition: all 0s;
  transition: all 0s;
}

.tns-slider > .tns-item {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.tns-horizontal.tns-subpixel {
  white-space: nowrap;
}

.tns-horizontal.tns-subpixel > .tns-item {
  display: inline-block;
  vertical-align: top;
  white-space: normal;
}

.tns-horizontal.tns-no-subpixel:after {
  content: '';
  display: table;
  clear: both;
}

.tns-horizontal.tns-no-subpixel > .tns-item {
  float: left;
}

.tns-horizontal.tns-carousel.tns-no-subpixel > .tns-item {
  margin-right: -100%;
}

.tns-no-calc {
  position: relative;
  left: 0;
}

.tns-gallery {
  position: relative;
  left: 0;
  min-height: 1px;
}

.tns-gallery > .tns-item {
  position: absolute;
  left: -100%;
  -webkit-transition: transform 0s, opacity 0s;
  -webkit-transition: opacity 0s, -webkit-transform 0s;
  transition: opacity 0s, -webkit-transform 0s;
  transition: transform 0s, opacity 0s;
  transition: transform 0s, opacity 0s, -webkit-transform 0s;
}

.tns-gallery > .tns-slide-active {
  position: relative;
  left: auto !important;
}

.tns-gallery > .tns-moving {
  -webkit-transition: all 0.25s;
  transition: all 0.25s;
}

.tns-autowidth {
  display: inline-block;
}

.tns-lazy-img {
  -webkit-transition: opacity 0.6s;
  transition: opacity 0.6s;
  opacity: 0.6;
}

.tns-lazy-img.tns-complete {
  opacity: 1;
}

.tns-ah {
  -webkit-transition: height 0s;
  transition: height 0s;
}

.tns-ovh {
  overflow: hidden;
}

.tns-visually-hidden {
  position: absolute;
  left: -10000em;
}

.tns-transparent {
  opacity: 0;
  visibility: hidden;
}

.tns-fadeIn {
  opacity: 1;
  filter: alpha(opacity=100);
  z-index: 0;
}

.tns-normal,
.tns-fadeOut {
  opacity: 0;
  filter: alpha(opacity=0);
  z-index: -1;
}

.tns-vpfix {
  white-space: nowrap;
}

.tns-vpfix > div,
.tns-vpfix > li {
  display: inline-block;
}

.tns-t-subp2 {
  margin: 0 auto;
  width: 310px;
  position: relative;
  height: 10px;
  overflow: hidden;
}

.tns-t-ct {
  width: 2333.3333333%;
  width: calc(100% * 70 / 3);
  position: absolute;
  right: 0;
}

.tns-t-ct:after {
  content: '';
  display: table;
  clear: both;
}

.tns-t-ct > div {
  width: 1.4285714%;
  width: calc(100% / 70);
  height: 10px;
  float: left;
}

.tns-outer {
  position: relative;
}

/* removing dots for now */
.tns-nav {
  display: none;
}

/*
.tns-nav button {
    width: 1.2em;
    height: 1.2em;
    background-color: red;
    border-radius: 50%;
    display: inline-block;
    border: none;
    margin: 0 .25em;
}

.tns-nav button:hover {
    opacity: .6;
}

.tns-nav .tns-nav-active {
    background-color: green;
}
*/
/* UNCOMMENT IF CUSTOM CONTROLS DONT WORK


.tns-controls button:first-of-type {
    position: absolute;
    bottom: 1em;
    left: 0;
    border: none;
    font-family: inherit;
    font-size: inherit;
    
    z-index: 5000;
}

.tns-controls button:last-of-type {
    position: absolute;
    bottom: 1em;
    right: 0;
    border: none;
    font-family: inherit;
    font-size: inherit;
    
     z-index: 5000;   

}


*/
.customize-controls li:first-of-type {
  position: absolute;
  content: "";
  bottom: -1.4em;
  left: 30%;
  -webkit-transform: translateX(-30%);
          transform: translateX(-30%);
  z-index: 5001;
  color: #aa9145;
  /*height: 60px;
    line-height: 60px;
    padding: 0 15px;*/
  font-size: 2.5em;
  cursor: pointer;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.customize-controls li:last-of-type {
  position: absolute;
  content: "";
  bottom: -1.4em;
  right: 30%;
  -webkit-transform: translateX(30%);
          transform: translateX(30%);
  z-index: 5001;
  color: #aa9145;
  /*height: 60px;
    line-height: 60px;
    padding: 0 15px;*/
  font-size: 2.5em;
  cursor: pointer;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.customize-controls li:hover {
  color: #867236;
}

/*

removing play/pause btn for now

.tns-outer button[data-action] {
    display: block;
    margin: 0 auto .75em auto;
    //border: none;
    font-family: inherit;
    font-size: 1.3em;
    padding: .2em;
}


*/
/*
KWES WRAPS EACH INPUT ELEMENT IN A SPAN .kw-field-wrapper so the 100% width needs to be added to this span but I still might need to account for the submit button any time is is a button element and NOT a input type=submit element
*/
.kw-field-wrapper {
  width: 100%;
}

.kw-field-wrapper .help {
  position: absolute;
}

.subscribe {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("https://res.cloudinary.com/jduquain/c_scale,f_auto,q_auto,w_1920/v1563928372/eandb/subscribe.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("https://res.cloudinary.com/jduquain/c_scale,f_auto,q_auto,w_1920/v1563928372/eandb/subscribe.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center bottom;
  padding-top: 8em;
  padding-bottom: 8em;
  color: #fff;
}

@media (max-width: 35em) {
  .subscribe {
    padding-top: 6em;
    padding-bottom: 6em;
  }
}

.subscribe__wrap {
  max-width: 1280px;
  margin: 0 auto;
}

.subscribe__heading {
  font-size: 1.9em;
  margin-bottom: 1em;
  font-weight: 400;
  color: #fff;
}

.subscribe__paragraph {
  font-size: 1.2em;
  text-align: center;
  margin-bottom: 4em;
}

.subscribe__form {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 3em 1.5em;
}

@media (max-width: 35em) {
  .subscribe__form {
    grid-gap: 1.2em 1.5em;
  }
}

.subscribe__input, .subscribe__email, .subscribe__comment {
  width: 100%;
  border-radius: 0 .25em .25em 0;
  padding: .375em .3125em .3125em;
  border: 1px solid #ccc;
  color: #111;
  height: 2.125em;
  cursor: pointer;
}

.subscribe__field-prefixed .kw-field-wrapper-5 {
  height: 6em;
}

.subscribe__comment {
  height: 100%;
}

.subscribe__input:focus, .subscribe__email:focus, .subscribe__comment:focus {
  outline: none;
  -webkit-box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
          box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
}

.subscribe__label {
  display: block;
  width: 100%;
  margin-bottom: .4em;
}

.subscribe__field-prefixed {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.subscribe__field-prefix {
  -webkit-transition: color 300ms ease-out 100ms;
  transition: color 300ms ease-out 100ms;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 2.2em;
          flex: 0 0 2.2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #ccc;
  border-right: 0;
  border-radius: .25em 0 0 .25em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: .375em .375em .3125em .375em;
  color: #fff;
  background-color: #dccc9d;
}

.subscribe__field-prefix.input-color {
  color: #dccc9d;
  background-color: transparent;
}

.subscribe__input-wrap:last-of-type {
  -ms-flex-item-align: end;
      align-self: end;
}

@media (max-width: 35em) {
  .subscribe__input-wrap:last-of-type {
    justify-self: center;
  }
}

.subscribe__submit {
  font-family: inherit;
  border: none;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#dccc9d), to(#aa9145));
  background-image: linear-gradient(#dccc9d, #aa9145);
  cursor: pointer;
  margin-top: 2em;
}

.subscribe__submit::before, .subscribe__submit::after {
  border-color: #dccc9d;
}

@media (max-width: 35em) {
  .testimonial .pre-heading {
    color: #353131;
  }
  .testimonial .sect-heading-img {
    color: #353131;
    opacity: 1;
  }
}

.testimonial {
  background-image: linear-gradient(105deg, #fff, #fff, 50%, transparent 50%), url("https://res.cloudinary.com/jduquain/c_scale,f_auto,q_auto,w_1920/v1563456911/eandb/bg-testimonial.jpg");
  background-attachment: fixed;
  background-size: cover;
  background-repeat: no-repeat;
  padding: 6em 2em 4em 2em;
  height: 100vh;
}

@media (max-width: 35em) {
  .testimonial {
    background-image: url("https://res.cloudinary.com/jduquain/image/upload/c_fill,f_auto,g_center,h_1000,q_auto,w_760/v1563456911/eandb/bg-testimonial.jpg");
    background-position: 50% 0%;
    background-attachment: scroll;
    padding: 6em .5em 2em .5em;
    height: 110vh;
  }
}

.testimonial .sect-heading-img {
  margin-bottom: 4em;
}

@media (max-width: 35em) {
  .testimonial .sect-heading-img {
    margin-bottom: 10em;
  }
}

.testimonial__main-wrap {
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 11em;
  position: relative;
}

@media (max-width: 52.5em) {
  .testimonial__main-wrap {
    padding: 0 4em;
  }
}

@media (max-width: 43.75em) {
  .testimonial__main-wrap {
    padding: 0 2em;
  }
}

@media (max-width: 28.125em) {
  .testimonial__main-wrap {
    padding: 0 .75em;
  }
}

@media (max-width: 23.0625em) {
  .testimonial__main-wrap {
    padding: 0 .35em;
  }
}

.testimonial__cell {
  opacity: .85;
  color: #000;
  background-color: #fff;
  border-radius: 3px;
  border: 1px solid #867236;
  position: relative;
  padding-bottom: 1.5em;
}

.testimonial__cell::after {
  content: "";
  position: absolute;
  -webkit-box-shadow: 1px 1px 0 0 white;
          box-shadow: 1px 1px 0 0 white;
  width: 1em;
  height: 1em;
  border-right: 1px solid #b3b3b3;
  border-bottom: 1px solid #b3b3b3;
  background-color: #fff;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  bottom: 3.80em;
  /*was -8px*/
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
  z-index: 2000;
}

@media (max-width: 23.0625em) {
  .testimonial__cell::after {
    bottom: 3.40em;
  }
}

.testimonial__wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  border-bottom: 1px solid #b3b3b3;
  padding: 1em;
}

@media (max-width: 28.125em) {
  .testimonial__wrap {
    padding: .7em;
  }
}

.testimonial__image {
  width: 5em;
  height: 5em;
  border-radius: 50%;
  border: 1px solid #353131;
  display: block;
}

@media (max-width: 28.125em) {
  .testimonial__image {
    width: 3.5em;
    height: 3.5em;
  }
}

.testimonial__name {
  font-size: 1.3em;
  font-style: italic;
  color: #353131;
  text-align: center;
  margin-top: 1em;
  -webkit-transform: translateX(7px);
          transform: translateX(7px);
}

@media (max-width: 23.0625em) {
  .testimonial__name {
    font-size: 1.1em;
  }
}

.testimonial__review {
  font-size: 1.1em;
  line-height: 1.6;
  padding: 1.5em;
  position: relative;
  z-index: 2;
  border-bottom: 1px solid #b3b3b3;
}

@media (max-width: 47.5em) {
  .testimonial__review {
    font-size: 1.08em;
    padding: .5em;
    line-height: 1.3;
  }
}

.testimonial__review::before {
  content: "\201C";
  color: #dccc9d;
  font-size: 12em;
  line-height: .5;
  position: absolute;
  top: .14em;
  left: -.037em;
  font-family: sans-serif;
  z-index: -1;
}

/*********** LANDSCAPE STYLES ***********/
@media screen and (orientation: landscape) and (min-device-width: 319px) and (max-device-width: 812px) {
  .testimonial {
    height: 190vw;
    background-image: url("https://res.cloudinary.com/jduquain/c_scale,f_auto,q_auto,w_1920/v1563456911/eandb/bg-testimonial.jpg");
    background-position: 50% 0%;
    padding: 6em 0 4em 0;
    background-attachment: scroll;
  }
  .testimonial .pre-heading {
    color: #353131;
  }
  .testimonial .sect-heading-img {
    color: #353131;
    opacity: 1;
    margin-bottom: 2em;
  }
}

@media screen and (orientation: landscape) and (max-height: 585px) {
  .testimonial {
    height: 90vw;
    background-image: url("https://res.cloudinary.com/jduquain/c_scale,f_auto,q_auto,w_1920/v1563456911/eandb/bg-testimonial.jpg");
    background-position: 50% 0%;
    padding: 6em 0 3em 0;
    background-attachment: scroll;
  }
  .testimonial__main-wrap {
    padding: 0 9em;
  }
  .testimonial__review {
    font-size: 1em;
    line-height: 1.4;
  }
  .testimonial .pre-heading {
    color: #353131;
  }
  .testimonial .sect-heading-img {
    color: #353131;
    opacity: 1;
    margin-bottom: 4em;
  }
}

.appointments {
  padding-top: 12em;
}

.footer {
  background-color: black;
  color: #888;
  padding: 3.5em 2em;
}

@media (max-width: 35em) {
  .footer {
    padding: 3em 1em;
  }
}

.footer__wrap {
  max-width: 1280px;
  margin: 0 auto;
}

.logo-container {
  text-align: center;
  margin-bottom: 1.5em;
}

footer img {
  width: 7em;
  text-align: center;
}

div.footer__copyright {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.footer__mylinks {
  font-size: 1.5em;
  margin-left: .75em;
  color: inherit;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.footer__mylinks:hover {
  color: #dccc9d;
}

.footer__mylinks:first-of-type {
  margin-left: .5em;
}

p.footer--main {
  width: 80%;
  margin: 1em auto .7em auto;
  text-align: center;
}

@media (max-width: 35em) {
  p.footer--main {
    width: 80%;
  }
}

div.footerNavWrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-bottom: 2em;
}

div.footer--icons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 15%;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

@media (max-width: 52.5em) {
  div.footer--icons {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    margin-top: 2.5em;
    margin-bottom: 1em;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
}

@media (max-width: 52.5em) {
  div.footer--icons a {
    -webkit-box-flex: initial;
        -ms-flex: initial;
            flex: initial;
  }
}

div.footer--icons a:not(:last-of-type) {
  margin-right: 1em;
}

div.footer--icons i {
  -webkit-transition: color 300ms ease-out 50ms;
  transition: color 300ms ease-out 50ms;
  color: #888;
  width: 1.5em;
  height: 1.5em;
  display: inline-block;
  background-color: #fff;
  border-radius: 50%;
  text-align: center;
  line-height: 1.5em;
  font-size: 1.6em;
}

div.footer--icons a:first-of-type i:hover {
  color: #3b5998;
}

div.footer--icons a:nth-of-type(2) i:hover {
  color: #cb2027;
}

div.footer--icons a:last-of-type i:hover {
  color: #c32aa3;
}

.footer__navs {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 80%;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

@media (max-width: 52.5em) {
  .footer__navs {
    width: 100%;
    margin: 0 auto;
  }
}

@media (max-width: 52.5em) {
  .footer__navs {
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
}

.footer__links {
  color: #dccc9d;
  padding: 1em 1.25em;
  display: inline-block;
  text-transform: uppercase;
  -webkit-transition: background-color 300ms ease-out, -webkit-transform 300ms ease-out;
  transition: background-color 300ms ease-out, -webkit-transform 300ms ease-out;
  transition: background-color 300ms ease-out, transform 300ms ease-out;
  transition: background-color 300ms ease-out, transform 300ms ease-out, -webkit-transform 300ms ease-out;
}

.footer__links:hover {
  color: #867236;
  background-color: rgba(255, 255, 255, 0.15);
  -webkit-transform: translateY(-3px);
          transform: translateY(-3px);
}

@media (max-width: 35em) {
  .footer__links {
    padding: 1em 1em;
  }
}

.footer__me {
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
  color: inherit;
}

.footer__me:hover {
  color: #dccc9d;
}

.footer__me:active {
  color: #aa9145;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvX25vcm1hbGl6ZS5zY3NzIiwic3R5bGVzLmNzcyIsIl9iYXNlLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYnJlYWtwb2ludC1zYXNzL3N0eWxlc2hlZXRzL19icmVha3BvaW50LnNjc3MiLCJfdmFyTWl4aW5zLnNjc3MiLCJtb2R1bGVzL19idG4uc2NzcyIsIm1vZHVsZXMvX2hlYWRlci5zY3NzIiwibW9kdWxlcy9fbmF2LnNjc3MiLCJtb2R1bGVzL19oZXJvLnNjc3MiLCJtb2R1bGVzL19pbnRyby5zY3NzIiwibW9kdWxlcy9fc2VydmljZXMuc2NzcyIsIm1vZHVsZXMvX2dhbGxlcnkuc2NzcyIsIm1vZHVsZXMvX3NsaWRlci5zY3NzIiwibW9kdWxlcy9fc3Vic2NyaWJlLnNjc3MiLCJtb2R1bGVzL190ZXN0aW1vbmlhbHMuc2NzcyIsIm1vZHVsZXMvX2FwcG9pbnRtZW50cy5zY3NzIiwibW9kdWxlcy9fZm9vdGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7Ozs7R0FJRztBQUVIO0VBQ0Usa0JBQWlCO0VBQUUsT0FBTztFQUMxQiwyQkFBMEI7RUFBRSxPQUFPO0VBQ25DLCtCQUE4QjtFQUFFLE9BQU87Q0FDeEM7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOztHQUVHO0FBRUg7RUFDRSxVQUFTO0NBQ1Y7O0FBRUQ7O0dBRUc7QUFFSDs7Ozs7O0VBTUUsZUFBYztDQUNmOztBQUVEOzs7R0FHRztBQUVIO0VBQ0UsZUFBYztFQUNkLGlCQUFnQjtDQUNqQjs7QUFFRDtnRkFDZ0Y7QUFFaEY7OztHQUdHO0FBRUg7OztFQUVPLE9BQU87RUFDWixlQUFjO0NBQ2Y7O0FBRUQ7O0dBRUc7QUFDSDs7O0dBR0c7QUFFSDtFQUNFLGdDQUF1QjtVQUF2Qix3QkFBdUI7RUFBRSxPQUFPO0VBQ2hDLFVBQVM7RUFBRSxPQUFPO0VBQ2xCLGtCQUFpQjtFQUFFLE9BQU87Q0FDM0I7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxrQ0FBaUM7RUFBRSxPQUFPO0VB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ckIsdUJBQXNCO0VBQ3RCLG1CQUFrQjtFQUNsQixtQkFBa0I7RUFDbEIsbUJBQWtCO0VBQ2xCLGlCQUFnQjtDQUNuQjs7QUFFRDtFQUNJLGVBQXVCO0NBQzFCOztBQUVEO0VBQ0ksZUFBcUI7Q0FDeEI7O0FBRUQ7RUFDSSxlQUFzQjtDQUN6Qjs7QUFFRDtFQUNJLHFCQUFhO0VBQWIscUJBQWE7RUFBYixjQUFhO0VBQ2IsV0FBVTtFQUNWLDBCQUE4QjtNQUE5Qix1QkFBOEI7VUFBOUIsK0JBQThCO0VBQzlCLG9CQUFlO01BQWYsZ0JBQWU7Q0FXbEI7O0FibEVHO0VhbURKO0lBT1EsWUFBVztJQUNYLGVBQWM7R0FPckI7Q2Y4MEZBOztBRWg1Rkc7RWFtREo7SUFZUSx5QkFBdUI7UUFBdkIsc0JBQXVCO1lBQXZCLHdCQUF1QjtHQUc5QjtDZm8xRkE7O0FlbDFGRDtFQUNJLGVaL0hxQjtFWWdJckIsb0JBQW1CO0VBQ25CLHNCQUFxQjtFQUNyQiwwQkFBeUI7RUFDekIsc0ZBQXFFO0VBQXJFLDhFQUFxRTtFQUFyRSxzRUFBcUU7RUFBckUsd0dBQXFFO0NBWXhFOztBQWpCRDtFQVFRLGVacElxQjtFWXFJckIsNENBQTJDO0VBQzNDLG9DQUEyQjtVQUEzQiw0QkFBMkI7Q0FDOUI7O0FiL0VEO0Vhb0VKO0lBY1EsaUJBQWdCO0dBR3ZCO0NmcTFGQTs7QWVuMUZEO0VBQ0ksd0NBQStCO0VBQS9CLGdDQUErQjtFQUMvQixlQUFjO0NBU2pCOztBQVhEO0VBS1EsZVp0SmlCO0NZdUpwQjs7QUFOTDtFQVNRLGVaekpxQjtDWTBKeEIiLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXG4gKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmZvb3RlcixcbmhlYWRlcixcbm5hdixcbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG5maWdjYXB0aW9uLFxuZmlndXJlLFxubWFpbiB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctIGFuZCBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzLCAvKiAxICovXG5tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXG4gKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gKi9cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4ge1xuICAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny0gYW5kIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmF1ZGlvLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqL1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyxcbm1lbnUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuY2FudmFzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2x1Y2llbl9zY2hvZW5zY2hyaWZ0dl9jYXRSZyc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvTHVjaWFuIFNjaG9lbnNjaHJpZnQgQ0FULXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL0x1Y2lhbiBTY2hvZW5zY2hyaWZ0IENBVC13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvTHVjaWFuIFNjaG9lbnNjaHJpZnQgQ0FULXdlYmZvbnQuZW90XCIpLCB1cmwoXCIuLi9mb250cy9MdWNpYW4gU2Nob2Vuc2NocmlmdCBDQVQtd2ViZm9udC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuKiwgKjpiZWZvcmUsICo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBvdXRsaW5lOiBub25lO1xufVxuXG46cm9vdCB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYxLjI1ZW0pIHtcbiAgOnJvb3Qge1xuICAgIGZvbnQtc2l6ZTogLjllbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTIuNWVtKSB7XG4gIDpyb290IHtcbiAgICBmb250LXNpemU6IC44ZW07XG4gIH1cbn1cblxuYTphY3RpdmUge1xuICBjb2xvcjogI2JmMmI1ODtcbn1cblxuYm9keSB7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2VyaWY7XG4gIGNvbG9yOiAjMzMzO1xuICAvKiBrZWVwcyBob3Jpem9udGFsIHNjcm9sbGJhcnMgZnJvbSBhcHBlYXJpbmcgd2hlbiBpdGVtcyBhcmUgYW5pbWF0ZWQgdG8gdGhlIGxlZnQgb3IgcmlnaHQgb2YgdGhlIHZpZXdwb3J0ICovXG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZmFmYjtcbn1cblxuc2VjdGlvbiB7XG4gIHBhZGRpbmc6IDhlbSAyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Mi41ZW0pIHtcbiAgc2VjdGlvbiB7XG4gICAgcGFkZGluZzogNWVtIDFlbTtcbiAgfVxufVxuXG4ucHJlLWhlYWRpbmcge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjOWI5Nzk3O1xuICBtYXJnaW4tYm90dG9tOiAuM2VtO1xufVxuXG4uc2VjdC1oZWFkaW5nIHtcbiAgZm9udC1zaXplOiAyLjNlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogLjAzZW07XG4gIG1hcmdpbi1ib3R0b206IC4yZW07XG4gIGNvbG9yOiAjMzMzMzMzO1xufVxuXG4uc2VjdC1oZWFkaW5nLWltZyB7XG4gIGhlaWdodDogLjgxMjVlbTtcbiAgd2lkdGg6IDguODc1ZW07XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9oZWFkaW5nLWltZy5zdmdcIik7XG4gIG1hcmdpbjogMCBhdXRvIDRlbSBhdXRvO1xuICBvcGFjaXR5OiAuNTtcbn1cblxuLyogU0lHTiBVUCBCVVRUT04gSVMgQU4gQU5DSE9SLi5OT1QgQSBJTlBVVCBUWVBFPVNVQk1JVCAqL1xuLmJ0bi1zdGFuZGFyZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6ICNmZmY7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogLjZlbSAxLjJlbTtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCNhYTkxNDUsICM4NjcyMzYpO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbi5idG4tc3RhbmRhcmQ6OmJlZm9yZSwgLmJ0bi1zdGFuZGFyZDo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICB0cmFuc2l0aW9uOiBhbGwgMjUwbXM7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiAwO1xuICBoZWlnaHQ6IDEuMDkwOWVtO1xuICAvKiB3YXMgMjRweCAqL1xuICB3aWR0aDogMS4wOTA5ZW07XG4gIC8qIHdhcyAyNHB4ICovXG59XG5cbi5idG4tc3RhbmRhcmQ6OmJlZm9yZSB7XG4gIGJvcmRlci10b3Atd2lkdGg6IC4wOTBlbTtcbiAgLyogd2FzIDJweCAqL1xuICBib3JkZXItY29sb3I6ICM4NjcyMzY7XG4gIHRvcDogLS4yMjdlbTtcbiAgLyogd2FzIDVweCAqL1xuICBsZWZ0OiAwO1xufVxuXG4uYnRuLXN0YW5kYXJkOjphZnRlciB7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IC4wOTBlbTtcbiAgLyogd2FzIDJweCAqL1xuICBib3JkZXItY29sb3I6ICM4NjcyMzY7XG4gIGJvdHRvbTogLS4yMjdlbTtcbiAgLyogd2FzIDVweCAqL1xuICByaWdodDogMHB4O1xufVxuXG4uYnRuLXN0YW5kYXJkOmhvdmVyOjpiZWZvcmUsIC5idG4tc3RhbmRhcmQ6aG92ZXI6OmFmdGVyIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5idG4tc3RhbmRhcmQ6YWN0aXZlIHtcbiAgY29sb3I6ICNmOWZhZmI7XG59XG5cbi5idG4tZmxleCB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmJ0bi1mbGV4IHtcbiAgICBtYXJnaW4tdG9wOiAuMjVlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAuMjVlbTtcbiAgfVxufVxuXG4uanMtYnR0LWJ0biB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAtMi43ZW07XG4gIHJpZ2h0OiAuNWVtO1xuICB3aWR0aDogMS43ZW07XG4gIGhlaWdodDogMS43ZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDUzLCA0OSwgNDksIDAuOCk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbGluZS1oZWlnaHQ6IDEuN2VtO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAyZW07XG4gIG9wYWNpdHk6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDUwMG1zIGVhc2Utb3V0LCBib3R0b20gNDAwbXMgY3ViaWMtYmV6aWVyKDAuNjQsIDAuNTcsIDAuNjcsIDEuMjMpLCBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zIGVhc2Utb3V0LCBjb2xvciAzMDBtcyBlYXNlLW91dDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB6LWluZGV4OiA5NTAwO1xufVxuXG4uanMtYnR0LWJ0bi5hY3RpdmUge1xuICBvcGFjaXR5OiAxO1xuICBib3R0b206IDIuM2VtO1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbn1cblxuLmpzLWJ0dC1idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn1cblxuLmpzLWJ0dC1idG46aG92ZXIge1xuICBjb2xvcjogI2VlZTtcbn1cblxuLmhhbWJ1cmdlci1pY29uIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgd2lkdGg6IDI2cHg7XG4gIGhlaWdodDogMjNweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMTRweDtcbiAgcmlnaHQ6IDE2cHg7XG4gIHotaW5kZXg6IDgwMDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLmhhbWJ1cmdlci1pY29uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC5oYW1idXJnZXItaWNvbiB7XG4gICAgcmlnaHQ6IDEwcHg7XG4gIH1cbn1cblxuLmhhbWJ1cmdlci1pY29uOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgaGVpZ2h0OiA0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDNlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHRyYW5zaXRpb246IGFsbCA1NTBtcyBlYXNlLW91dDtcbiAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XG59XG5cbi5oYW1idXJnZXItaWNvbl9fbWlkZGxlIHtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgaGVpZ2h0OiA0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDNlbTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogXCJcIjtcbiAgdHJhbnNpdGlvbjogYWxsIDU1MG1zIGVhc2Utb3V0O1xufVxuXG4uaGFtYnVyZ2VyLWljb246OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDRweDtcbiAgYm9yZGVyLXJhZGl1czogM2VtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICB3aWR0aDogMTAwJTtcbiAgYm90dG9tOiAwO1xuICB0cmFuc2l0aW9uOiBhbGwgNTUwbXMgZWFzZS1vdXQ7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xufVxuXG4uaGFtYnVyZ2VyLWljb24uaW50ZXJhY3Q6OmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSBzY2FsZVgoMS4xKTtcbn1cblxuLmhhbWJ1cmdlci1pY29uLmludGVyYWN0OjphZnRlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgc2NhbGVYKDEuMSkgdHJhbnNsYXRlKC0xcHgsIDFweCk7XG59XG5cbi5oYW1idXJnZXItaWNvbi5pbnRlcmFjdCAuaGFtYnVyZ2VyLWljb25fX21pZGRsZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSBzY2FsZVgoMCk7XG59XG5cbi5zaXRlLWhlYWRlciB7XG4gIHRyYW5zaXRpb246IGFsbCA0MDBtcyBlYXNlLW91dDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5zaXRlLWhlYWRlcl9fd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgMS41ZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4MGVtKSB7XG4gIC5zaXRlLWhlYWRlcl9fd3JhcCB7XG4gICAgcGFkZGluZzogMCBjYWxjKDUwJSAtIDY0MHB4KTtcbiAgfVxufVxuXG4uc2l0ZS1oZWFkZXJfX3NvY2lhbCB7XG4gIGZsZXg6IDE7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uc2l0ZS1oZWFkZXJfX3NvY2lhbDpob3ZlciAuc2l0ZS1oZWFkZXJfX3NvY2lhbC1saW5rOm5vdCg6aG92ZXIpIHtcbiAgb3BhY2l0eTogLjgwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSB7XG4gIC5zaXRlLWhlYWRlcl9fc29jaWFsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5zaXRlLWhlYWRlcl9fc29jaWFsLWxpbmsge1xuICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbjtcbn1cblxuLnNpdGUtaGVhZGVyX19zb2NpYWwtbGluazpob3ZlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4zKTtcbn1cblxuLnNpdGUtaGVhZGVyX19zb2NpYWwtbGluazpob3ZlciAuZmEuZmEtZmFjZWJvb2stc3F1YXJlIHtcbiAgY29sb3I6ICMzYjU5OTg7XG59XG5cbi5zaXRlLWhlYWRlcl9fc29jaWFsLWxpbms6aG92ZXIgLmZhLmZhLXBpbnRlcmVzdC1zcXVhcmUge1xuICBjb2xvcjogI2NiMjAyNztcbn1cblxuLnNpdGUtaGVhZGVyX19zb2NpYWwtbGluazpob3ZlciAuZmEuZmEtaW5zdGFncmFtIHtcbiAgY29sb3I6ICNjMzJhYTM7XG59XG5cbi5zaXRlLWhlYWRlciAuZmEge1xuICBmb250LXNpemU6IDEuNWVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGNvbG9yOiAjODY3MjM2O1xufVxuXG4uc2l0ZS1oZWFkZXIgYTpub3QoOmZpcnN0LW9mLXR5cGUpIHtcbiAgbWFyZ2luLWxlZnQ6IC43ZW07XG59XG5cbi5zaXRlLWhlYWRlcl9fbG9nby1saW5rIHtcbiAgZm9udC1mYW1pbHk6ICdsdWNpZW5fc2Nob2Vuc2NocmlmdHZfY2F0UmcnLCBjdXJzaXZlO1xuICBmb250LXNpemU6IDMuOGVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBjb2xvcjogIzM1MzEzMTtcbiAgZmxleDogMjtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnNpdGUtaGVhZGVyX19sb2dvLWxpbmsge1xuICAgIGZsZXg6IDAgMCA4NSU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnNpdGUtaGVhZGVyX19sb2dvLWxpbmsge1xuICAgIGZvbnQtc2l6ZTogMy41ZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnNpdGUtaGVhZGVyX19sb2dvLWxpbmsge1xuICAgIGZvbnQtc2l6ZTogMi44ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDIzLjA2MjVlbSkge1xuICAuc2l0ZS1oZWFkZXJfX2xvZ28tbGluayB7XG4gICAgZm9udC1zaXplOiAyLjZlbTtcbiAgfVxufVxuXG4uc2l0ZS1oZWFkZXJfX2xvZ28tbGluazphY3RpdmUge1xuICBjb2xvcjogIzM1MzEzMTtcbn1cblxuLnNpdGUtaGVhZGVyX19hbXAge1xuICBjb2xvcjogIzg2NzIzNjtcbn1cblxuLnNpdGUtaGVhZGVyX19idXR0b24tY29udGFpbmVyIHtcbiAgZmxleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnNpdGUtaGVhZGVyX19idXR0b24tY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5zaXRlLWhlYWRlcl9fYnV0dG9uOmxpbmssIC5zaXRlLWhlYWRlcl9fYnV0dG9uOnZpc2l0ZWQge1xuICBmb250LXNpemU6IC44NWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zIGVhc2Utb3V0O1xuICBwYWRkaW5nOiAuOGVtIDEuNGVtIC43ZW0gMS40ZW07XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoI2FhOTE0NSwgIzg2NzIzNik7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM4NjcyMzY7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyLXJhZGl1czogOTllbTtcbn1cblxuLnNpdGUtaGVhZGVyX19idXR0b246bGluazpob3ZlciwgLnNpdGUtaGVhZGVyX19idXR0b246dmlzaXRlZDpob3ZlciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgjZGNjYzlkLCAjYWE5MTQ1KTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NmYjg3Nztcbn1cblxuLnNpdGUtaGVhZGVyX19idXR0b24tMjpsaW5rLCAuc2l0ZS1oZWFkZXJfX2J1dHRvbi0yOnZpc2l0ZWQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzg2NzIzNjtcbiAgY29sb3I6ICM4NjcyMzY7XG59XG5cbi5zaXRlLWhlYWRlcl9fYnV0dG9uLTI6bGluazpob3ZlciwgLnNpdGUtaGVhZGVyX19idXR0b24tMjp2aXNpdGVkOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzg2NzIzNjtcbiAgY29sb3I6ICNmZmY7XG4gIGJvcmRlci1jb2xvcjogI2RjY2M5ZDtcbn1cblxuLm5hdmlnYXRpb24ge1xuICBwYWRkaW5nOiAuNzVlbSAxLjVlbTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAzNTBtcyBlYXNlLWluO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2NjYztcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc1ZW0pIHtcbiAgLm5hdmlnYXRpb24ge1xuICAgIHBhZGRpbmc6IDAuNzVlbSBjYWxjKDUwJSAtIDYwMHB4KTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSB7XG4gIC5uYXZpZ2F0aW9uIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5uYXZpZ2F0aW9uX19hbXAge1xuICBjb2xvcjogI2RjY2M5ZDtcbn1cblxuLm5hdmlnYXRpb25fX2xvZ28tdGV4dCB7XG4gIGZvbnQtZmFtaWx5OiAnbHVjaWVuX3NjaG9lbnNjaHJpZnR2X2NhdFJnJywgY3Vyc2l2ZTtcbiAgZm9udC1zaXplOiAyLjdlbTtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi5uYXZpZ2F0aW9uX19saXN0IHtcbiAgd2lkdGg6IDcwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMXB4KTtcbn1cblxuLm5hdmlnYXRpb25fX2l0ZW0tLWhpZGUge1xuICBtYXJnaW4tbGVmdDogMmVtO1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ubmF2aWdhdGlvbl9faXRlbS0taGlkZSAubmF2aWdhdGlvbl9fbGluazpsaW5rOjphZnRlciwgLm5hdmlnYXRpb25fX2l0ZW0tLWhpZGUgLm5hdmlnYXRpb25fX2xpbms6dmlzaXRlZDo6YWZ0ZXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ubmF2aWdhdGlvbl9fbGluazpsaW5rLCAubmF2aWdhdGlvbl9fbGluazp2aXNpdGVkIHtcbiAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogLjg1ZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGNvbG9yOiAjMzUzMTMxO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogLjAzZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1ib3R0b206IC40ZW07XG59XG5cbi5uYXZpZ2F0aW9uX19saW5rOmxpbms6aG92ZXIsIC5uYXZpZ2F0aW9uX19saW5rOnZpc2l0ZWQ6aG92ZXIge1xuICBjb2xvcjogIzg2NzIzNjtcbn1cblxuLm5hdmlnYXRpb25fX2xpbms6bGluazo6YWZ0ZXIsIC5uYXZpZ2F0aW9uX19saW5rOnZpc2l0ZWQ6OmFmdGVyIHtcbiAgdHJhbnNpdGlvbjogbGVmdCAzMDBtcyBlYXNlLWluLCByaWdodCAzMDBtcyBlYXNlLWluO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGxlZnQ6IDUwJTtcbiAgcmlnaHQ6IDUwJTtcbiAgYm90dG9tOiAwO1xuICBoZWlnaHQ6IDJweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzg2NzIzNjtcbn1cblxuLm5hdmlnYXRpb25fX2xpbms6aG92ZXI6OmFmdGVyIHtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG59XG5cbi5uYXZpZ2F0aW9uLmZpeGVkIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAyMDA7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHBhZGRpbmc6IC43NWVtIDJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBib3gtc2hhZG93OiAwIDNweCAzcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICAvKiBhZGRlZCB0byBrZWVwIHRoZSBzdGlja3kgbmF2IGZyb20gZXhwYW5kaW5nIHdoZW4gbG9nbyBhbmltYXRpb24gaGFwcGVucyAqL1xufVxuXG4ubmF2aWdhdGlvbi5maXhlZCAubmF2aWdhdGlvbl9fbGlzdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXgtd2lkdGg6IDEyODBweDtcbn1cblxuLm5hdmlnYXRpb24uZml4ZWQgLm5hdmlnYXRpb25fX2l0ZW0tLWhpZGUge1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ubmF2aWdhdGlvbi5maXhlZCAubmF2aWdhdGlvbl9faXRlbSB7XG4gIG1hcmdpbi1sZWZ0OiAyZW07XG59XG5cbi5uYXZpZ2F0aW9uLmZpeGVkIC5uYXZpZ2F0aW9uX19pdGVtLS1oaWRlIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi5uYXZpZ2F0aW9uLmZpeGVkIC5uYXZpZ2F0aW9uX19saW5rOmxpbmssIC5uYXZpZ2F0aW9uLmZpeGVkIC5uYXZpZ2F0aW9uX19saW5rOnZpc2l0ZWQge1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLm5hdmlnYXRpb24uZml4ZWQgLm5hdmlnYXRpb25fX2xpbmsuYWN0aXZlOmxpbmssIC5uYXZpZ2F0aW9uLmZpeGVkIC5uYXZpZ2F0aW9uX19saW5rLmFjdGl2ZTp2aXNpdGVkIHtcbiAgY29sb3I6ICNkY2NjOWQ7XG59XG5cbi5uYXZpZ2F0aW9uLmZpeGVkIC5uYXZpZ2F0aW9uX19saW5rLmFjdGl2ZTpsaW5rOjphZnRlciwgLm5hdmlnYXRpb24uZml4ZWQgLm5hdmlnYXRpb25fX2xpbmsuYWN0aXZlOnZpc2l0ZWQ6OmFmdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RjY2M5ZDtcbiAgY29sb3I6ICNkY2NjOWQ7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0cmFuc2l0aW9uLWRlbGF5OiAzMDBtcztcbiAgLyogYWRkZWQgdG8gdHJ5IHRvIGtlZXAgb3RoZXIgbGlua3MgZnJvbSBzdGFydGluZyB0byBhbmltYXRlIHRoaXMgb24gdGhlIHdheSBkb3duL3VwIHRvIHRoZSB0YXJnZXQgbGluayAqL1xufVxuXG4ubmF2aWdhdGlvbi5maXhlZCAubmF2aWdhdGlvbl9fbGluazpsaW5rOjphZnRlciwgLm5hdmlnYXRpb24uZml4ZWQgLm5hdmlnYXRpb25fX2xpbms6dmlzaXRlZDo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGNjYzlkO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSB7XG4gIC5uYXZpZ2F0aW9uLmhhbWJ1cmdlci1vbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbiAgLm5hdmlnYXRpb24uaGFtYnVyZ2VyLW9uIC5uYXZpZ2F0aW9uX19saXN0IHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbiAgLm5hdmlnYXRpb24uaGFtYnVyZ2VyLW9uIC5uYXZpZ2F0aW9uX19pdGVtIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOWI5Nzk3O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICAubmF2aWdhdGlvbi5oYW1idXJnZXItb24gLm5hdmlnYXRpb25fX2l0ZW06bm90KDpsYXN0LW9mLXR5cGUpIHtcbiAgICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkICNmZmY7XG4gIH1cbiAgLm5hdmlnYXRpb24uaGFtYnVyZ2VyLW9uIC5uYXZpZ2F0aW9uX19saW5rIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBwYWRkaW5nOiAxZW07XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAuOWVtO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxcHgpO1xuICB9XG4gIC5uYXZpZ2F0aW9uLmhhbWJ1cmdlci1vbiAubmF2aWdhdGlvbl9fbGluazpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2RjY2M5ZDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuICAubmF2aWdhdGlvbi5oYW1idXJnZXItb24gLm5hdmlnYXRpb25fX2xpbms6aG92ZXI6OmFmdGVyIHtcbiAgICBsZWZ0OiA1MCU7XG4gICAgcmlnaHQ6IDUwJTtcbiAgfVxuICAvKioqKiogRklYRUQgSEVBREVSICAqKioqKiovXG4gIC5uYXZpZ2F0aW9uLmhhbWJ1cmdlci1vbi5maXhlZCAubmF2aWdhdGlvbl9faXRlbSB7XG4gICAgd2lkdGg6IDYwJTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSBhbmQgKG1heC13aWR0aDogMzVlbSkge1xuICAubmF2aWdhdGlvbi5oYW1idXJnZXItb24uZml4ZWQgLm5hdmlnYXRpb25fX2l0ZW0ge1xuICAgIHdpZHRoOiA3MCU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAubmF2aWdhdGlvbi5oYW1idXJnZXItb24uZml4ZWQgLm5hdmlnYXRpb25fX2l0ZW0tLWhpZGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLm5hdmlnYXRpb24uaGFtYnVyZ2VyLW9uLmZpeGVkIC5uYXZpZ2F0aW9uX19saW5rLmFjdGl2ZTpsaW5rLCAubmF2aWdhdGlvbi5oYW1idXJnZXItb24uZml4ZWQgLm5hdmlnYXRpb25fX2xpbmsuYWN0aXZlOnZpc2l0ZWQge1xuICAgIGNvbG9yOiAjZGNjYzlkO1xuICB9XG4gIC5uYXZpZ2F0aW9uLmhhbWJ1cmdlci1vbi5maXhlZCAubmF2aWdhdGlvbl9fbGluay5hY3RpdmU6bGluazpob3ZlciwgLm5hdmlnYXRpb24uaGFtYnVyZ2VyLW9uLmZpeGVkIC5uYXZpZ2F0aW9uX19saW5rLmFjdGl2ZTp2aXNpdGVkOmhvdmVyIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuICAubmF2aWdhdGlvbi5oYW1idXJnZXItb24uZml4ZWQgLm5hdmlnYXRpb25fX2xpbmsuYWN0aXZlOmxpbms6OmFmdGVyLCAubmF2aWdhdGlvbi5oYW1idXJnZXItb24uZml4ZWQgLm5hdmlnYXRpb25fX2xpbmsuYWN0aXZlOnZpc2l0ZWQ6OmFmdGVyIHtcbiAgICBsZWZ0OiA1MCU7XG4gICAgcmlnaHQ6IDUwJTtcbiAgfVxufVxuXG4ubGFyZ2UtaGVybyB7XG4gIGhlaWdodDogNTV2dztcbiAgYm9yZGVyLWJvdHRvbTogMC42dncgc29saWQgI2RjY2M5ZDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjEuMjVlbSkge1xuICAubGFyZ2UtaGVybyB7XG4gICAgaGVpZ2h0OiA2NHZ3O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0My43NWVtKSB7XG4gIC5sYXJnZS1oZXJvIHtcbiAgICBoZWlnaHQ6IDkwdnc7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmxhcmdlLWhlcm8ge1xuICAgIGhlaWdodDogMTUwdnc7XG4gIH1cbn1cblxuLmxhcmdlLWhlcm9fX2ltYWdlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvYmplY3QtcG9zaXRpb246IDYwJSAxMDAlO1xufVxuXG4ubGFyZ2UtaGVyb19fb3ZlcmxheSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kOiAjMzMzIGNlbnRlci9jb3ZlciBuby1yZXBlYXQ7XG4gIHotaW5kZXg6IDA7XG4gIGZpbHRlcjogYmx1cig0cHgpO1xuICBvcGFjaXR5OiAwO1xufVxuXG4ubGFyZ2UtaGVyb19fbWFpbi1oZWFkaW5nIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LWZhbWlseTogJ1RhbmdlcmluZScsIGN1cnNpdmU7XG4gIHRleHQtc2hhZG93OiAxcHggMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuOCk7XG4gIGZvbnQtc2l6ZTogMy44ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjA2O1xuICBjb2xvcjogI2ZmZjtcbiAgbWFyZ2luOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogOSU7XG4gIGxlZnQ6IDQ5JTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCUpO1xuICB3aWR0aDogNjYlO1xuICBtYXgtd2lkdGg6IDg1MHB4O1xuICB6LWluZGV4OiAxO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDMuNzVlbSkge1xuICAubGFyZ2UtaGVyb19fbWFpbi1oZWFkaW5nIHtcbiAgICB3aWR0aDogODElO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5sYXJnZS1oZXJvX19tYWluLWhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogMy43ZW07XG4gICAgd2lkdGg6IDg2JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmxhcmdlLWhlcm9fX21haW4taGVhZGluZyB7XG4gICAgZm9udC1zaXplOiAzLjUxZW07XG4gICAgd2lkdGg6IDk3JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC5sYXJnZS1oZXJvX19tYWluLWhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogM2VtO1xuICAgIHdpZHRoOiA5OCU7XG4gIH1cbn1cblxuLmxhcmdlLWhlcm9fX3F1b3RlIHtcbiAgb3BhY2l0eTogMDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5sYXJnZS1oZXJvX19xdW90ZS0tNCB7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogLjVlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBtYXJnaW4tdG9wOiAuODhlbTtcbn1cblxuLmxhcmdlLWhlcm9fX2FtcCB7XG4gIGZvbnQtc2l6ZTogMS40ZW07XG4gIGxpbmUtaGVpZ2h0OiAuNjtcbn1cblxuLmxhcmdlLWhlcm9fX2FtcC0tcmlnaHQge1xuICBtYXJnaW4tbGVmdDogMTNweDtcbn1cblxuQGtleWZyYW1lcyBmYWRlLWluIHtcbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuXG4ubGFyZ2UtaGVyby5sb2FkZWQgLmxhcmdlLWhlcm9fX3F1b3RlIHtcbiAgYW5pbWF0aW9uOiBmYWRlLWluIDgwMG1zIDcwMG1zIGVhc2UtaW4gYm90aDtcbn1cblxuLmxhcmdlLWhlcm8ubG9hZGVkIC5sYXJnZS1oZXJvX19xdW90ZS0tMiB7XG4gIGFuaW1hdGlvbi1kZWxheTogMjAwMG1zO1xufVxuXG4ubGFyZ2UtaGVyby5sb2FkZWQgLmxhcmdlLWhlcm9fX3F1b3RlLS0zIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiA0MDAwbXM7XG59XG5cbi5sYXJnZS1oZXJvLmxvYWRlZCAubGFyZ2UtaGVyb19fcXVvdGUtLTQge1xuICBhbmltYXRpb24tZGVsYXk6IDUzMDBtcztcbn1cblxuLnJvdGF0ZS0xIHNwYW4ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGUoLTAuMWVtLCAwLjVlbSk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xufVxuXG4ucm90YXRlLTIgc3BhbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKC0wLjRlbSwgLTAuNzVlbSk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xufVxuXG4uaW50cm8ge1xuICAvKioqKiogICBTVU1NQVJZICAgKioqKioqL1xuICAvKioqKiogICAgQlJBTkQgTE9HT1MgICAgKioqKiovXG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4MGVtKSB7XG4gIC5pbnRybyB7XG4gICAgcGFkZGluZzogNmVtIGNhbGMoNTAlIC0gNjI3cHgpO1xuICB9XG59XG5cbi5pbnRyb19fZ3JpZCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMS41ZnIgMWZyO1xuICBncmlkLWNvbHVtbi1nYXA6IC41ZW07XG4gIG1hcmdpbjogNGVtIDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0My43NWVtKSB7XG4gIC5pbnRyb19fZ3JpZCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgZ3JpZC1jb2x1bW4tZ2FwOiAwO1xuICAgIGdyaWQtcm93LWdhcDogMWVtO1xuICB9XG59XG5cbi5pbnRyb19fc3VtbWFyeSB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQzLjc1ZW0pIHtcbiAgLmludHJvX19zdW1tYXJ5IHtcbiAgICBwYWRkaW5nOiAzZW07XG4gICAgZm9udC1zaXplOiAxLjJlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuaW50cm9fX3N1bW1hcnkge1xuICAgIHBhZGRpbmc6IDJlbSAwO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuaW50cm9fX3N1bW1hcnkge1xuICAgIGZvbnQtc2l6ZTogMS4xZW07XG4gIH1cbn1cblxuLmludHJvX19zdW1tYXJ5IHA6Zmlyc3Qtb2YtdHlwZTo6Zmlyc3QtbGV0dGVyIHtcbiAgZm9udC1mYW1pbHk6IHNlcmlmO1xuICBmb250LXNpemU6IDQuNmVtO1xuICBsaW5lLWhlaWdodDogLjk7XG4gIGZsb2F0OiBsZWZ0O1xuICBjb2xvcjogIzg2NzIzNjtcbiAgbWFyZ2luLXJpZ2h0OiAuMWVtO1xufVxuXG4uaW50cm9fX3N1bW1hcnkgcCB7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi5pbnRyb19fc3VtbWFyeSBwOm5vdCg6bGFzdC1vZi10eXBlKSB7XG4gIG1hcmdpbi1ib3R0b206IC44ZW07XG59XG5cbi5pbnRyb19fbGluayB7XG4gIGNvbG9yOiAjYWE5MTQ1O1xuICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLW91dDtcbn1cblxuLmludHJvX19saW5rOmhvdmVyIHtcbiAgY29sb3I6ICM4NjcyMzY7XG59XG5cbi5pbnRyb19fYnJhbmRzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCg4LjQzN2VtLCAxZnIpKTtcbiAgZ3JpZC1nYXA6IDJlbTtcbiAgd2lkdGg6IDkwJTtcbiAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmludHJvX19icmFuZHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5pbnRyb19fYnJhbmRzX19oZWFkaW5nIHtcbiAgZ3JpZC1jb2x1bW46IDEgLyAtMTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgYXV0byAxZnI7XG4gIGdyaWQtZ2FwOiAuNzVlbTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6IHJnYmEoMTcxLCAxNDcsIDExNiwgMC44KTtcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIG1hcmdpbjogMi41ZW0gMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLmludHJvX19icmFuZHNfX2hlYWRpbmc6OmJlZm9yZSwgLmludHJvX19icmFuZHNfX2hlYWRpbmc6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgaGVpZ2h0OiAuMzEyNWVtO1xuICBib3JkZXItcmFkaXVzOiAuNjI1ZW07XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgcmdiYSgxNzEsIDE0NywgMTE2LCAwLjgpLCB0cmFuc3BhcmVudCk7XG59XG5cbi5pbnRyb19fYnJhbmRzX19oZWFkaW5nOjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gbGVmdCwgcmdiYSgxNzEsIDE0NywgMTE2LCAwLjgpLCB0cmFuc3BhcmVudCk7XG59XG5cbi5pbnRyb19fYnJhbmRzX19pbWcge1xuICB3aWR0aDogOS4zNzVlbTtcbiAgaGVpZ2h0OiA2LjI1ZW07XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvcGFjaXR5OiAuMzU7XG4gIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xuICB0cmFuc2l0aW9uOiA0MDBtcyBlYXNlLW91dDtcbn1cblxuLmludHJvX19icmFuZHNfX2ltZzpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG4gIGZpbHRlcjogZ3JheXNjYWxlKDApO1xufVxuXG4vKioqKioqKiogRElBTU9ORCBJTlRSTyBHUklEICAqKioqKioqKiovXG5AbWVkaWEgKG1heC13aWR0aDogNzBlbSkge1xuICAuaW1nLWNsaXAtYmxvY2sge1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgfVxufVxuXG4uaW1nLWNsaXAtcm93IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAtOS41MDVlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDcwZW0pIHtcbiAgLmltZy1jbGlwLXJvdyB7XG4gICAgbWFyZ2luLXRvcDogLTcuNjI1ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYxLjI1ZW0pIHtcbiAgLmltZy1jbGlwLXJvdyB7XG4gICAgbWFyZ2luLXRvcDogLTcuMDVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTIuNWVtKSB7XG4gIC5pbWctY2xpcC1yb3cge1xuICAgIG1hcmdpbi10b3A6IC02Ljk1ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5pbWctY2xpcC1yb3cge1xuICAgIG1hcmdpbi10b3A6IC02LjVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC5pbWctY2xpcC1yb3cge1xuICAgIG1hcmdpbi10b3A6IC01LjFlbTtcbiAgfVxufVxuXG4uaW1nLWNsaXAtd3JhcCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDE4Ljc1ZW07XG4gIC8qIHdhcyAzMDBweCAqL1xuICBoZWlnaHQ6IDE4Ljc1ZW07XG4gIC8qIHdhcyAzMDBweCAqL1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9qZHVxdWFpbi9jX2ZpbGwsZl9hdXRvLGhfNjAwLHFfYXV0byx3XzYwMC92MTU2NDAxOTIwNS9lYW5kYi9kaWFtb25kX2xoa3I3dS5qcGdcIik7XG4gIC8qIDYwMHg2MDAgKi9cbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjbGlwLXBhdGg6IHBvbHlnb24oNTAlIDAlLCAxMDAlIDUwJSwgNTAlIDEwMCUsIDAlIDUwJSk7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3MGVtKSB7XG4gIC5pbWctY2xpcC13cmFwIHtcbiAgICB3aWR0aDogMTVlbTtcbiAgICBoZWlnaHQ6IDE1ZW07XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vamR1cXVhaW4vY19maWxsLGZfYXV0byxoXzQ4MCxxX2F1dG8sd180ODAvdjE1NjQwMTkyMDUvZWFuZGIvZGlhbW9uZF9saGtyN3UuanBnXCIpO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2MS4yNWVtKSB7XG4gIC5pbWctY2xpcC13cmFwIHtcbiAgICB3aWR0aDogMTRlbTtcbiAgICBoZWlnaHQ6IDE0ZW07XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vamR1cXVhaW4vY19maWxsLGZfYXV0byxoXzQwMyxxX2F1dG8sd180MDMvdjE1NjQwMTkyMDUvZWFuZGIvZGlhbW9uZF9saGtyN3UuanBnXCIpO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Mi41ZW0pIHtcbiAgLmltZy1jbGlwLXdyYXAge1xuICAgIHdpZHRoOiAxMy44ZW07XG4gICAgaGVpZ2h0OiAxMy44ZW07XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vamR1cXVhaW4vY19maWxsLGZfYXV0byxoXzM1MyxxX2F1dG8sd18zNTMvdjE1NjQwMTkyMDUvZWFuZGIvZGlhbW9uZF9saGtyN3UuanBnXCIpO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuaW1nLWNsaXAtd3JhcCB7XG4gICAgd2lkdGg6IDEzZW07XG4gICAgaGVpZ2h0OiAxM2VtO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2pkdXF1YWluL2NfZmlsbCxmX2F1dG8saF8zMzMscV9hdXRvLHdfMzMzL3YxNTY0MDE5MjA1L2VhbmRiL2RpYW1vbmRfbGhrcjd1LmpwZ1wiKTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC5pbWctY2xpcC13cmFwIHtcbiAgICB3aWR0aDogMTBlbTtcbiAgICBoZWlnaHQ6IDEwZW07XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vamR1cXVhaW4vY19maWxsLGZfYXV0byxoXzI1NixxX2F1dG8sd18yNTYvdjE1NjQwMTkyMDUvZWFuZGIvZGlhbW9uZF9saGtyN3UuanBnXCIpO1xuICB9XG59XG5cbi5pbWctY2xpcC1yb3c6Zmlyc3Qtb2YtdHlwZSB7XG4gIG1hcmdpbi10b3A6IGF1dG87XG59XG5cbi5pbWctY2xpcC1yb3c6Zmlyc3Qtb2YtdHlwZSAuaW1nLWNsaXAtd3JhcCB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcbn1cblxuLmltZy1jbGlwLXJvdzpudGgtb2YtdHlwZSgyKSAuaW1nLWNsaXAtd3JhcDpudGgtb2YtdHlwZShvZGQpIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdDtcbn1cblxuLmltZy1jbGlwLXJvdzpudGgtb2YtdHlwZSgyKSAuaW1nLWNsaXAtd3JhcDpudGgtb2YtdHlwZShldmVuKSB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0O1xufVxuXG4uaW1nLWNsaXAtcm93Omxhc3Qtb2YtdHlwZSAuaW1nLWNsaXAtd3JhcCB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGJvdHRvbTtcbn1cblxuLm92ZXJsYXkge1xuICB0cmFuc2l0aW9uOiBhbGwgNDAwbXMgbGluZWFyO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDE3MSwgMTQ3LCAxMTYsIDAuNzUpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHotaW5kZXg6IDg4ODtcbn1cblxuLm92ZXJsYXktY29udGVudCB7XG4gIGZvbnQtZmFtaWx5OiAnbHVjaWVuX3NjaG9lbnNjaHJpZnR2X2NhdFJnJywgY3Vyc2l2ZTtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMjUwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDcwZW0pIHtcbiAgLm92ZXJsYXktY29udGVudCB7XG4gICAgZm9udC1zaXplOiAyMTAlO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAub3ZlcmxheS1jb250ZW50IHtcbiAgICBmb250LXNpemU6IDE5MCU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDIzLjA2MjVlbSkge1xuICAub3ZlcmxheS1jb250ZW50IHtcbiAgICBmb250LXNpemU6IDE1MCU7XG4gIH1cbn1cblxuLm92ZXJsYXktY29udGVudC5hbXBlcnNhbmQge1xuICBjb2xvcjogI2RjY2M5ZDtcbn1cblxuLm92ZXJsYXktY29udGVudCBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzBlbSkge1xuICAub3ZlcmxheS1jb250ZW50IGltZyB7XG4gICAgd2lkdGg6IDkwJTtcbiAgfVxufVxuXG4uaW1nLWNsaXAtd3JhcDpob3ZlciAub3ZlcmxheSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2UtaW47XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIC8qIHRyYW5zcGFyZW50IHdvdWxkIGFsc28gd29yayAqL1xufVxuXG4uc2VydmljZXMge1xuICAvKioqKioqKioqKiAgIFNFUlZJQ0VTIFRBQkxFIExJU1QgICAqKioqKioqKioqL1xuICAvKiBJRiBUSEVSRSBBUkUgQU5ZIE1PUkUgSVNTVUVTIFdJVEggQkVJTkcgVE9PIE5BUlJPVyBBVCBNT0JJTEUgV0lEVEhTIEFERCBBIE1JTi1XSURUSCAqL1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnNlcnZpY2VzIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxufVxuXG4uc2VydmljZXNfX2dyaWQge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDM1MHB4LCAxZnIpKTtcbiAgZ3JpZC1nYXA6IDFlbTtcbiAgbWF4LXdpZHRoOiAxMjgwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzMuMTI1ZW0pIHtcbiAgLnNlcnZpY2VzX19ncmlkIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDMxMHB4LCAxZnIpKTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjUuNjI1ZW0pIHtcbiAgLnNlcnZpY2VzX19ncmlkIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDQwMHB4LCAxZnIpKTtcbiAgICBhbGlnbi1pdGVtczogaW5pdGlhbDtcbiAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU2LjI1ZW0pIHtcbiAgLnNlcnZpY2VzX19ncmlkIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDUwMHB4LCAxZnIpKTtcbiAgICBncmlkLXJvdy1nYXA6IDIuNWVtO1xuICAgIGZvbnQtc2l6ZTogMS4xZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUyLjVlbSkge1xuICAuc2VydmljZXNfX2dyaWQge1xuICAgIGZvbnQtc2l6ZTogMS4yZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnNlcnZpY2VzX19ncmlkIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDQwMHB4LCAxZnIpKTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnNlcnZpY2VzX19ncmlkIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDM1MHB4LCAxZnIpKTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC5zZXJ2aWNlc19fZ3JpZCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgzMTBweCwgMWZyKSk7XG4gIH1cbn1cblxuLnNlcnZpY2VzX19tYWluIHtcbiAgd2lkdGg6IDQwMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm94LXNoYWRvdzogMCAwIDJweCAycHggcmdiYSgyMDQsIDIwNCwgMjA0LCAwLjMpO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODEuMjVlbSkge1xuICAuc2VydmljZXNfX21haW4ge1xuICAgIHdpZHRoOiAzNTBweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzMuMTI1ZW0pIHtcbiAgLnNlcnZpY2VzX19tYWluIHtcbiAgICB3aWR0aDogMzEwcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDY1LjYyNWVtKSB7XG4gIC5zZXJ2aWNlc19fbWFpbiB7XG4gICAgd2lkdGg6IDQwMHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gIC5zZXJ2aWNlc19fbWFpbiB7XG4gICAgd2lkdGg6IDUwMHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5zZXJ2aWNlc19fbWFpbiB7XG4gICAgd2lkdGg6IDQwMHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuc2VydmljZXNfX21haW4ge1xuICAgIHdpZHRoOiAzNTBweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC5zZXJ2aWNlc19fbWFpbiB7XG4gICAgd2lkdGg6IDMxMHB4O1xuICB9XG59XG5cbi5zZXJ2aWNlc19faW1hZ2Utd3JhcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnNlcnZpY2VzX19pbWFnZS13cmFwOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogXCJcIjtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2N1cnZlLW92ZXJsYXkuc3ZnXCIpO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBoZWlnaHQ6IDUycHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgxLjI1ZW0pIHtcbiAgLnNlcnZpY2VzX19pbWFnZS13cmFwOjphZnRlciB7XG4gICAgaGVpZ2h0OiA0NXB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3My4xMjVlbSkge1xuICAuc2VydmljZXNfX2ltYWdlLXdyYXA6OmFmdGVyIHtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDY1LjYyNWVtKSB7XG4gIC5zZXJ2aWNlc19faW1hZ2Utd3JhcDo6YWZ0ZXIge1xuICAgIGhlaWdodDogNTJweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAuc2VydmljZXNfX2ltYWdlLXdyYXA6OmFmdGVyIHtcbiAgICBoZWlnaHQ6IDY1cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnNlcnZpY2VzX19pbWFnZS13cmFwOjphZnRlciB7XG4gICAgaGVpZ2h0OiA1MnB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuc2VydmljZXNfX2ltYWdlLXdyYXA6OmFmdGVyIHtcbiAgICBoZWlnaHQ6IDQ1cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDIzLjA2MjVlbSkge1xuICAuc2VydmljZXNfX2ltYWdlLXdyYXA6OmFmdGVyIHtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gIH1cbn1cblxuLnNlcnZpY2VzX19pbWFnZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2VydmljZXNfX2Rlc2NyaXB0aW9uIHtcbiAgcGFkZGluZzogMmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnNlcnZpY2VzX19kZXNjcmlwdGlvbiB7XG4gICAgcGFkZGluZzogMWVtIDJlbTtcbiAgfVxufVxuXG4uc2VydmljZXNfX2JvcmRlciB7XG4gIGhlaWdodDogNHB4O1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2NjYztcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XG4gIG1hcmdpbjogMWVtIDA7XG59XG5cbi5zZXJ2aWNlc19fZGVzY3JpcHRpb24taGVhZGluZyB7XG4gIGZvbnQtc2l6ZTogMS40ZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbjogLjNlbSAwIC44NWVtIDA7XG4gIGNvbG9yOiAjN2E3NTc1O1xuICBmb250LXdlaWdodDogMzAwO1xufVxuXG4uc2VydmljZXNfX2xpc3Qge1xuICBjb2xvcjogIzM1MzEzMTtcbiAgbWFyZ2luLWJvdHRvbTogLjVlbTtcbn1cblxuLnNlcnZpY2VzX19pdGVtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLnNlcnZpY2VzX19pdGVtICsgLnNlcnZpY2VzX19pdGVtIHtcbiAgbWFyZ2luLXRvcDogLjZlbTtcbn1cblxuLnNlcnZpY2VzIC5mYSB7XG4gIGZvbnQtc2l6ZTogMS4zZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY29sb3I6ICM4NjcyMzY7XG4gIG1hcmdpbi1yaWdodDogLjI1ZW07XG59XG5cbi5zZXJ2aWNlc19fbGluayB7XG4gIGNvbG9yOiAjN2E3NTc1O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogNzAwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1ib3R0b206IC4zZW07XG59XG5cbi5zZXJ2aWNlc19fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjMzUzMTMxO1xuICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLWluO1xufVxuXG4uc2VydmljZXNfX2xpbms6OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBjb250ZW50OiBcIlwiO1xuICBoZWlnaHQ6IDFweDtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xuICB6LWluZGV4OiA4ODtcbiAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMzUwbXMgZWFzZS1vdXQ7XG59XG5cbi5zZXJ2aWNlc19fbGluazpob3Zlcjo6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcbn1cblxuLnNlcnZpY2VzX19zcGVjaWFsIHtcbiAgbWF4LXdpZHRoOiAzMyU7XG4gIHBhZGRpbmc6IDEuNWVtO1xuICBtYXJnaW46IDVlbSBhdXRvIDAgYXV0bztcbiAgYm9yZGVyLXRvcDogMC42MjVlbSBzb2xpZCAjODY3MjM2O1xuICBib3JkZXItYm90dG9tOiAwLjYyNWVtIHNvbGlkICM4NjcyMzY7XG4gIGJvcmRlci1yYWRpdXM6IDNlbTtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCNmZmYsICNmZWZhZjApO1xufVxuXG4uc2VydmljZXNfX3NwZWNpYWwtaGVhZGluZyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAxLjZlbTtcbiAgY29sb3I6ICM4NjcyMzY7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLnNlcnZpY2VzX19zcGVjaWFsLW1vbnRoIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLnNlcnZpY2VzX19zcGVjaWFsLXBhcmEge1xuICBmb250LXNpemU6IDEuMmVtO1xuICBsaW5lLWhlaWdodDogMS40O1xufVxuXG4uc2VydmljZXNfX3RhYmxlLXdyYXAge1xuICBtYXgtd2lkdGg6IDg0MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgZGlzcGxheTogbm9uZTtcbiAgd2lkdGg6IDcwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvcGFjaXR5OiAwO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgdHJhbnNpdGlvbjogYWxsIDQwMG1zIGVhc2Utb3V0O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDMuNzVlbSkge1xuICAuc2VydmljZXNfX3RhYmxlLXdyYXAge1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnNlcnZpY2VzX190YWJsZS13cmFwIHtcbiAgICB3aWR0aDogODUlO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuc2VydmljZXNfX3RhYmxlLXdyYXAge1xuICAgIHdpZHRoOiA5MCU7XG4gIH1cbn1cblxuLnNlcnZpY2VzX190YWJsZS13cmFwLmVuYWJsZWQge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnNlcnZpY2VzX190YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAvKiBvbmx5IGRvIGEgYm90dG9tIHJhZGl1cyBhcyB0aGUgY2FwdGlvbiBoYXMgYSB0b3AgcmFkaXVzICAqL1xuICBib3JkZXItcmFkaXVzOiAwIDAgMTJweCAxMnB4O1xuICAvKiBhZGRlZCB0aGlzIGZvciBib3JkZXItcmFkaXVzIHRvIHdvcmsgKi9cbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnNlcnZpY2VzX190YWJsZS1jYXB0aW9uIHtcbiAgcGFkZGluZzogLjI1ZW0gMCAuMjVlbSAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMi44ZW07XG4gIGNvbG9yOiAjMzMzO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBlOWQ1O1xuICAvKiBtb3ppbGxhIG5lZWRzIHRoZSBjYXB0aW9uIHRvIGhhdmUgYSBib3JkZXIgcmFkaXVzIGluIG9yZGVyIGZvciB0aGUgdG9wIG9mIHRoZSB0YWJsZSB0byBoYXZlIGEgYm9yZGVyIHJhZGl1cyAgKi9cbiAgYm9yZGVyLXJhZGl1czogMTJweCAxMnB4IDAgMDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnNlcnZpY2VzX190YWJsZS1jYXB0aW9uIHtcbiAgICBmb250LXNpemU6IDIuNGVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuc2VydmljZXNfX3RhYmxlLWNhcHRpb24ge1xuICAgIGZvbnQtc2l6ZTogMS43ZW07XG4gIH1cbn1cblxuLnNlcnZpY2VzX190YWJsZS1jYXB0aW9uLXNwYW4ge1xuICBmb250LWZhbWlseTogJ1RhbmdlcmluZScsIGN1cnNpdmU7XG4gIGxpbmUtaGVpZ2h0OiAuNztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxLjZlbTtcbiAgY29sb3I6ICM4NjcyMzY7XG59XG5cbi5zZXJ2aWNlc19fdGFibGUgdHI6bnRoLW9mLXR5cGUob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGU5ZDU7XG59XG5cbi5zZXJ2aWNlc19fdGFibGUgdHI6bnRoLW9mLXR5cGUoZXZlbikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGNjYzlkO1xufVxuXG4uc2VydmljZXNfX3RhYmxlIHRoIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgcGFkZGluZzogMCAuNzVlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnNlcnZpY2VzX190YWJsZSB0aCB7XG4gICAgZm9udC1zaXplOiAxLjNlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnNlcnZpY2VzX190YWJsZSB0aCB7XG4gICAgZm9udC1zaXplOiAxLjFlbTtcbiAgfVxufVxuXG4uc2VydmljZXNfX3RhYmxlIHRkIHtcbiAgcGFkZGluZzogLjZlbSAuNzVlbSAuNmVtIDEuMWVtO1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnNlcnZpY2VzX190YWJsZSB0ZCB7XG4gICAgZm9udC1zaXplOiAuOWVtO1xuICB9XG59XG5cbi8qKiBBbmltYXRlIHNlcnZpY2VzIHNlY3RzIG9uIHNjcm9sbCAgKioqL1xuLypcclxuXHJcbi5zZXJ2aWNlc19fZ3JpZC5hbmltYXRlLWluIC5zZXJ2aWNlc19fd3JhcCB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IFxyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuKi9cbi8qKioqKioqKiAgVEFCTEUgV1JBUFBFUi9NT0RBTCBTVFlMRVMgICoqKioqKioqKiovXG4uY3V0LWFuZC1kZXNpZ25fd3JhcCwgLmNvbG9yX3dyYXAsIC5hZGRpdGlvbmFsX3dyYXAge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgei1pbmRleDogMTAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOCk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBvcGFjaXR5OiAwO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdHJhbnNpdGlvbjogYWxsIDQwMG1zIGVhc2Utb3V0O1xufVxuXG4uY3V0LWFuZC1kZXNpZ25fd3JhcDp0YXJnZXQsIC5jb2xvcl93cmFwOnRhcmdldCwgLmFkZGl0aW9uYWxfd3JhcDp0YXJnZXQge1xuICBvcGFjaXR5OiAxO1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbn1cblxuLmN1dC1hbmQtZGVzaWduX3dyYXA6dGFyZ2V0IC5zZXJ2aWNlc19fdGFibGUtd3JhcCwgLmNvbG9yX3dyYXA6dGFyZ2V0IC5zZXJ2aWNlc19fdGFibGUtd3JhcCwgLmFkZGl0aW9uYWxfd3JhcDp0YXJnZXQgLnNlcnZpY2VzX190YWJsZS13cmFwIHtcbiAgb3BhY2l0eTogMTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG59XG5cbi5jbG9zZV9tb2RhbCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogM2VtO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogMWVtO1xuICBoZWlnaHQ6IDFlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsaW5lLWhlaWdodDogLjllbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1vdXQ7XG4gIGNvbG9yOiAjMzUzMTMxO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTJweDtcbn1cblxuLmNsb3NlX21vZGFsOmhvdmVyIHtcbiAgY29sb3I6ICM5Yjk3OTc7XG59XG5cbi53cmFwLWNsb3NlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi8qIGlwaG9uZTUgKi9cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDMyNXB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDU3M3B4KSBhbmQgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAuc2VydmljZXNfX3RhYmxlLXdyYXAge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgY29sb3I6ICMxMTE7XG4gIH1cbiAgLnNlcnZpY2VzX190YWJsZS1jYXB0aW9uIHtcbiAgICBmb250LXNpemU6IDEuNGVtO1xuICB9XG4gIC5zZXJ2aWNlc19fdGFibGUtY2FwdGlvbi1zcGFuIHtcbiAgICBmb250LXNpemU6IDIuMmVtO1xuICB9XG4gIC5zZXJ2aWNlc19fdGFibGUgdGgge1xuICAgIGZvbnQtc2l6ZTogLjllbTtcbiAgfVxufVxuXG4vKiBpcGhvbmU1ICovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzODBweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA2NzNweCkgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgLnNlcnZpY2VzX190YWJsZS13cmFwIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIGNvbG9yOiAjMTExO1xuICB9XG4gIC5zZXJ2aWNlc19fdGFibGUtY2FwdGlvbiB7XG4gICAgZm9udC1zaXplOiAxLjRlbTtcbiAgfVxuICAuc2VydmljZXNfX3RhYmxlLWNhcHRpb24tc3BhbiB7XG4gICAgZm9udC1zaXplOiAyLjJlbTtcbiAgfVxuICAuc2VydmljZXNfX3RhYmxlIHRoIHtcbiAgICBmb250LXNpemU6IC45ZW07XG4gIH1cbn1cblxuLyoqKioqKioqKioqIExBTkRTQ0FQRSBTVFlMRVMgYW5kIGxhcHRvcHMgdGhhdCBhcmUgbm90IHZlcnkgaGlnaCBpLmUgMTI4MCB4IDU3MCAqKioqKioqKioqKi9cbkBtZWRpYSBzY3JlZW4gYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSBhbmQgKG1heC1oZWlnaHQ6IDYwMHB4KSB7XG4gIC5zZXJ2aWNlc19fdGFibGUtd3JhcCB7XG4gICAgd2lkdGg6IDY4JTtcbiAgICBjb2xvcjogIzExMTtcbiAgfVxuICAuc2VydmljZXNfX3RhYmxlLWNhcHRpb24ge1xuICAgIGZvbnQtc2l6ZTogMS40ZW07XG4gIH1cbiAgLnNlcnZpY2VzX190YWJsZS1jYXB0aW9uLXNwYW4ge1xuICAgIGZvbnQtc2l6ZTogMi4yZW07XG4gIH1cbiAgLnNlcnZpY2VzX190YWJsZSB0aCB7XG4gICAgZm9udC1zaXplOiAuOWVtO1xuICB9XG4gIC5zZXJ2aWNlc19fdGFibGUgdGQge1xuICAgIGZvbnQtc2l6ZTogLjhlbTtcbiAgICBwYWRkaW5nOiAuNTBlbSAuNTBlbSAuNTBlbSAxLjFlbTtcbiAgfVxufVxuXG4uZ2FsbGVyeSB7XG4gIHBhZGRpbmctYm90dG9tOiAxOGVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDMuNzVlbSkge1xuICAuZ2FsbGVyeSB7XG4gICAgcGFkZGluZzogNWVtIDAgMTJlbSAwO1xuICB9XG59XG5cbi5nYWxsZXJ5X19ncmlkIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgxOC43NWVtLCAxZnIpKTtcbiAgZ3JpZC1hdXRvLWZsb3c6IGRlbnNlO1xuICBncmlkLWF1dG8tcm93czogMjBlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQzLjc1ZW0pIHtcbiAgLmdhbGxlcnlfX2dyaWQge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMTVlbSwgMWZyKSk7XG4gICAgZ3JpZC1hdXRvLXJvd3M6IDE3ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5nYWxsZXJ5X19ncmlkIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDExZW0sIDFmcikpO1xuICAgIGdyaWQtYXV0by1yb3dzOiAxMi41ZW07XG4gIH1cbn1cblxuLmdhbGxlcnlfX2xpbmsge1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJhY2tncm91bmQ6ICMxMzEyMTI7XG4gIC8qIFxyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIFxyXG4gICAgICAgICovXG59XG5cbi5nYWxsZXJ5X19saW5rLmZlYXR1cmVkIHtcbiAgZ3JpZC1yb3c6IHNwYW4gMjtcbiAgZ3JpZC1jb2x1bW46IHNwYW4gMjtcbiAgLypAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkc21hbGwpIHtcclxuICAgICAgICAgICAgZ3JpZC1yb3c6IHNwYW4gMTtcclxuICAgICAgICAgICAgZ3JpZC1jb2x1bW46IHNwYW4gMTtcclxuICAgICAgICB9Ki9cbn1cblxuLmdhbGxlcnlfX2xpbmsudGFsbCB7XG4gIGdyaWQtcm93OiBzcGFuIDI7XG59XG5cbi5nYWxsZXJ5X19ncmlkOmhvdmVyIC5nYWxsZXJ5X19maWd1cmUge1xuICBvcGFjaXR5OiAuMztcbn1cblxuLmdhbGxlcnlfX2dyaWQ6aG92ZXIgLmdhbGxlcnlfX2ZpZ3VyZTpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5nYWxsZXJ5X19maWd1cmUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDgwMG1zIGVhc2Utb3V0O1xufVxuXG4uZ2FsbGVyeV9faW1hZ2Uge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi8qKioqKiogQU5JTUFURUQgSE9WRVIgU1RZTEUgb25lICoqKioqL1xuLypcclxuXHJcbi5zbmlwMTU3NiB7XHJcbiAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgY29sb3I6ICM0NDQ7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uc25pcDE1NzYgKiB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNDVzIGVhc2U7XHJcbn1cclxuXHJcbi5zbmlwMTU3NjphZnRlciB7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBsaW5lYXI7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRnb2xkO1xyXG4gICAgaGVpZ2h0OiAxNTAlO1xyXG4gICAgYm90dG9tOiAtMTQ1JTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxufVxyXG5cclxuLnNuaXAxNTc2IGZpZ2NhcHRpb24ge1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjFlbTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgdHJhbnNpdGlvbi1kZWxheTogMHM7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG59XHJcblxyXG4uc25pcDE1NzYgaDMge1xyXG4gICAgZm9udC1zaXplOiAxZW07XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbn1cclxuXHJcbi5zbmlwMTU3NiBoMyBzcGFuIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG4uc25pcDE1NzY6aG92ZXIgPiBpbWcsXHJcbi5zbmlwMTU3Ni5ob3ZlciA+IGltZyB7XHJcbiAgICBvcGFjaXR5OiAuMTtcclxufVxyXG5cclxuLnNuaXAxNTc2OmhvdmVyOmFmdGVyLFxyXG4uc25pcDE1NzYuaG92ZXI6YWZ0ZXIge1xyXG4gICAgYm90dG9tOiA5NSU7XHJcbn1cclxuXHJcbi5zbmlwMTU3Njpob3ZlciBmaWdjYXB0aW9uLFxyXG4uc25pcDE1NzYuaG92ZXIgZmlnY2FwdGlvbiB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgdHJhbnNpdGlvbi1kZWxheTogLjRzO1xyXG59XHJcblxyXG4uZGVtbyAuc25pcDE1NzYge1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuLmRlbW8gYTpob3ZlciAuc25pcDE1NzYge1xyXG4gICAgdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG4qL1xuLyoqKioqKiBBTklNQVRFRCBIT1ZFUiBTVFlMRSB0d28gKioqKiovXG4vKlxyXG5cclxuLnNuaXAxMzM0IHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjRlbTtcclxufVxyXG5cclxuLnNuaXAxMzM0ICoge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjM1cyBlYXNlLW91dDtcclxufVxyXG5cclxuKi9cbi8qXHJcbi5zbmlwMTMzNCBpbWcge1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuOHMgZWFzZS1vdXQ7XHJcbn1cclxuXHJcbi5zbmlwMTMzNDpiZWZvcmUge1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0IDMwMG1zO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLC43KTtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICByaWdodDogNTAlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDUwcHggd2hpdGU7XHJcbn1cclxuXHJcbi5zbmlwMTMzNCBmaWdjYXB0aW9uIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHotaW5kZXg6IDI7XHJcbn1cclxuXHJcbi5zbmlwMTMzNCBoMiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xyXG59XHJcblxyXG4uc25pcDEzMzQgcCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDYwcHggIWltcG9ydGFudDtcclxuICAgIGZvbnQtc2l6ZTogLjhlbTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDAlKTtcclxufVxyXG5cclxuLnNuaXAxMzM0IGgyLCAuc25pcDEzMzQgcCB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDI1cHg7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG59XHJcblxyXG5cclxuLnNuaXAxMzM0OmhvdmVyOmJlZm9yZSB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMHB4IHdoaXRlO1xyXG4gICAgdHJhbnNpdGlvbi1kZWxheTogMHM7XHJcbn1cclxuXHJcbi5zbmlwMTMzNDpob3ZlciBmaWdjYXB0aW9uIGgyLFxyXG4uc25pcDEzMzQ6aG92ZXIgZmlnY2FwdGlvbiBwIHtcclxuICAgIHRyYW5zaXRpb24tZGVsYXk6IDMwMG1zO1xyXG59XHJcblxyXG4uc25pcDEzMzQ6aG92ZXIgZmlnY2FwdGlvbiBoMiB7XHJcbiAgICBvcGFjaXR5OiAuNTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxufVxyXG5cclxuLnNuaXAxMzM0OmhvdmVyIGZpZ2NhcHRpb24gcCB7XHJcbiAgICBvcGFjaXR5OiAuNztcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxufVxyXG5cclxuXHJcbi5kZW1vIC5zbmlwMTMzNCB7XHJcbiAgICBvcGFjaXR5OiAuNztcclxufVxyXG5cclxuLmRlbW8gYTpob3ZlciAuc25pcDEzMzQge1xyXG4gICAgdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG4uZGVtbyAuc25pcDEzMzQgZmlnY2FwdGlvbiB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcblxyXG5cclxuKi9cbi50bnMtb3V0ZXIge1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG59XG5cbi50bnMtb3V0ZXIgW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi50bnMtb3V0ZXIgW2FyaWEtY29udHJvbHNdLFxuLnRucy1vdXRlciBbZGF0YS1hY3Rpb25dIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4udG5zLXNsaWRlciB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDBzO1xuICAtbW96LXRyYW5zaXRpb246IGFsbCAwcztcbiAgdHJhbnNpdGlvbjogYWxsIDBzO1xufVxuXG4udG5zLXNsaWRlciA+IC50bnMtaXRlbSB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4udG5zLWhvcml6b250YWwudG5zLXN1YnBpeGVsIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLnRucy1ob3Jpem9udGFsLnRucy1zdWJwaXhlbCA+IC50bnMtaXRlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbn1cblxuLnRucy1ob3Jpem9udGFsLnRucy1uby1zdWJwaXhlbDphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi50bnMtaG9yaXpvbnRhbC50bnMtbm8tc3VicGl4ZWwgPiAudG5zLWl0ZW0ge1xuICBmbG9hdDogbGVmdDtcbn1cblxuLnRucy1ob3Jpem9udGFsLnRucy1jYXJvdXNlbC50bnMtbm8tc3VicGl4ZWwgPiAudG5zLWl0ZW0ge1xuICBtYXJnaW4tcmlnaHQ6IC0xMDAlO1xufVxuXG4udG5zLW5vLWNhbGMge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IDA7XG59XG5cbi50bnMtZ2FsbGVyeSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogMDtcbiAgbWluLWhlaWdodDogMXB4O1xufVxuXG4udG5zLWdhbGxlcnkgPiAudG5zLWl0ZW0ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0xMDAlO1xuICAtd2Via2l0LXRyYW5zaXRpb246IHRyYW5zZm9ybSAwcywgb3BhY2l0eSAwcztcbiAgLW1vei10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMHMsIG9wYWNpdHkgMHM7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwcywgb3BhY2l0eSAwcztcbn1cblxuLnRucy1nYWxsZXJ5ID4gLnRucy1zbGlkZS1hY3RpdmUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLnRucy1nYWxsZXJ5ID4gLnRucy1tb3Zpbmcge1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjI1cztcbiAgLW1vei10cmFuc2l0aW9uOiBhbGwgMC4yNXM7XG4gIHRyYW5zaXRpb246IGFsbCAwLjI1cztcbn1cblxuLnRucy1hdXRvd2lkdGgge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi50bnMtbGF6eS1pbWcge1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC42cztcbiAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNnM7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC42cztcbiAgb3BhY2l0eTogMC42O1xufVxuXG4udG5zLWxhenktaW1nLnRucy1jb21wbGV0ZSB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi50bnMtYWgge1xuICAtd2Via2l0LXRyYW5zaXRpb246IGhlaWdodCAwcztcbiAgLW1vei10cmFuc2l0aW9uOiBoZWlnaHQgMHM7XG4gIHRyYW5zaXRpb246IGhlaWdodCAwcztcbn1cblxuLnRucy1vdmgge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4udG5zLXZpc3VhbGx5LWhpZGRlbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTEwMDAwZW07XG59XG5cbi50bnMtdHJhbnNwYXJlbnQge1xuICBvcGFjaXR5OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi50bnMtZmFkZUluIHtcbiAgb3BhY2l0eTogMTtcbiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTEwMCk7XG4gIHotaW5kZXg6IDA7XG59XG5cbi50bnMtbm9ybWFsLFxuLnRucy1mYWRlT3V0IHtcbiAgb3BhY2l0eTogMDtcbiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTApO1xuICB6LWluZGV4OiAtMTtcbn1cblxuLnRucy12cGZpeCB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbi50bnMtdnBmaXggPiBkaXYsXG4udG5zLXZwZml4ID4gbGkge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi50bnMtdC1zdWJwMiB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMzEwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4udG5zLXQtY3Qge1xuICB3aWR0aDogMjMzMy4zMzMzMzMzJTtcbiAgd2lkdGg6IC13ZWJraXQtY2FsYygxMDAlICogNzAgLyAzKTtcbiAgd2lkdGg6IC1tb3otY2FsYygxMDAlICogNzAgLyAzKTtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDcwIC8gMyk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDA7XG59XG5cbi50bnMtdC1jdDphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi50bnMtdC1jdCA+IGRpdiB7XG4gIHdpZHRoOiAxLjQyODU3MTQlO1xuICB3aWR0aDogLXdlYmtpdC1jYWxjKDEwMCUgLyA3MCk7XG4gIHdpZHRoOiAtbW96LWNhbGMoMTAwJSAvIDcwKTtcbiAgd2lkdGg6IGNhbGMoMTAwJSAvIDcwKTtcbiAgaGVpZ2h0OiAxMHB4O1xuICBmbG9hdDogbGVmdDtcbn1cblxuLnRucy1vdXRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLyogcmVtb3ZpbmcgZG90cyBmb3Igbm93ICovXG4udG5zLW5hdiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qXHJcbi50bnMtbmF2IGJ1dHRvbiB7XHJcbiAgICB3aWR0aDogMS4yZW07XHJcbiAgICBoZWlnaHQ6IDEuMmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgbWFyZ2luOiAwIC4yNWVtO1xyXG59XHJcblxyXG4udG5zLW5hdiBidXR0b246aG92ZXIge1xyXG4gICAgb3BhY2l0eTogLjY7XHJcbn1cclxuXHJcbi50bnMtbmF2IC50bnMtbmF2LWFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxufVxyXG4qL1xuLyogVU5DT01NRU5UIElGIENVU1RPTSBDT05UUk9MUyBET05UIFdPUktcclxuXHJcblxyXG4udG5zLWNvbnRyb2xzIGJ1dHRvbjpmaXJzdC1vZi10eXBlIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogMWVtO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xyXG4gICAgXHJcbiAgICB6LWluZGV4OiA1MDAwO1xyXG59XHJcblxyXG4udG5zLWNvbnRyb2xzIGJ1dHRvbjpsYXN0LW9mLXR5cGUge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAxZW07XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xyXG4gICAgXHJcbiAgICAgei1pbmRleDogNTAwMDsgICBcclxuXHJcbn1cclxuXHJcblxyXG4qL1xuLmN1c3RvbWl6ZS1jb250cm9scyBsaTpmaXJzdC1vZi10eXBlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiBcIlwiO1xuICBib3R0b206IC0xLjRlbTtcbiAgbGVmdDogMzAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMwJSk7XG4gIHotaW5kZXg6IDUwMDE7XG4gIGNvbG9yOiAjYWE5MTQ1O1xuICAvKmhlaWdodDogNjBweDtcclxuICAgIGxpbmUtaGVpZ2h0OiA2MHB4O1xyXG4gICAgcGFkZGluZzogMCAxNXB4OyovXG4gIGZvbnQtc2l6ZTogMi41ZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XG59XG5cbi5jdXN0b21pemUtY29udHJvbHMgbGk6bGFzdC1vZi10eXBlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiBcIlwiO1xuICBib3R0b206IC0xLjRlbTtcbiAgcmlnaHQ6IDMwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMwJSk7XG4gIHotaW5kZXg6IDUwMDE7XG4gIGNvbG9yOiAjYWE5MTQ1O1xuICAvKmhlaWdodDogNjBweDtcclxuICAgIGxpbmUtaGVpZ2h0OiA2MHB4O1xyXG4gICAgcGFkZGluZzogMCAxNXB4OyovXG4gIGZvbnQtc2l6ZTogMi41ZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XG59XG5cbi5jdXN0b21pemUtY29udHJvbHMgbGk6aG92ZXIge1xuICBjb2xvcjogIzg2NzIzNjtcbn1cblxuLypcclxuXHJcbnJlbW92aW5nIHBsYXkvcGF1c2UgYnRuIGZvciBub3dcclxuXHJcbi50bnMtb3V0ZXIgYnV0dG9uW2RhdGEtYWN0aW9uXSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbjogMCBhdXRvIC43NWVtIGF1dG87XHJcbiAgICAvL2JvcmRlcjogbm9uZTtcclxuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG4gICAgZm9udC1zaXplOiAxLjNlbTtcclxuICAgIHBhZGRpbmc6IC4yZW07XHJcbn1cclxuXHJcblxyXG4qL1xuLypcclxuS1dFUyBXUkFQUyBFQUNIIElOUFVUIEVMRU1FTlQgSU4gQSBTUEFOIC5rdy1maWVsZC13cmFwcGVyIHNvIHRoZSAxMDAlIHdpZHRoIG5lZWRzIHRvIGJlIGFkZGVkIHRvIHRoaXMgc3BhbiBidXQgSSBzdGlsbCBtaWdodCBuZWVkIHRvIGFjY291bnQgZm9yIHRoZSBzdWJtaXQgYnV0dG9uIGFueSB0aW1lIGlzIGlzIGEgYnV0dG9uIGVsZW1lbnQgYW5kIE5PVCBhIGlucHV0IHR5cGU9c3VibWl0IGVsZW1lbnRcclxuKi9cbi5rdy1maWVsZC13cmFwcGVyIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5rdy1maWVsZC13cmFwcGVyIC5oZWxwIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuXG4uc3Vic2NyaWJlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgwLCAwLCAwLCAwLjMpLCByZ2JhKDAsIDAsIDAsIDAuMykpLCB1cmwoXCJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9qZHVxdWFpbi9jX3NjYWxlLGZfYXV0byxxX2F1dG8sd18xOTIwL3YxNTYzOTI4MzcyL2VhbmRiL3N1YnNjcmliZS5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBib3R0b207XG4gIHBhZGRpbmctdG9wOiA4ZW07XG4gIHBhZGRpbmctYm90dG9tOiA4ZW07XG4gIGNvbG9yOiAjZmZmO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuc3Vic2NyaWJlIHtcbiAgICBwYWRkaW5nLXRvcDogNmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiA2ZW07XG4gIH1cbn1cblxuLnN1YnNjcmliZV9fd3JhcCB7XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLnN1YnNjcmliZV9faGVhZGluZyB7XG4gIGZvbnQtc2l6ZTogMS45ZW07XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5zdWJzY3JpYmVfX3BhcmFncmFwaCB7XG4gIGZvbnQtc2l6ZTogMS4yZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuXG4uc3Vic2NyaWJlX19mb3JtIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgyNTBweCwgMWZyKSk7XG4gIGdyaWQtZ2FwOiAzZW0gMS41ZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5zdWJzY3JpYmVfX2Zvcm0ge1xuICAgIGdyaWQtZ2FwOiAxLjJlbSAxLjVlbTtcbiAgfVxufVxuXG4uc3Vic2NyaWJlX19pbnB1dCwgLnN1YnNjcmliZV9fZW1haWwsIC5zdWJzY3JpYmVfX2NvbW1lbnQge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogMCAuMjVlbSAuMjVlbSAwO1xuICBwYWRkaW5nOiAuMzc1ZW0gLjMxMjVlbSAuMzEyNWVtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBjb2xvcjogIzExMTtcbiAgaGVpZ2h0OiAyLjEyNWVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5zdWJzY3JpYmVfX2ZpZWxkLXByZWZpeGVkIC5rdy1maWVsZC13cmFwcGVyLTUge1xuICBoZWlnaHQ6IDZlbTtcbn1cblxuLnN1YnNjcmliZV9fY29tbWVudCB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnN1YnNjcmliZV9faW5wdXQ6Zm9jdXMsIC5zdWJzY3JpYmVfX2VtYWlsOmZvY3VzLCAuc3Vic2NyaWJlX19jb21tZW50OmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAuNWVtIHJnYmEoOTMsIDE2MiwgMjQ4LCAwLjUpO1xufVxuXG4uc3Vic2NyaWJlX19sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogLjRlbTtcbn1cblxuLnN1YnNjcmliZV9fZmllbGQtcHJlZml4ZWQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5zdWJzY3JpYmVfX2ZpZWxkLXByZWZpeCB7XG4gIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0IDEwMG1zO1xuICBmbGV4OiAwIDAgMi4yZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1yaWdodDogMDtcbiAgYm9yZGVyLXJhZGl1czogLjI1ZW0gMCAwIC4yNWVtO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcGFkZGluZzogLjM3NWVtIC4zNzVlbSAuMzEyNWVtIC4zNzVlbTtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkY2NjOWQ7XG59XG5cbi5zdWJzY3JpYmVfX2ZpZWxkLXByZWZpeC5pbnB1dC1jb2xvciB7XG4gIGNvbG9yOiAjZGNjYzlkO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLnN1YnNjcmliZV9faW5wdXQtd3JhcDpsYXN0LW9mLXR5cGUge1xuICBhbGlnbi1zZWxmOiBlbmQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5zdWJzY3JpYmVfX2lucHV0LXdyYXA6bGFzdC1vZi10eXBlIHtcbiAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbiAgfVxufVxuXG4uc3Vic2NyaWJlX19zdWJtaXQge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoI2RjY2M5ZCwgI2FhOTE0NSk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgbWFyZ2luLXRvcDogMmVtO1xufVxuXG4uc3Vic2NyaWJlX19zdWJtaXQ6OmJlZm9yZSwgLnN1YnNjcmliZV9fc3VibWl0OjphZnRlciB7XG4gIGJvcmRlci1jb2xvcjogI2RjY2M5ZDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnRlc3RpbW9uaWFsIC5wcmUtaGVhZGluZyB7XG4gICAgY29sb3I6ICMzNTMxMzE7XG4gIH1cbiAgLnRlc3RpbW9uaWFsIC5zZWN0LWhlYWRpbmctaW1nIHtcbiAgICBjb2xvcjogIzM1MzEzMTtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbi50ZXN0aW1vbmlhbCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxMDVkZWcsICNmZmYsICNmZmYsIDUwJSwgdHJhbnNwYXJlbnQgNTAlKSwgdXJsKFwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vamR1cXVhaW4vY19zY2FsZSxmX2F1dG8scV9hdXRvLHdfMTkyMC92MTU2MzQ1NjkxMS9lYW5kYi9iZy10ZXN0aW1vbmlhbC5qcGdcIik7XG4gIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIHBhZGRpbmc6IDZlbSAyZW0gNGVtIDJlbTtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnRlc3RpbW9uaWFsIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9qZHVxdWFpbi9pbWFnZS91cGxvYWQvY19maWxsLGZfYXV0byxnX2NlbnRlcixoXzEwMDAscV9hdXRvLHdfNzYwL3YxNTYzNDU2OTExL2VhbmRiL2JnLXRlc3RpbW9uaWFsLmpwZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgMCU7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XG4gICAgcGFkZGluZzogNmVtIC41ZW0gMmVtIC41ZW07XG4gICAgaGVpZ2h0OiAxMTB2aDtcbiAgfVxufVxuXG4udGVzdGltb25pYWwgLnNlY3QtaGVhZGluZy1pbWcge1xuICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC50ZXN0aW1vbmlhbCAuc2VjdC1oZWFkaW5nLWltZyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBlbTtcbiAgfVxufVxuXG4udGVzdGltb25pYWxfX21haW4td3JhcCB7XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAxMWVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Mi41ZW0pIHtcbiAgLnRlc3RpbW9uaWFsX19tYWluLXdyYXAge1xuICAgIHBhZGRpbmc6IDAgNGVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0My43NWVtKSB7XG4gIC50ZXN0aW1vbmlhbF9fbWFpbi13cmFwIHtcbiAgICBwYWRkaW5nOiAwIDJlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnRlc3RpbW9uaWFsX19tYWluLXdyYXAge1xuICAgIHBhZGRpbmc6IDAgLjc1ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDIzLjA2MjVlbSkge1xuICAudGVzdGltb25pYWxfX21haW4td3JhcCB7XG4gICAgcGFkZGluZzogMCAuMzVlbTtcbiAgfVxufVxuXG4udGVzdGltb25pYWxfX2NlbGwge1xuICBvcGFjaXR5OiAuODU7XG4gIGNvbG9yOiAjMDAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM4NjcyMzY7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1ib3R0b206IDEuNWVtO1xufVxuXG4udGVzdGltb25pYWxfX2NlbGw6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3gtc2hhZG93OiAxcHggMXB4IDAgMCB3aGl0ZTtcbiAgd2lkdGg6IDFlbTtcbiAgaGVpZ2h0OiAxZW07XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNiM2IzYjM7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYjNiM2IzO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgYm90dG9tOiAzLjgwZW07XG4gIC8qd2FzIC04cHgqL1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gIHotaW5kZXg6IDIwMDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyMy4wNjI1ZW0pIHtcbiAgLnRlc3RpbW9uaWFsX19jZWxsOjphZnRlciB7XG4gICAgYm90dG9tOiAzLjQwZW07XG4gIH1cbn1cblxuLnRlc3RpbW9uaWFsX193cmFwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYjNiM2IzO1xuICBwYWRkaW5nOiAxZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAudGVzdGltb25pYWxfX3dyYXAge1xuICAgIHBhZGRpbmc6IC43ZW07XG4gIH1cbn1cblxuLnRlc3RpbW9uaWFsX19pbWFnZSB7XG4gIHdpZHRoOiA1ZW07XG4gIGhlaWdodDogNWVtO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMzNTMxMzE7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnRlc3RpbW9uaWFsX19pbWFnZSB7XG4gICAgd2lkdGg6IDMuNWVtO1xuICAgIGhlaWdodDogMy41ZW07XG4gIH1cbn1cblxuLnRlc3RpbW9uaWFsX19uYW1lIHtcbiAgZm9udC1zaXplOiAxLjNlbTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBjb2xvcjogIzM1MzEzMTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAxZW07XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg3cHgpO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC50ZXN0aW1vbmlhbF9fbmFtZSB7XG4gICAgZm9udC1zaXplOiAxLjFlbTtcbiAgfVxufVxuXG4udGVzdGltb25pYWxfX3JldmlldyB7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjY7XG4gIHBhZGRpbmc6IDEuNWVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYjNiM2IzO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSB7XG4gIC50ZXN0aW1vbmlhbF9fcmV2aWV3IHtcbiAgICBmb250LXNpemU6IDEuMDhlbTtcbiAgICBwYWRkaW5nOiAuNWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjM7XG4gIH1cbn1cblxuLnRlc3RpbW9uaWFsX19yZXZpZXc6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFwyMDFDXCI7XG4gIGNvbG9yOiAjZGNjYzlkO1xuICBmb250LXNpemU6IDEyZW07XG4gIGxpbmUtaGVpZ2h0OiAuNTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC4xNGVtO1xuICBsZWZ0OiAtLjAzN2VtO1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgei1pbmRleDogLTE7XG59XG5cbi8qKioqKioqKioqKiBMQU5EU0NBUEUgU1RZTEVTICoqKioqKioqKioqL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIGFuZCAobWluLWRldmljZS13aWR0aDogMzE5cHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogODEycHgpIHtcbiAgLnRlc3RpbW9uaWFsIHtcbiAgICBoZWlnaHQ6IDE5MHZ3O1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2pkdXF1YWluL2Nfc2NhbGUsZl9hdXRvLHFfYXV0byx3XzE5MjAvdjE1NjM0NTY5MTEvZWFuZGIvYmctdGVzdGltb25pYWwuanBnXCIpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSAwJTtcbiAgICBwYWRkaW5nOiA2ZW0gMCA0ZW0gMDtcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbDtcbiAgfVxuICAudGVzdGltb25pYWwgLnByZS1oZWFkaW5nIHtcbiAgICBjb2xvcjogIzM1MzEzMTtcbiAgfVxuICAudGVzdGltb25pYWwgLnNlY3QtaGVhZGluZy1pbWcge1xuICAgIGNvbG9yOiAjMzUzMTMxO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSBhbmQgKG1heC1oZWlnaHQ6IDU4NXB4KSB7XG4gIC50ZXN0aW1vbmlhbCB7XG4gICAgaGVpZ2h0OiA5MHZ3O1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2pkdXF1YWluL2Nfc2NhbGUsZl9hdXRvLHFfYXV0byx3XzE5MjAvdjE1NjM0NTY5MTEvZWFuZGIvYmctdGVzdGltb25pYWwuanBnXCIpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSAwJTtcbiAgICBwYWRkaW5nOiA2ZW0gMCAzZW0gMDtcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbDtcbiAgfVxuICAudGVzdGltb25pYWxfX21haW4td3JhcCB7XG4gICAgcGFkZGluZzogMCA5ZW07XG4gIH1cbiAgLnRlc3RpbW9uaWFsX19yZXZpZXcge1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIH1cbiAgLnRlc3RpbW9uaWFsIC5wcmUtaGVhZGluZyB7XG4gICAgY29sb3I6ICMzNTMxMzE7XG4gIH1cbiAgLnRlc3RpbW9uaWFsIC5zZWN0LWhlYWRpbmctaW1nIHtcbiAgICBjb2xvcjogIzM1MzEzMTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIG1hcmdpbi1ib3R0b206IDRlbTtcbiAgfVxufVxuXG4uYXBwb2ludG1lbnRzIHtcbiAgcGFkZGluZy10b3A6IDEyZW07XG59XG5cbi5mb290ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgY29sb3I6ICM4ODg7XG4gIHBhZGRpbmc6IDMuNWVtIDJlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmZvb3RlciB7XG4gICAgcGFkZGluZzogM2VtIDFlbTtcbiAgfVxufVxuXG4uZm9vdGVyX193cmFwIHtcbiAgbWF4LXdpZHRoOiAxMjgwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ubG9nby1jb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDEuNWVtO1xufVxuXG5mb290ZXIgaW1nIHtcbiAgd2lkdGg6IDdlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5kaXYuZm9vdGVyX19jb3B5cmlnaHQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmZvb3Rlcl9fbXlsaW5rcyB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIG1hcmdpbi1sZWZ0OiAuNzVlbTtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2UtaW47XG59XG5cbi5mb290ZXJfX215bGlua3M6aG92ZXIge1xuICBjb2xvcjogI2RjY2M5ZDtcbn1cblxuLmZvb3Rlcl9fbXlsaW5rczpmaXJzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWxlZnQ6IC41ZW07XG59XG5cbnAuZm9vdGVyLS1tYWluIHtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiAxZW0gYXV0byAuN2VtIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgcC5mb290ZXItLW1haW4ge1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbn1cblxuZGl2LmZvb3Rlck5hdldyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuXG5kaXYuZm9vdGVyLS1pY29ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAxNSU7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Mi41ZW0pIHtcbiAgZGl2LmZvb3Rlci0taWNvbnMge1xuICAgIGZsZXg6IDAgMCAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDIuNWVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTIuNWVtKSB7XG4gIGRpdi5mb290ZXItLWljb25zIGEge1xuICAgIGZsZXg6IGluaXRpYWw7XG4gIH1cbn1cblxuZGl2LmZvb3Rlci0taWNvbnMgYTpub3QoOmxhc3Qtb2YtdHlwZSkge1xuICBtYXJnaW4tcmlnaHQ6IDFlbTtcbn1cblxuZGl2LmZvb3Rlci0taWNvbnMgaSB7XG4gIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0IDUwbXM7XG4gIGNvbG9yOiAjODg4O1xuICB3aWR0aDogMS41ZW07XG4gIGhlaWdodDogMS41ZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAxLjVlbTtcbiAgZm9udC1zaXplOiAxLjZlbTtcbn1cblxuZGl2LmZvb3Rlci0taWNvbnMgYTpmaXJzdC1vZi10eXBlIGk6aG92ZXIge1xuICBjb2xvcjogIzNiNTk5ODtcbn1cblxuZGl2LmZvb3Rlci0taWNvbnMgYTpudGgtb2YtdHlwZSgyKSBpOmhvdmVyIHtcbiAgY29sb3I6ICNjYjIwMjc7XG59XG5cbmRpdi5mb290ZXItLWljb25zIGE6bGFzdC1vZi10eXBlIGk6aG92ZXIge1xuICBjb2xvcjogI2MzMmFhMztcbn1cblxuLmZvb3Rlcl9fbmF2cyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiA4MCU7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTIuNWVtKSB7XG4gIC5mb290ZXJfX25hdnMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Mi41ZW0pIHtcbiAgLmZvb3Rlcl9fbmF2cyB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH1cbn1cblxuLmZvb3Rlcl9fbGlua3Mge1xuICBjb2xvcjogI2RjY2M5ZDtcbiAgcGFkZGluZzogMWVtIDEuMjVlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zIGVhc2Utb3V0LCB0cmFuc2Zvcm0gMzAwbXMgZWFzZS1vdXQ7XG59XG5cbi5mb290ZXJfX2xpbmtzOmhvdmVyIHtcbiAgY29sb3I6ICM4NjcyMzY7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtM3B4KTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmZvb3Rlcl9fbGlua3Mge1xuICAgIHBhZGRpbmc6IDFlbSAxZW07XG4gIH1cbn1cblxuLmZvb3Rlcl9fbWUge1xuICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLWluO1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuLmZvb3Rlcl9fbWU6aG92ZXIge1xuICBjb2xvcjogI2RjY2M5ZDtcbn1cblxuLmZvb3Rlcl9fbWU6YWN0aXZlIHtcbiAgY29sb3I6ICNhYTkxNDU7XG59XG4iLCJcclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ2x1Y2llbl9zY2hvZW5zY2hyaWZ0dl9jYXRSZyc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvTHVjaWFuIFNjaG9lbnNjaHJpZnQgQ0FULXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvTHVjaWFuIFNjaG9lbnNjaHJpZnQgQ0FULXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpLFxyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL0x1Y2lhbiBTY2hvZW5zY2hyaWZ0IENBVC13ZWJmb250LmVvdCcpLFxyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL0x1Y2lhbiBTY2hvZW5zY2hyaWZ0IENBVC13ZWJmb250LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbn1cclxuXHJcbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcclxuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuOnJvb3Qge1xyXG4gICAgZm9udC1zaXplOiAxZW07XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgXHJcbiAgICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJGxhcmdlKSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAuOWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAuOGVtO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbi8vIGxlc3Mgdml2aWQgcmVkIGZvciBhY3RpdmUgbGlua3NcclxuYTphY3RpdmUge1xyXG4gICAgY29sb3I6IHJnYigxOTEsIDQzLCA4OCk7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgZm9udC1zaXplOiAxMDAlO1xyXG4gICAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2VyaWY7XHJcbiAgICBjb2xvcjogIzMzMztcclxuICAgIFxyXG4gICAgLyoga2VlcHMgaG9yaXpvbnRhbCBzY3JvbGxiYXJzIGZyb20gYXBwZWFyaW5nIHdoZW4gaXRlbXMgYXJlIGFuaW1hdGVkIHRvIHRoZSBsZWZ0IG9yIHJpZ2h0IG9mIHRoZSB2aWV3cG9ydCAqL1xyXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuOyBcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZS1zbGlnaHQtZGFyaztcclxufVxyXG5cclxuc2VjdGlvbiB7XHJcbiAgICBwYWRkaW5nOiA4ZW0gMmVtO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgcGFkZGluZzogNWVtIDFlbTtcclxuICAgIH1cclxufVxyXG5cclxuLnByZS1oZWFkaW5nIHtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogJGdyZXktZGFyay0zO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLjNlbTtcclxufVxyXG5cclxuLnNlY3QtaGVhZGluZyB7XHJcbiAgICBmb250LXNpemU6IDIuM2VtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogLjAzZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiAuMmVtO1xyXG4gICAgY29sb3I6IHJnYig1MSwgNTEsIDUxKTtcclxufVxyXG5cclxuLnNlY3QtaGVhZGluZy1pbWcge1xyXG4gICAgaGVpZ2h0OiAuODEyNWVtO1xyXG4gICAgd2lkdGg6IDguODc1ZW07XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9oZWFkaW5nLWltZy5zdmcnKTtcclxuICAgIG1hcmdpbjogMCBhdXRvIDRlbSBhdXRvO1xyXG4gICAgb3BhY2l0eTogLjU7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCIvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIERlZmF1bHQgVmFyaWFibGVzXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiRCcmVha3BvaW50LVNldHRpbmdzOiAoXG4gICdkZWZhdWx0IG1lZGlhJzogYWxsLFxuICAnZGVmYXVsdCBmZWF0dXJlJzogbWluLXdpZHRoLFxuICAnZGVmYXVsdCBwYWlyJzogd2lkdGgsXG5cbiAgJ2ZvcmNlIGFsbCBtZWRpYSB0eXBlJzogZmFsc2UsXG4gICd0byBlbXMnOiBmYWxzZSxcbiAgJ3RyYW5zZm9ybSByZXNvbHV0aW9ucyc6IHRydWUsXG5cbiAgJ25vIHF1ZXJpZXMnOiBmYWxzZSxcbiAgJ25vIHF1ZXJ5IGZhbGxiYWNrcyc6IGZhbHNlLFxuXG4gICdiYXNlIGZvbnQgc2l6ZSc6IDE2cHgsXG5cbiAgJ2xlZ2FjeSBzeW50YXgnOiBmYWxzZVxuKTtcblxuJGJyZWFrcG9pbnQ6ICgpICFkZWZhdWx0O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEltcG9ydHNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQGltcG9ydCBcImJyZWFrcG9pbnQvc2V0dGluZ3NcIjtcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvY29udGV4dCc7XG5AaW1wb3J0ICdicmVha3BvaW50L2hlbHBlcnMnO1xuQGltcG9ydCAnYnJlYWtwb2ludC9wYXJzZXJzJztcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvbm8tcXVlcnknO1xuXG5AaW1wb3J0ICdicmVha3BvaW50L3Jlc3BvbmQtdG8nO1xuXG5AaW1wb3J0IFwiYnJlYWtwb2ludC9sZWdhY3ktc2V0dGluZ3NcIjtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBCcmVha3BvaW50IE1peGluXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuQG1peGluIGJyZWFrcG9pbnQoJHF1ZXJ5LCAkbm8tcXVlcnk6IGZhbHNlKSB7XG4gIEBpbmNsdWRlIGxlZ2FjeS1zZXR0aW5ncy13YXJuaW5nO1xuXG4gIC8vIFJlc2V0IGNvbnRleHRzXG4gIEBpbmNsdWRlIHByaXZhdGUtYnJlYWtwb2ludC1yZXNldC1jb250ZXh0cygpO1xuXG4gICRicmVha3BvaW50OiBicmVha3BvaW50KCRxdWVyeSwgZmFsc2UpO1xuXG4gICRxdWVyeS1zdHJpbmc6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdxdWVyeScpO1xuICAkcXVlcnktZmFsbGJhY2s6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdmYWxsYmFjaycpO1xuXG4gICRwcml2YXRlLWJyZWFrcG9pbnQtY29udGV4dC1ob2xkZXI6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdjb250ZXh0IGhvbGRlcicpICFnbG9iYWw7XG4gICRwcml2YXRlLWJyZWFrcG9pbnQtcXVlcnktY291bnQ6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdxdWVyeSBjb3VudCcpICFnbG9iYWw7XG5cbiAgLy8gQWxsb3cgZm9yIGFuIGFzLW5lZWRlZCBvdmVycmlkZSBvciB1c2FnZSBvZiBubyBxdWVyeSBmYWxsYmFjay5cbiAgQGlmICRuby1xdWVyeSAhPSBmYWxzZSB7XG4gICAgJHF1ZXJ5LWZhbGxiYWNrOiAkbm8tcXVlcnk7XG4gIH1cblxuICBAaWYgJHF1ZXJ5LWZhbGxiYWNrICE9IGZhbHNlIHtcbiAgICAkY29udGV4dC1zZXR0ZXI6IHByaXZhdGUtYnJlYWtwb2ludC1zZXQtY29udGV4dCgnbm8tcXVlcnknLCAkcXVlcnktZmFsbGJhY2spO1xuICB9XG5cbiAgLy8gUHJpbnQgT3V0IFF1ZXJ5IFN0cmluZ1xuICBAaWYgbm90IGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyaWVzJykge1xuICAgIEBtZWRpYSAjeyRxdWVyeS1zdHJpbmd9IHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuXG4gIEBpZiBicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykgIT0gZmFsc2Ugb3IgYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJpZXMnKSA9PSB0cnVlIHtcblxuICAgICR0eXBlOiB0eXBlLW9mKGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyeSBmYWxsYmFja3MnKSk7XG4gICAgJHByaW50OiBmYWxzZTtcblxuICAgIEBpZiAoJHR5cGUgPT0gJ2Jvb2wnKSB7XG4gICAgICAkcHJpbnQ6IHRydWU7XG4gICAgfVxuICAgIEBlbHNlIGlmICgkdHlwZSA9PSAnc3RyaW5nJykge1xuICAgICAgQGlmICRxdWVyeS1mYWxsYmFjayA9PSBicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykge1xuICAgICAgICAkcHJpbnQ6IHRydWU7XG4gICAgICB9XG4gICAgfVxuICAgIEBlbHNlIGlmICgkdHlwZSA9PSAnbGlzdCcpIHtcbiAgICAgIEBlYWNoICR3cmFwcGVyIGluIGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyeSBmYWxsYmFja3MnKSB7XG4gICAgICAgIEBpZiAkcXVlcnktZmFsbGJhY2sgPT0gJHdyYXBwZXIge1xuICAgICAgICAgICRwcmludDogdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFdyaXRlIEZhbGxiYWNrXG4gICAgQGlmICgkcXVlcnktZmFsbGJhY2sgIT0gZmFsc2UpIGFuZCAoJHByaW50ID09IHRydWUpIHtcbiAgICAgICR0eXBlLWZhbGxiYWNrOiB0eXBlLW9mKCRxdWVyeS1mYWxsYmFjayk7XG5cbiAgICAgIEBpZiAoJHR5cGUtZmFsbGJhY2sgIT0gJ2Jvb2wnKSB7XG4gICAgICAgICN7JHF1ZXJ5LWZhbGxiYWNrfSAmIHtcbiAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSBwcml2YXRlLWJyZWFrcG9pbnQtcmVzZXQtY29udGV4dHMoKTtcbn1cblxuXG5AbWl4aW4gbXEoJHF1ZXJ5LCAkbm8tcXVlcnk6IGZhbHNlKSB7XG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHF1ZXJ5LCAkbm8tcXVlcnkpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuIiwiQGluY2x1ZGUgYnJlYWtwb2ludC1zZXQoXCJ0byBlbXNcIiwgdHJ1ZSk7XHJcblxyXG5cclxuJHB1cnBsaXNoOiByZ2JhKDEyOCwgMCwgMTI4LCAwLjI1KTtcclxuXHJcbiRnb2xkLWRpYW1vbmQ6IHJnYmEoMTcxLCAxNDcsIDExNiwgMC44KTtcclxuJGdvbGQ6IHJnYigyMjAsIDIwNCwgMTU3KTtcclxuJGdvbGQtbWVkaXVtOiByZ2IoMTcwLDE0NSw2OSk7XHJcbiRnb2xkLWRhcms6IHJnYigxMzQsIDExNCwgNTQpO1xyXG5cclxuJHdoaXRlLXNsaWdodC1kYXJrOiByZ2IoMjQ5LCAyNTAsIDI1MSk7XHJcblxyXG4kZ3JleS1saWdodC0xOiAjZjBlZWVlO1xyXG4kZ3JleS1saWdodC0yOiAjY2NjO1xyXG4kZ3JleS1saWdodC0zOiByZ2IoMTc5LDE3OSwxNzkpO1xyXG4kZ3JleS1kYXJrLTE6IHJnYig1MywgNDksIDQ5KTsgLy8gc2xpZ2h0IHNhdHVyYXRpb24gYWRkZWRcclxuJGdyZXktZGFyay0yOiByZ2IoMTIyLCAxMTcsIDExNyk7IC8vIHNsaWdodCBzYXR1cmF0aW9uIGFkZGVkXHJcbiRncmV5LWRhcmstMzogcmdiKDE1NSwgMTUxLCAxNTEpOyAvLyBzbGlnaHQgc2F0dXJhdGlvbiBhZGRlZFxyXG4kZ3JleS10ZXN0aW1vbmlhbDogcmdiYSgyMjQsIDIyNCwgMjI0LCAwLjMpO1xyXG5cclxuXHJcbiRodWdlc3Q6IDEzMDBweDtcclxuJGh1Z2U6IDExNzBweDtcclxuJGxhcmdlc3Q6IDExMjBweDtcclxuJGxhcmdlOiA5ODBweDtcclxuJG1lZGl1bTogODQwcHg7XHJcbiRtZWRpdW0tNzYwOiA3NjBweDtcclxuJG1lZGl1bS1zbWFsbDogNzAwcHg7XHJcbiRzbWFsbDogNTYwcHg7XHJcbiRzbWFsbGVzdDogNDUwcHg7XHJcbiR0aW55OiAzNjlweDtcclxuXHJcblxyXG5cclxuXHJcbiIsIi8qIFNJR04gVVAgQlVUVE9OIElTIEFOIEFOQ0hPUi4uTk9UIEEgSU5QVVQgVFlQRT1TVUJNSVQgKi9cclxuXHJcbi8vLmJ0bi1zdGFuZGFyZCwgLnRucy1vdXRlciBidXR0b25bZGF0YS1hY3Rpb25dLCAudG5zLWNvbnRyb2xzIGJ1dHRvbjpmaXJzdC1vZi10eXBlLCAudG5zLWNvbnRyb2xzIGJ1dHRvbjpsYXN0LW9mLXR5cGVcclxuXHJcbi5idG4tc3RhbmRhcmQgIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZzogLjZlbSAxLjJlbTtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgkZ29sZC1tZWRpdW0sICRnb2xkLWRhcmspO1xyXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgXHJcbiAgICAmOjpiZWZvcmUsICY6OmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAyNTBtcztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgICAgIGJvcmRlci13aWR0aDogMDsgIFxyXG4gICAgICAgIGhlaWdodDogMS4wOTA5ZW07IC8qIHdhcyAyNHB4ICovXHJcbiAgICAgICAgd2lkdGg6IDEuMDkwOWVtOyAvKiB3YXMgMjRweCAqL1xyXG4gICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgYm9yZGVyLXRvcC13aWR0aDogLjA5MGVtOyAvKiB3YXMgMnB4ICovXHJcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAkZ29sZC1kYXJrO1xyXG4gICAgICAgIHRvcDogLS4yMjdlbTsgLyogd2FzIDVweCAqLyAgICBcclxuICAgICAgICBsZWZ0OiAwOyAgIFxyXG4gICAgfVxyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgICBib3JkZXItYm90dG9tLXdpZHRoOiAuMDkwZW07IC8qIHdhcyAycHggKi9cclxuICAgICAgICBib3JkZXItY29sb3I6ICRnb2xkLWRhcms7XHJcbiAgICAgICAgYm90dG9tOiAtLjIyN2VtOyAvKiB3YXMgNXB4ICovXHJcbiAgICAgICAgcmlnaHQ6IDBweDtcclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVyOjpiZWZvcmUsXHJcbiAgICAmOmhvdmVyOjphZnRlciB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgICBjb2xvcjogJHdoaXRlLXNsaWdodC1kYXJrO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLmJ0bi1mbGV4IHtcclxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgIG1hcmdpbi10b3A6IDFlbTtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVzdCkge1xyXG4gICAgICAgbWFyZ2luLXRvcDogLjI1ZW07XHJcbiAgICAgICBtYXJnaW4tYm90dG9tOiAuMjVlbTtcclxuICAgIH1cclxufVxyXG5cclxuLmpzLWJ0dC1idG4ge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgYm90dG9tOiAtMi43ZW07XHJcbiAgICByaWdodDogLjVlbTtcclxuICAgIHdpZHRoOiAxLjdlbTtcclxuICAgIGhlaWdodDogMS43ZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRncmV5LWRhcmstMSwgLjgpO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuN2VtO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBmb250LXNpemU6IDJlbTtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgNTAwbXMgZWFzZS1vdXQsIGJvdHRvbSA0MDBtcyBjdWJpYy1iZXppZXIoMC42NCwgMC41NywgMC42NywgMS4yMyksIGJhY2tncm91bmQtY29sb3IgMzAwbXMgZWFzZS1vdXQsIGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgXHJcbiAgICAvLyB0cnlpbmcgdG8gZml4IGJ0biBub3Qgc2hvd2luZyBvbiBtb2JpbGVcclxuICAgIHotaW5kZXg6IDk1MDA7XHJcbiAgICBcclxuICAgICYuYWN0aXZlIHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIGJvdHRvbTogMi4zZW07XHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IGF1dG87XHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGNvbG9yOiAjZWVlO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgXHJcbiIsIlxyXG4uaGFtYnVyZ2VyLWljb24ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHdpZHRoOiAyNnB4O1xyXG4gICAgaGVpZ2h0OiAyM3B4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAxNHB4O1xyXG4gICAgcmlnaHQ6IDE2cHg7XHJcbiAgICB6LWluZGV4OiA4MDAwO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICR0aW55KSB7XHJcbiAgICAgICAgcmlnaHQ6IDEwcHg7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGhlaWdodDogNHB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDNlbTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCA1NTBtcyBlYXNlLW91dDtcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICAmX19taWRkbGUge1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgICAgICBoZWlnaHQ6IDRweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAzZW07XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgNTUwbXMgZWFzZS1vdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGhlaWdodDogNHB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDNlbTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgNTUwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4uaGFtYnVyZ2VyLWljb24uaW50ZXJhY3Qge1xyXG5cclxuICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgc2NhbGVYKDEuMSk7ICBcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSBzY2FsZVgoMS4xKSB0cmFuc2xhdGUoLTFweCwgMXB4KTsgIFxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLmhhbWJ1cmdlci1pY29uLmludGVyYWN0IC5oYW1idXJnZXItaWNvbl9fbWlkZGxlIHtcclxuICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHNjYWxlWCgwKTtcclxufVxyXG5cclxuLnNpdGUtaGVhZGVyIHtcclxuICAgIHRyYW5zaXRpb246IGFsbCA0MDBtcyBlYXNlLW91dDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIFxyXG4gICAgJl9fd3JhcCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIHBhZGRpbmc6IDAgMS41ZW07ICBcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KDEyODBweCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwIGNhbGMoNTAlIC0gNjQwcHgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NvY2lhbCB7XHJcbiAgICAgICAgZmxleDogMTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciAmLWxpbms6bm90KDpob3Zlcikge1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAuODA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc29jaWFsLWxpbmsge1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluO1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMyk7ICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NvY2lhbC1saW5rOmhvdmVyIC5mYS5mYS1mYWNlYm9vay1zcXVhcmUge1xyXG4gICAgICAgIGNvbG9yOiByZ2IoNTksIDg5LCAxNTIpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zb2NpYWwtbGluazpob3ZlciAuZmEuZmEtcGludGVyZXN0LXNxdWFyZSB7XHJcbiAgICAgICAgY29sb3I6IHJnYigyMDMsMzIsMzkpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zb2NpYWwtbGluazpob3ZlciAuZmEuZmEtaW5zdGFncmFtIHtcclxuICAgICAgICBjb2xvcjogcmdiKDE5NSw0MiwxNjMpO1xyXG4gICAgfVxyXG4gICAgICAgIFxyXG4gICAgLmZhIHtcclxuICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBjb2xvcjogJGdvbGQtZGFyaztcclxuICAgIH1cclxuXHJcbiAgICBhOm5vdCg6Zmlyc3Qtb2YtdHlwZSkge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAuN2VtO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2xvZ28tbGluayB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdsdWNpZW5fc2Nob2Vuc2NocmlmdHZfY2F0UmcnLCBjdXJzaXZlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMy44ZW07XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgICAgICBjb2xvcjogJGdyZXktZGFyay0xO1xyXG4gICAgICAgIGZsZXg6IDI7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICAgICAgZmxleDogMCAwIDg1JTtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzLjVlbTtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVzdCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuOGVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHRpbnkpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjZlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xvZ28tbGluazphY3RpdmUge1xyXG4gICAgICAgIGNvbG9yOiAkZ3JleS1kYXJrLTE7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2FtcCB7XHJcbiAgICAgICAgY29sb3I6ICRnb2xkLWRhcms7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2J1dHRvbi1jb250YWluZXIge1xyXG4gICAgICAgIGZsZXg6IDE7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fYnV0dG9uOmxpbmssICZfX2J1dHRvbjp2aXNpdGVkIHtcclxuICAgICAgICBmb250LXNpemU6IC44NWVtO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAzMDBtcyBlYXNlLW91dDtcclxuICAgICAgICBwYWRkaW5nOiAuOGVtIDEuNGVtIC43ZW0gMS40ZW07XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCRnb2xkLW1lZGl1bSwgJGdvbGQtZGFyayk7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGdvbGQtZGFyaztcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOTllbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fYnV0dG9uOmxpbms6aG92ZXIsICZfX2J1dHRvbjp2aXNpdGVkOmhvdmVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoJGdvbGQsICRnb2xkLW1lZGl1bSk7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgZGFya2VuKCRnb2xkLCAxMCUpO1xyXG4gICAgfVxyXG5cclxuICAgICAmX19idXR0b24tMjpsaW5rLCAmX19idXR0b24tMjp2aXNpdGVkIHtcclxuICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcclxuICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRnb2xkLWRhcms7XHJcbiAgICAgICAgIGNvbG9yOiAkZ29sZC1kYXJrO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2J1dHRvbi0yOmxpbms6aG92ZXIsICZfX2J1dHRvbi0yOnZpc2l0ZWQ6aG92ZXIge1xyXG4gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ29sZC1kYXJrO1xyXG4gICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgYm9yZGVyLWNvbG9yOiAkZ29sZDsgXHJcbiAgICB9XHJcbiBcclxufVxyXG4iLCJcclxuXHJcbi5uYXZpZ2F0aW9uIHtcclxuICAgIHBhZGRpbmc6IC43NWVtIDEuNWVtO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAzNTBtcyBlYXNlLWluO1xyXG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRncmV5LWxpZ2h0LTI7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoMTIwMHB4KSB7XHJcbiAgICAgICAgcGFkZGluZzogLjc1ZW0gY2FsYyg1MCUgLSA2MDBweCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2FtcCB7XHJcbiAgICAgICAgY29sb3I6ICRnb2xkO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19sb2dvLXRleHQge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnbHVjaWVuX3NjaG9lbnNjaHJpZnR2X2NhdFJnJywgY3Vyc2l2ZTtcclxuICAgICAgICBmb250LXNpemU6IDIuN2VtO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19saXN0IHtcclxuICAgICAgICB3aWR0aDogNzAlO1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2l0ZW0tLWhpZGUge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyZW07XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICBcclxuICAgICAgICAmIC5uYXZpZ2F0aW9uX19saW5rOmxpbms6OmFmdGVyLCAmIC5uYXZpZ2F0aW9uX19saW5rOnZpc2l0ZWQ6OmFmdGVyIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fbGluazpsaW5rLCAmX19saW5rOnZpc2l0ZWQge1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLW91dDtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgZm9udC1zaXplOiAuODVlbTtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGNvbG9yOiAkZ3JleS1kYXJrLTE7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogLjAzZW07XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAuNGVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19saW5rOmxpbms6aG92ZXIsICZfX2xpbms6dmlzaXRlZDpob3ZlciB7XHJcbiAgICAgICAgY29sb3I6ICRnb2xkLWRhcms7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fbGluazpsaW5rOjphZnRlciwgJl9fbGluazp2aXNpdGVkOjphZnRlciB7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogbGVmdCAzMDBtcyBlYXNlLWluLCByaWdodCAzMDBtcyBlYXNlLWluO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICByaWdodDogNTAlO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ29sZC1kYXJrO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19saW5rOmhvdmVyOjphZnRlciB7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJi5maXhlZCB7XHJcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICAgIHotaW5kZXg6IDIwMDtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBwYWRkaW5nOiAuNzVlbSAyZW07IFxyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsLjUpO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDAgM3B4IDNweCByZ2JhKDAsMCwwLC4zKTtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuOyAvKiBhZGRlZCB0byBrZWVwIHRoZSBzdGlja3kgbmF2IGZyb20gZXhwYW5kaW5nIHdoZW4gbG9nbyBhbmltYXRpb24gaGFwcGVucyAqL1xyXG4gICAgICAgIFxyXG4gICAgICAgICYgLm5hdmlnYXRpb25fX2xpc3Qge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICYgLm5hdmlnYXRpb25fX2l0ZW0tLWhpZGUge1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmIC5uYXZpZ2F0aW9uX19pdGVtIHtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDJlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJiAubmF2aWdhdGlvbl9faXRlbS0taGlkZSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmIC5uYXZpZ2F0aW9uX19saW5rOmxpbmssICYgLm5hdmlnYXRpb25fX2xpbms6dmlzaXRlZCB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmIC5uYXZpZ2F0aW9uX19saW5rLmFjdGl2ZTpsaW5rLCAmIC5uYXZpZ2F0aW9uX19saW5rLmFjdGl2ZTp2aXNpdGVkIHtcclxuICAgICAgICAgICAgY29sb3I6ICRnb2xkO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmIC5uYXZpZ2F0aW9uX19saW5rLmFjdGl2ZTpsaW5rOjphZnRlciwgJiAubmF2aWdhdGlvbl9fbGluay5hY3RpdmU6dmlzaXRlZDo6YWZ0ZXIge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ29sZDtcclxuICAgICAgICAgICAgY29sb3I6ICRnb2xkO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbi1kZWxheTogMzAwbXM7IC8qIGFkZGVkIHRvIHRyeSB0byBrZWVwIG90aGVyIGxpbmtzIGZyb20gc3RhcnRpbmcgdG8gYW5pbWF0ZSB0aGlzIG9uIHRoZSB3YXkgZG93bi91cCB0byB0aGUgdGFyZ2V0IGxpbmsgKi9cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJiAubmF2aWdhdGlvbl9fbGluazpsaW5rOjphZnRlciwgJiAubmF2aWdhdGlvbl9fbGluazp2aXNpdGVkOjphZnRlciB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRnb2xkO1xyXG4gICAgICAgIH1cclxuIFxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcblxyXG4gICAgLm5hdmlnYXRpb24uaGFtYnVyZ2VyLW9uIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxuXHJcbiAgICAubmF2aWdhdGlvbi5oYW1idXJnZXItb24gLm5hdmlnYXRpb25fX2xpc3Qge1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgIH1cclxuXHJcbiAgICAubmF2aWdhdGlvbi5oYW1idXJnZXItb24gLm5hdmlnYXRpb25fX2l0ZW0ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmV5LWRhcmstMztcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgLm5hdmlnYXRpb24uaGFtYnVyZ2VyLW9uIC5uYXZpZ2F0aW9uX19pdGVtOm5vdCg6bGFzdC1vZi10eXBlKSB7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZCAjZmZmO1xyXG4gICAgfVxyXG5cclxuICAgIC5uYXZpZ2F0aW9uLmhhbWJ1cmdlci1vbiAubmF2aWdhdGlvbl9fbGluayB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgcGFkZGluZzogMWVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjllbTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMXB4KTtcclxuXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRnb2xkO1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm5hdmlnYXRpb24uaGFtYnVyZ2VyLW9uIC5uYXZpZ2F0aW9uX19saW5rOmhvdmVyOjphZnRlciB7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgIHJpZ2h0OiA1MCU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICAvKioqKiogRklYRUQgSEVBREVSICAqKioqKiovXHJcbiAgICAubmF2aWdhdGlvbi5oYW1idXJnZXItb24uZml4ZWQgLm5hdmlnYXRpb25fX2l0ZW0ge1xyXG4gICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbCkge1xyXG4gICAgICAgICAgICB3aWR0aDogNzAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgLm5hdmlnYXRpb24uaGFtYnVyZ2VyLW9uLmZpeGVkIC5uYXZpZ2F0aW9uX19pdGVtLS1oaWRlIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gICAgICAgIFxyXG4gICAgLm5hdmlnYXRpb24uaGFtYnVyZ2VyLW9uLmZpeGVkIC5uYXZpZ2F0aW9uX19saW5rLmFjdGl2ZTpsaW5rLCAubmF2aWdhdGlvbi5oYW1idXJnZXItb24uZml4ZWQgLm5hdmlnYXRpb25fX2xpbmsuYWN0aXZlOnZpc2l0ZWQge1xyXG4gICAgICAgIGNvbG9yOiAkZ29sZDtcclxuICAgICAgICBcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAubmF2aWdhdGlvbi5oYW1idXJnZXItb24uZml4ZWQgLm5hdmlnYXRpb25fX2xpbmsuYWN0aXZlOmxpbms6OmFmdGVyLCAubmF2aWdhdGlvbi5oYW1idXJnZXItb24uZml4ZWQgLm5hdmlnYXRpb25fX2xpbmsuYWN0aXZlOnZpc2l0ZWQ6OmFmdGVyIHtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgcmlnaHQ6IDUwJTtcclxuICAgIH1cclxuICAgIFxyXG5cclxufVxyXG5cclxuXHJcbiIsIlxyXG4ubGFyZ2UtaGVybyB7XHJcbiAgICBoZWlnaHQ6IDU1dnc7ICAgIFxyXG4gICAgYm9yZGVyLWJvdHRvbTogLjZ2dyBzb2xpZCAkZ29sZDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbGFyZ2UpIHtcclxuICAgICAgICBoZWlnaHQ6IDY0dnc7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLXNtYWxsKSB7XHJcbiAgICAgICAgaGVpZ2h0OiA5MHZ3O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsKSB7XHJcbiAgICAgICAgaGVpZ2h0OiAxNTB2dztcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBvYmplY3QtcG9zaXRpb246IDYwJSAxMDAlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19vdmVybGF5IHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICMzMzMgY2VudGVyL2NvdmVyIG5vLXJlcGVhdDtcclxuICAgICAgICB6LWluZGV4OiAwO1xyXG4gICAgICAgIGZpbHRlcjogYmx1cig0cHgpO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX21haW4taGVhZGluZyB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnVGFuZ2VyaW5lJywgY3Vyc2l2ZTtcclxuICAgICAgICB0ZXh0LXNoYWRvdzogMXB4IDFweCAycHggcmdiYSgwLDAsMCwuOCk7XHJcbiAgICAgICAgZm9udC1zaXplOiAzLjhlbTtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS4wNjtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogOSU7XHJcbiAgICAgICAgbGVmdDogNDklOyAvLyBtb3ZlIGl0IGEgdG91Y2ggbGVmdCB0byBiZXR0ZXIgbGluZSB1cCB3aXRoIG1haW4gZSBhbmQgYiB0ZXh0XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCUpO1xyXG4gICAgICAgIHdpZHRoOiA2NiU7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA4NTBweDtcclxuICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLXNtYWxsKSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA4MSU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzLjdlbTtcclxuICAgICAgICAgICAgd2lkdGg6IDg2JTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVzdCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDMuNTFlbTtcclxuICAgICAgICAgICAgd2lkdGg6IDk3JTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICR0aW55KSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogM2VtO1xyXG4gICAgICAgICAgICB3aWR0aDogOTglO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fcXVvdGUge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3F1b3RlLS00IHtcclxuICAgICAgICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjVlbTtcclxuICAgICAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC44OGVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19hbXAge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS40ZW07XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IC42O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19hbXAtLXJpZ2h0IHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMTNweDtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgZmFkZS1pbiB7XHJcbiAgICBcclxuICAgIDEwMCUge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5sYXJnZS1oZXJvLmxvYWRlZCAubGFyZ2UtaGVyb19fcXVvdGUge1xyXG4gICAgYW5pbWF0aW9uOiBmYWRlLWluIDgwMG1zIDcwMG1zIGVhc2UtaW4gYm90aDtcclxufVxyXG5cclxuLmxhcmdlLWhlcm8ubG9hZGVkIC5sYXJnZS1oZXJvX19xdW90ZS0tMiB7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IDIwMDBtcztcclxufVxyXG5cclxuLmxhcmdlLWhlcm8ubG9hZGVkIC5sYXJnZS1oZXJvX19xdW90ZS0tMyB7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IDQwMDBtcztcclxufVxyXG5cclxuLmxhcmdlLWhlcm8ubG9hZGVkIC5sYXJnZS1oZXJvX19xdW90ZS0tNCB7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IDUzMDBtcztcclxufVxyXG5cclxuXHJcbiIsIlxyXG4ucm90YXRlLTEgc3BhbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIFxyXG4gICAgLy90cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHRyYW5zbGF0ZSgtLjFlbSwgMWVtKTtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgdHJhbnNsYXRlKC0uMWVtLCAuNWVtKTtcclxuICAgIFxyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XHJcbn1cclxuXHJcbi5yb3RhdGUtMiBzcGFuIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgXHJcbiAgICAvL3RyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSB0cmFuc2xhdGUoLS40ZW0sIC0xZW0pO1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSgtLjRlbSwgLS43NWVtKTtcclxuICAgIFxyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XHJcbn1cclxuXHJcblxyXG4uaW50cm8ge1xyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgxMjgwcHgpIHtcclxuICAgICAgICBwYWRkaW5nOiA2ZW0gY2FsYyg1MCUgLSA2MjdweCk7IC8vY2hhbmdlZCB0byBhZGQgcGFkZGluZyBhcm91bmQgMTI4MHB4XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2dyaWQge1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxLjVmciAxZnI7XHJcbiAgICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAuNWVtO1xyXG4gICAgICAgIG1hcmdpbjogNGVtIDA7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJG1lZGl1bS1zbWFsbCkge1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgICAgICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAwO1xyXG4gICAgICAgICAgICBncmlkLXJvdy1nYXA6IDFlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgXHJcbiAgICAvKioqKiogICBTVU1NQVJZICAgKioqKioqL1xyXG4gICAgJl9fc3VtbWFyeSB7XHJcbiAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRtZWRpdW0tc21hbGwpIHtcclxuICAgICAgICAgICAgcGFkZGluZzogM2VtO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkc21hbGwpIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMmVtIDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRzbWFsbGVzdCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBwOmZpcnN0LW9mLXR5cGU6OmZpcnN0LWxldHRlciB7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBzZXJpZjtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA0LjZlbTtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IC45O1xyXG4gICAgICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICAgICAgY29sb3I6ICRnb2xkLWRhcms7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLjFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgcCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4xZW07XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIHA6bm90KDpsYXN0LW9mLXR5cGUpIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogLjhlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xpbmsge1xyXG4gICAgICAgIGNvbG9yOiAkZ29sZC1tZWRpdW07XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkZ29sZC1kYXJrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG5cclxuICAgIC8qKioqKiAgICBCUkFORCBMT0dPUyAgICAqKioqKi9cclxuICAgICZfX2JyYW5kcyB7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDguNDM3ZW0sIDFmcikpO1xyXG4gICAgICAgIGdyaWQtZ2FwOiAyZW07XHJcbiAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkc21hbGwpIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19icmFuZHNfX2hlYWRpbmcge1xyXG4gICAgICAgIGdyaWQtY29sdW1uOiAxIC8gLTE7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciBhdXRvIDFmcjtcclxuICAgICAgICBncmlkLWdhcDogLjc1ZW07XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBjb2xvcjogJGdvbGQtZGlhbW9uZDtcclxuICAgICAgICBmb250LXNpemU6IDEuNGVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE7XHJcbiAgICAgICAgbWFyZ2luOiAyLjVlbSAwO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjo6YmVmb3JlLCAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIGhlaWdodDogLjMxMjVlbTtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogLjYyNWVtO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICRnb2xkLWRpYW1vbmQsIHRyYW5zcGFyZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsICRnb2xkLWRpYW1vbmQsIHRyYW5zcGFyZW50KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2JyYW5kc19faW1nIHtcclxuICAgICAgICB3aWR0aDogOS4zNzVlbTtcclxuICAgICAgICBoZWlnaHQ6IDYuMjVlbTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICBvcGFjaXR5OiAuMzU7XHJcbiAgICAgICAgZmlsdGVyOiBncmF5c2NhbGUoMTAwJSk7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogNDAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgIGZpbHRlcjogZ3JheXNjYWxlKDApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICAgXHJcbn1cclxuXHJcblxyXG4vKioqKioqKiogRElBTU9ORCBJTlRSTyBHUklEICAqKioqKioqKiovXHJcblxyXG5AaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkbGFyZ2VzdCkge1xyXG4gICAgLmltZy1jbGlwLWJsb2NrIHtcclxuICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pbWctY2xpcC1yb3cge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogLTkuNTA1ZW07IFxyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkbGFyZ2VzdCkge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC03LjYyNWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvL2ZvbnQgc2l6ZSAxNC40cHhcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRsYXJnZSkge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC03LjA1ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vZm9udCBzaXplIDEyLjhweFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJG1lZGl1bSkge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC02Ljk1ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRzbWFsbGVzdCkge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC02LjVlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJHRpbnkpIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAtNS4xZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pbWctY2xpcC13cmFwIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiAxOC43NWVtOyAvKiB3YXMgMzAwcHggKi9cclxuICAgIGhlaWdodDogMTguNzVlbTsgLyogd2FzIDMwMHB4ICovXHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2pkdXF1YWluL2NfZmlsbCxmX2F1dG8saF82MDAscV9hdXRvLHdfNjAwL3YxNTY0MDE5MjA1L2VhbmRiL2RpYW1vbmRfbGhrcjd1LmpwZycpOyAvKiA2MDB4NjAwICovXHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oNTAlIDAlLCAxMDAlIDUwJSwgNTAlIDEwMCUsIDAlIDUwJSk7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRsYXJnZXN0KSB7XHJcbiAgICAgICAgd2lkdGg6IDE1ZW07IFxyXG4gICAgICAgIGhlaWdodDogMTVlbTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2pkdXF1YWluL2NfZmlsbCxmX2F1dG8saF80ODAscV9hdXRvLHdfNDgwL3YxNTY0MDE5MjA1L2VhbmRiL2RpYW1vbmRfbGhrcjd1LmpwZycpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvL2ZvbnQgc2l6ZSAxNC40cHhcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRsYXJnZSkge1xyXG4gICAgICAgIHdpZHRoOiAxNGVtOyBcclxuICAgICAgICBoZWlnaHQ6IDE0ZW07XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9qZHVxdWFpbi9jX2ZpbGwsZl9hdXRvLGhfNDAzLHFfYXV0byx3XzQwMy92MTU2NDAxOTIwNS9lYW5kYi9kaWFtb25kX2xoa3I3dS5qcGcnKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy9mb250IHNpemUgMTIuOHB4XHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgd2lkdGg6IDEzLjhlbTsgXHJcbiAgICAgICAgaGVpZ2h0OiAxMy44ZW07XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9qZHVxdWFpbi9jX2ZpbGwsZl9hdXRvLGhfMzUzLHFfYXV0byx3XzM1My92MTU2NDAxOTIwNS9lYW5kYi9kaWFtb25kX2xoa3I3dS5qcGcnKTsgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRzbWFsbGVzdCkge1xyXG4gICAgICAgIHdpZHRoOiAxM2VtOyBcclxuICAgICAgICBoZWlnaHQ6IDEzZW07IFxyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vamR1cXVhaW4vY19maWxsLGZfYXV0byxoXzMzMyxxX2F1dG8sd18zMzMvdjE1NjQwMTkyMDUvZWFuZGIvZGlhbW9uZF9saGtyN3UuanBnJyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vZm9udCBzaXplIDEyLjhweFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJHRpbnkpIHtcclxuICAgICAgICB3aWR0aDogMTBlbTsgXHJcbiAgICAgICAgaGVpZ2h0OiAxMGVtOyBcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2pkdXF1YWluL2NfZmlsbCxmX2F1dG8saF8yNTYscV9hdXRvLHdfMjU2L3YxNTY0MDE5MjA1L2VhbmRiL2RpYW1vbmRfbGhrcjd1LmpwZycpO1xyXG4gICAgfVxyXG59XHJcblxyXG4uaW1nLWNsaXAtcm93OmZpcnN0LW9mLXR5cGUge1xyXG4gICAgbWFyZ2luLXRvcDogYXV0bztcclxufVxyXG5cclxuLmltZy1jbGlwLXJvdzpmaXJzdC1vZi10eXBlIC5pbWctY2xpcC13cmFwIHtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcclxufVxyXG5cclxuLmltZy1jbGlwLXJvdzpudGgtb2YtdHlwZSgyKSAuaW1nLWNsaXAtd3JhcDpudGgtb2YtdHlwZShvZGQpIHtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQ7XHJcbn1cclxuXHJcbi5pbWctY2xpcC1yb3c6bnRoLW9mLXR5cGUoMikgLmltZy1jbGlwLXdyYXA6bnRoLW9mLXR5cGUoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQ7XHJcbn1cclxuXHJcbi5pbWctY2xpcC1yb3c6bGFzdC1vZi10eXBlIC5pbWctY2xpcC13cmFwIHtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGJvdHRvbTtcclxufVxyXG5cclxuLm92ZXJsYXkge1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDQwMG1zIGxpbmVhcjtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMTcxLCAxNDcsIDExNiwgMC43NSk7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgIFxyXG4gICAgei1pbmRleDogODg4O1xyXG59XHJcblxyXG4ub3ZlcmxheS1jb250ZW50IHtcclxuICAgIFxyXG4gICAgZm9udC1mYW1pbHk6ICdsdWNpZW5fc2Nob2Vuc2NocmlmdHZfY2F0UmcnLCBjdXJzaXZlO1xyXG4gICAgXHJcbiAgICAvL2NvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIFxyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIFxyXG4gICAgLy9mb250LXNpemU6IDE4MCU7XHJcbiAgICBcclxuICAgIGZvbnQtc2l6ZTogMjUwJTtcclxuICAgIC8vdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIFxyXG4gICAgXHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgdGV4dC1zaGFkb3c6IDFweCAxcHggMnB4IHJnYmEoMCwwLDAsMC4xKTtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJGxhcmdlc3QpIHtcclxuICAgICAgICBcclxuICAgICAgICAvL2ZvbnQtc2l6ZTogMTUwJTtcclxuICAgICAgICBmb250LXNpemU6IDIxMCU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRzbWFsbGVzdCkge1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vZm9udC1zaXplOiAxMzAlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTkwJTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJHRpbnkpIHtcclxuICAgICAgICBcclxuICAgICAgICAvL2ZvbnQtc2l6ZTogMTIwJTtcclxuICAgICAgICBmb250LXNpemU6IDE1MCU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5vdmVybGF5LWNvbnRlbnQuYW1wZXJzYW5kIHtcclxuICAgIGNvbG9yOiAkZ29sZDtcclxufVxyXG5cclxuLm92ZXJsYXktY29udGVudCBpbWcge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRsYXJnZXN0KSB7XHJcbiAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgIH1cclxufVxyXG5cclxuLmltZy1jbGlwLXdyYXA6aG92ZXIgLm92ZXJsYXkge1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZS1pbjtcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7IC8qIHRyYW5zcGFyZW50IHdvdWxkIGFsc28gd29yayAqL1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCJcclxuLnNlcnZpY2VzIHtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVzdCkge1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgfSBcclxuICAgIFxyXG4gICAgJl9fZ3JpZCB7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDM1MHB4LCAxZnIpKTtcclxuICAgICAgICBncmlkLWdhcDogMWVtO1xyXG4gICAgICAgIG1heC13aWR0aDogMTI4MHB4O1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRodWdlKSB7XHJcbiAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgzMTBweCwgMWZyKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAxMDUwcHgpIHtcclxuICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDQwMHB4LCAxZnIpKTtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGluaXRpYWw7XHJcbiAgICAgICAgICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDkwMHB4KSB7XHJcbiAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCg1MDBweCwgMWZyKSk7XHJcbiAgICAgICAgICAgIGdyaWQtcm93LWdhcDogMi41ZW07XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4xZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwpIHtcclxuICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDQwMHB4LCAxZnIpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVzdCkge1xyXG4gICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMzUwcHgsIDFmcikpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHRpbnkpIHtcclxuICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDMxMHB4LCAxZnIpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgJl9fbWFpbiB7XHJcbiAgICAgICAgd2lkdGg6IDQwMHB4OyAvL3JlbW92aW5nIDFweCBmaXhlZCBzaG9ydCB2ZXJ0aWNhbCBsaW5lIHRoYXQgYXBwZWFyIGZyb20gaW1nXHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgICAgICBib3gtc2hhZG93OiAwIDAgMnB4IDJweCByZ2JhKCRncmV5LWxpZ2h0LTIsLjMpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkaHVnZXN0KSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAzNTBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRodWdlKSB7XHJcbiAgICAgICAgICAgd2lkdGg6IDMxMHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggMTA1MHB4KSB7XHJcbiAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggOTAwcHgpIHtcclxuICAgICAgICAgICB3aWR0aDogNTAwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwpIHtcclxuICAgICAgICAgICB3aWR0aDogNDAwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlc3QpIHtcclxuICAgICAgICAgICB3aWR0aDogMzUwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkdGlueSkge1xyXG4gICAgICAgICAgIHdpZHRoOiAzMTBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2ltYWdlLXdyYXAge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW1hZ2Utd3JhcDo6YWZ0ZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL2N1cnZlLW92ZXJsYXkuc3ZnJyk7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBib3R0b206IDA7IFxyXG4gICAgICAgIGhlaWdodDogNTJweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJGh1Z2VzdCkge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQ1cHg7XHJcbiAgICAgICAgICAgIC8vdHJhbnNmb3JtOiBzY2FsZVkoMS4wMik7IC8vdGhpcyBmaXhlcyBpc3N1ZSBvZiBob3Jpem9uYWwgbGluZSBmcm9tIGltZyBzaG93aW5nXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkaHVnZSkge1xyXG4gICAgICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDEwNTBweCkge1xyXG4gICAgICAgICAgIGhlaWdodDogNTJweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDkwMHB4KSB7XHJcbiAgICAgICAgICAgaGVpZ2h0OiA2NXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsKSB7XHJcbiAgICAgICAgICAgaGVpZ2h0OiA1MnB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXN0KSB7XHJcbiAgICAgICAgICAgaGVpZ2h0OiA0NXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHRpbnkpIHtcclxuICAgICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pbWFnZSB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgcGFkZGluZzogMmVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlc3QpIHtcclxuICAgICAgICAgICBwYWRkaW5nOiAxZW0gMmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19ib3JkZXIge1xyXG4gICAgICAgIGhlaWdodDogNHB4O1xyXG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkZ3JleS1saWdodC0yO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZ3JleS1saWdodC0yO1xyXG4gICAgICAgIG1hcmdpbjogMWVtIDA7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fZGVzY3JpcHRpb24taGVhZGluZyB7XHJcbiAgICAgICAgIGZvbnQtc2l6ZTogMS40ZW07XHJcbiAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgIG1hcmdpbjogLjNlbSAwIC44NWVtIDA7XHJcbiAgICAgICAgIGNvbG9yOiAkZ3JleS1kYXJrLTI7XHJcbiAgICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fbGlzdCB7XHJcbiAgICAgICAgY29sb3I6ICRncmV5LWRhcmstMTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAuNWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pdGVtIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2l0ZW0gKyAmX19pdGVtIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAuNmVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuZmEge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4zZW07XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIGNvbG9yOiAkZ29sZC1kYXJrO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogLjI1ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xpbmsge1xyXG4gICAgICAgIGNvbG9yOiAkZ3JleS1kYXJrLTI7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IC4zZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xpbms6aG92ZXIge1xyXG4gICAgICAgIGNvbG9yOiAkZ3JleS1kYXJrLTE7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1pbjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbGluazo6YWZ0ZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4gICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xyXG4gICAgICAgIHotaW5kZXg6IDg4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcclxuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMzUwbXMgZWFzZS1vdXQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xpbms6aG92ZXI6OmFmdGVyIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3BlY2lhbCB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAzMyU7XHJcbiAgICAgICAgcGFkZGluZzogMS41ZW07XHJcbiAgICAgICAgbWFyZ2luOiA1ZW0gYXV0byAwIGF1dG87XHJcbiAgICAgICAgYm9yZGVyLXRvcDogLjYyNWVtIHNvbGlkICRnb2xkLWRhcms7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogLjYyNWVtIHNvbGlkICRnb2xkLWRhcms7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogM2VtO1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgjZmZmLCAjZmVmYWYwKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3BlY2lhbC1oZWFkaW5nIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42ZW07XHJcbiAgICAgICAgY29sb3I6ICRnb2xkLWRhcms7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zcGVjaWFsLW1vbnRoIHtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zcGVjaWFsLXBhcmEge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4yZW07XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDsgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgLyoqKioqKioqKiogICBTRVJWSUNFUyBUQUJMRSBMSVNUICAgKioqKioqKioqKi9cclxuICAgIFxyXG4gICAgLyogSUYgVEhFUkUgQVJFIEFOWSBNT1JFIElTU1VFUyBXSVRIIEJFSU5HIFRPTyBOQVJST1cgQVQgTU9CSUxFIFdJRFRIUyBBREQgQSBNSU4tV0lEVEggKi9cclxuICAgICZfX3RhYmxlLXdyYXAge1xyXG4gICAgICAgIFxyXG4gICAgICAgIG1heC13aWR0aDogODQwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy9hZGQgdGhpcyB0byBrZWVwIGZyb20gc2VlaW5nIHRoZSB0YWJsZSBmYWRlLW91dCBvbiBwYWdlIGxvYWRcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgNDAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tc21hbGwpIHtcclxuICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbCkge1xyXG4gICAgICAgICAgICB3aWR0aDogODUlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXN0KSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvL2FkZCB0aGlzIHRvIGtlZXAgZnJvbSBzZWVpbmcgdGhlIHRhYmxlIGZhZGUtb3V0IG9uIHBhZ2UgbG9hZFxyXG4gICAgJl9fdGFibGUtd3JhcC5lbmFibGVkIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGFibGUge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLyogb25seSBkbyBhIGJvdHRvbSByYWRpdXMgYXMgdGhlIGNhcHRpb24gaGFzIGEgdG9wIHJhZGl1cyAgKi9cclxuICAgICAgICBib3JkZXItcmFkaXVzOiAwIDAgMTJweCAxMnB4O1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8qIGFkZGVkIHRoaXMgZm9yIGJvcmRlci1yYWRpdXMgdG8gd29yayAqL1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgICYtY2FwdGlvbiB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IC4yNWVtIDAgLjI1ZW0gMDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuOGVtO1xyXG4gICAgICAgICAgICBjb2xvcjogIzMzMztcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbigkZ29sZCwgMTUlKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8qIG1vemlsbGEgbmVlZHMgdGhlIGNhcHRpb24gdG8gaGF2ZSBhIGJvcmRlciByYWRpdXMgaW4gb3JkZXIgZm9yIHRoZSB0b3Agb2YgdGhlIHRhYmxlIHRvIGhhdmUgYSBib3JkZXIgcmFkaXVzICAqL1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMnB4IDEycHggMCAwO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tc21hbGwpIHtcclxuICAgICAgICAgICAgICAgIC8vZm9udC1zaXplOiAyLjhlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbCkge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyLjRlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVzdCkge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjdlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJi1jYXB0aW9uLXNwYW4ge1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogJ1RhbmdlcmluZScsIGN1cnNpdmU7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAuNztcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjZlbTtcclxuICAgICAgICAgICAgY29sb3I6ICRnb2xkLWRhcms7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS1zbWFsbCkge1xyXG4gICAgICAgICAgICAgICAgLy9mb250LXNpemU6IDEuNmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS1zbWFsbCkge1xyXG4gICAgICAgICAgICAgICAgLy9mb250LXNpemU6IDJlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgIHRyOm50aC1vZi10eXBlKG9kZCl7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRnb2xkLCAxNSUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICB0cjpudGgtb2YtdHlwZShldmVuKXtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRnb2xkO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICB0aCB7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgLjc1ZW07XHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS40ZW07XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS1zbWFsbCkge1xyXG4gICAgICAgICAgICAgICAgLy9mb250LXNpemU6IDEuNGVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsKSB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuM2VtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXN0KSB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuMWVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIHRkIHtcclxuICAgICAgICAgICAgcGFkZGluZzogLjZlbSAuNzVlbSAuNmVtIDEuMWVtO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tc21hbGwpIHtcclxuICAgICAgICAgICAgICAgIC8vcGFkZGluZzogLjZlbSAuNzVlbSAuNmVtIDEuMWVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsKSB7XHJcbiAgICAgICAgICAgICAgICAvL3BhZGRpbmc6IC42ZW0gLjc1ZW0gLjZlbSAxLjFlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVzdCkge1xyXG4gICAgICAgICAgICAgICAgLy9wYWRkaW5nOiAuNmVtIC43NWVtIC42ZW0gMS4xZW07XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IC45ZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9IFxyXG5cclxufVxyXG5cclxuXHJcbi8qKiBBbmltYXRlIHNlcnZpY2VzIHNlY3RzIG9uIHNjcm9sbCAgKioqL1xyXG5cclxuLypcclxuXHJcbi5zZXJ2aWNlc19fZ3JpZC5hbmltYXRlLWluIC5zZXJ2aWNlc19fd3JhcCB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IFxyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuKi9cclxuXHJcbi8qKioqKioqKiAgVEFCTEUgV1JBUFBFUi9NT0RBTCBTVFlMRVMgICoqKioqKioqKiovXHJcbi5jdXQtYW5kLWRlc2lnbl93cmFwLCAuY29sb3Jfd3JhcCwgLmFkZGl0aW9uYWxfd3JhcCB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB6LWluZGV4OiAxMDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC44KTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBvcGFjaXR5OiAwOyBcclxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDQwMG1zIGVhc2Utb3V0O1xyXG4gICAgXHJcbiAgICAmOnRhcmdldCB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICBwb2ludGVyLWV2ZW50czogYXV0bztcclxuICAgIH1cclxuICAgICBcclxuICAgICY6dGFyZ2V0IC5zZXJ2aWNlc19fdGFibGUtd3JhcCB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xyXG4gICAgfSBcclxuICAgIFxyXG59XHJcblxyXG4uY2xvc2VfbW9kYWwge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LXNpemU6IDNlbTtcclxuICAgIHRvcDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgd2lkdGg6IDFlbTtcclxuICAgIGhlaWdodDogMWVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbGluZS1oZWlnaHQ6IC45ZW07XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICBjb2xvcjogJGdyZXktZGFyay0xO1xyXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEycHg7XHJcbn1cclxuXHJcbi5jbG9zZV9tb2RhbDpob3ZlciB7XHJcbiAgICBjb2xvcjogJGdyZXktZGFyay0zO1xyXG59XHJcblxyXG5cclxuLy93cmFwcGVyIHRvIGVuc3VyZSBhIGNsaWNrIG9yIHRhcCBhbnl3aGVyZSBjbG9zZXMgdGhlIG1vZGFsXHJcbi53cmFwLWNsb3NlIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuXHJcbi8qIGlwaG9uZTUgKi9cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBcclxuICBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDMyNXB4KSBcclxuICBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDU3M3B4KVxyXG4gIGFuZCAob3JpZW50YXRpb246IHBvcnRyYWl0KSB7XHJcbiAgICAgIC5zZXJ2aWNlc19fdGFibGUtd3JhcCB7XHJcbiAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICBjb2xvcjogIzExMTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLnNlcnZpY2VzX190YWJsZS1jYXB0aW9uIHtcclxuICAgICAgICBmb250LXNpemU6IDEuNGVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuc2VydmljZXNfX3RhYmxlLWNhcHRpb24tc3BhbiB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjJlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLnNlcnZpY2VzX190YWJsZSB0aCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAuOWVtO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG59XHJcblxyXG4vKiBpcGhvbmU1ICovXHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gXHJcbiAgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzODBweCkgXHJcbiAgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA2NzNweCkgXHJcbiAgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHsgXHJcbiAgICAuc2VydmljZXNfX3RhYmxlLXdyYXAge1xyXG4gICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgY29sb3I6ICMxMTE7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5zZXJ2aWNlc19fdGFibGUtY2FwdGlvbiB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjRlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLnNlcnZpY2VzX190YWJsZS1jYXB0aW9uLXNwYW4ge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMi4yZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5zZXJ2aWNlc19fdGFibGUgdGgge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjllbTtcclxuICAgICAgICBcclxuICAgIH1cclxufVxyXG5cclxuLyoqKioqKioqKioqIExBTkRTQ0FQRSBTVFlMRVMgYW5kIGxhcHRvcHMgdGhhdCBhcmUgbm90IHZlcnkgaGlnaCBpLmUgMTI4MCB4IDU3MCAqKioqKioqKioqKi9cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSBhbmQgKG1heC1oZWlnaHQ6IDYwMHB4KSAge1xyXG4gICAgXHJcbiAgICAuc2VydmljZXNfX3RhYmxlLXdyYXAge1xyXG4gICAgICAgIHdpZHRoOiA2OCU7XHJcbiAgICAgICAgY29sb3I6ICMxMTE7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5zZXJ2aWNlc19fdGFibGUtY2FwdGlvbiB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjRlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLnNlcnZpY2VzX190YWJsZS1jYXB0aW9uLXNwYW4ge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMi4yZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5zZXJ2aWNlc19fdGFibGUgdGgge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjllbTtcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgLnNlcnZpY2VzX190YWJsZSB0ZCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAuOGVtO1xyXG4gICAgICAgIHBhZGRpbmc6IC41MGVtIC41MGVtIC41MGVtIDEuMWVtO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuXHJcbiIsIlxyXG4uZ2FsbGVyeSB7XHJcbiAgICBcclxuICAgIHBhZGRpbmctYm90dG9tOiAxOGVtO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkbWVkaXVtLXNtYWxsKSB7XHJcbiAgICAgICAgcGFkZGluZzogNWVtIDAgMTJlbSAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19ncmlkIHtcclxuICAgICAgICBcclxuICAgICAgICAvLyB0aGlzIGtlZXBzIGVtcHR5IGFyZWFzIGF0IHRoZSBlbmQgb2YgdGhlIGdyaWQgZnJvbSBiZWluZyBhYmxlIHRvIGJlIGhvdmVyZWRcclxuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICBcclxuICAgICAgICBtYXgtd2lkdGg6IDEyODBweDtcclxuICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMTguNzVlbSwgMWZyKSk7XHJcbiAgICAgICAgZ3JpZC1hdXRvLWZsb3c6IGRlbnNlOyBcclxuICAgICAgICBcclxuICAgICAgICBncmlkLWF1dG8tcm93czogMjBlbTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkbWVkaXVtLXNtYWxsKSB7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMTVlbSwgMWZyKSk7XHJcbiAgICAgICAgICAgIGdyaWQtYXV0by1yb3dzOiAxN2VtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkc21hbGxlc3QpIHtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgxMWVtLCAxZnIpKTtcclxuICAgICAgICAgICAgZ3JpZC1hdXRvLXJvd3M6IDEyLjVlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xpbmsge1xyXG4gICAgICAgIC8vIHJlZW5hYmxlIGhvdmVyIGV2ZW50cyBmb3IgaW5kaXZpZHVhbCBncmlkIGl0ZW1zXHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IGF1dG87ICAgICAgXHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgYmFja2dyb3VuZDogIzEzMTIxMjtcclxuICAgICAgICBcclxuICAgICAgIC8qIFxyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIFxyXG4gICAgICAgICovXHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xpbmsuZmVhdHVyZWQge1xyXG4gICAgICAgIGdyaWQtcm93OiBzcGFuIDI7XHJcbiAgICAgICAgZ3JpZC1jb2x1bW46IHNwYW4gMjtcclxuICAgICAgICBcclxuICAgICAgICAvKkBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRzbWFsbCkge1xyXG4gICAgICAgICAgICBncmlkLXJvdzogc3BhbiAxO1xyXG4gICAgICAgICAgICBncmlkLWNvbHVtbjogc3BhbiAxO1xyXG4gICAgICAgIH0qL1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19saW5rLnRhbGwge1xyXG4gICAgICAgIGdyaWQtcm93OiBzcGFuIDI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2dyaWQ6aG92ZXIgLmdhbGxlcnlfX2ZpZ3VyZSB7IG9wYWNpdHk6IC4zOyB9XHJcbiAgICAmX19ncmlkOmhvdmVyIC5nYWxsZXJ5X19maWd1cmU6aG92ZXIgeyBvcGFjaXR5OiAxOyAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICZfX2ZpZ3VyZSB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgODAwbXMgZWFzZS1vdXQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2ltYWdlIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuXHJcblxyXG4vKioqKioqIEFOSU1BVEVEIEhPVkVSIFNUWUxFIG9uZSAqKioqKi9cclxuXHJcbi8qXHJcblxyXG4uc25pcDE1NzYge1xyXG4gICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGNvbG9yOiAjNDQ0O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnNuaXAxNTc2ICoge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjQ1cyBlYXNlO1xyXG59XHJcblxyXG4uc25pcDE1NzY6YWZ0ZXIge1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgbGluZWFyO1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ29sZDtcclxuICAgIGhlaWdodDogMTUwJTtcclxuICAgIGJvdHRvbTogLTE0NSU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbn1cclxuXHJcbi5zbmlwMTU3NiBmaWdjYXB0aW9uIHtcclxuXHRsaW5lLWhlaWdodDogMS4xZW07XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB6LWluZGV4OiAxO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHRyYW5zaXRpb24tZGVsYXk6IDBzO1xyXG4gICAgb3BhY2l0eTogMDtcclxufVxyXG5cclxuLnNuaXAxNTc2IGgzIHtcclxuICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG59XHJcblxyXG4uc25pcDE1NzYgaDMgc3BhbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcclxufVxyXG5cclxuLnNuaXAxNTc2OmhvdmVyID4gaW1nLFxyXG4uc25pcDE1NzYuaG92ZXIgPiBpbWcge1xyXG4gICAgb3BhY2l0eTogLjE7XHJcbn1cclxuXHJcbi5zbmlwMTU3Njpob3ZlcjphZnRlcixcclxuLnNuaXAxNTc2LmhvdmVyOmFmdGVyIHtcclxuICAgIGJvdHRvbTogOTUlO1xyXG59XHJcblxyXG4uc25pcDE1NzY6aG92ZXIgZmlnY2FwdGlvbixcclxuLnNuaXAxNTc2LmhvdmVyIGZpZ2NhcHRpb24ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHRyYW5zaXRpb24tZGVsYXk6IC40cztcclxufVxyXG5cclxuLmRlbW8gLnNuaXAxNTc2IHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxuXHJcbi5kZW1vIGE6aG92ZXIgLnNuaXAxNTc2IHtcclxuICAgIHRyYW5zZm9ybTogbm9uZTtcclxufVxyXG5cclxuKi9cclxuXHJcbi8qKioqKiogQU5JTUFURUQgSE9WRVIgU1RZTEUgdHdvICoqKioqL1xyXG5cclxuXHJcblxyXG4vKlxyXG5cclxuLnNuaXAxMzM0IHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjRlbTtcclxufVxyXG5cclxuLnNuaXAxMzM0ICoge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjM1cyBlYXNlLW91dDtcclxufVxyXG5cclxuKi9cclxuXHJcbi8qXHJcbi5zbmlwMTMzNCBpbWcge1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuOHMgZWFzZS1vdXQ7XHJcbn1cclxuXHJcbi5zbmlwMTMzNDpiZWZvcmUge1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0IDMwMG1zO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLC43KTtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICByaWdodDogNTAlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDUwcHggd2hpdGU7XHJcbn1cclxuXHJcbi5zbmlwMTMzNCBmaWdjYXB0aW9uIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHotaW5kZXg6IDI7XHJcbn1cclxuXHJcbi5zbmlwMTMzNCBoMiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xyXG59XHJcblxyXG4uc25pcDEzMzQgcCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDYwcHggIWltcG9ydGFudDtcclxuICAgIGZvbnQtc2l6ZTogLjhlbTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDAlKTtcclxufVxyXG5cclxuLnNuaXAxMzM0IGgyLCAuc25pcDEzMzQgcCB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDI1cHg7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG59XHJcblxyXG5cclxuLnNuaXAxMzM0OmhvdmVyOmJlZm9yZSB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMHB4IHdoaXRlO1xyXG4gICAgdHJhbnNpdGlvbi1kZWxheTogMHM7XHJcbn1cclxuXHJcbi5zbmlwMTMzNDpob3ZlciBmaWdjYXB0aW9uIGgyLFxyXG4uc25pcDEzMzQ6aG92ZXIgZmlnY2FwdGlvbiBwIHtcclxuICAgIHRyYW5zaXRpb24tZGVsYXk6IDMwMG1zO1xyXG59XHJcblxyXG4uc25pcDEzMzQ6aG92ZXIgZmlnY2FwdGlvbiBoMiB7XHJcbiAgICBvcGFjaXR5OiAuNTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxufVxyXG5cclxuLnNuaXAxMzM0OmhvdmVyIGZpZ2NhcHRpb24gcCB7XHJcbiAgICBvcGFjaXR5OiAuNztcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxufVxyXG5cclxuXHJcbi5kZW1vIC5zbmlwMTMzNCB7XHJcbiAgICBvcGFjaXR5OiAuNztcclxufVxyXG5cclxuLmRlbW8gYTpob3ZlciAuc25pcDEzMzQge1xyXG4gICAgdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG4uZGVtbyAuc25pcDEzMzQgZmlnY2FwdGlvbiB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcblxyXG5cclxuKi9cclxuIiwiLnRucy1vdXRlciB7XHJcbiAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnRcclxufVxyXG5cclxuLnRucy1vdXRlciBbaGlkZGVuXSB7XHJcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnRcclxufVxyXG5cclxuLnRucy1vdXRlciBbYXJpYS1jb250cm9sc10sXHJcbi50bnMtb3V0ZXIgW2RhdGEtYWN0aW9uXSB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXJcclxufVxyXG5cclxuLnRucy1zbGlkZXIge1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMHM7XHJcbiAgICAtbW96LXRyYW5zaXRpb246IGFsbCAwcztcclxuICAgIHRyYW5zaXRpb246IGFsbCAwc1xyXG59XHJcblxyXG4udG5zLXNsaWRlciA+IC50bnMtaXRlbSB7XHJcbiAgICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94XHJcbn1cclxuXHJcbi50bnMtaG9yaXpvbnRhbC50bnMtc3VicGl4ZWwge1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcFxyXG59XHJcblxyXG4udG5zLWhvcml6b250YWwudG5zLXN1YnBpeGVsID4gLnRucy1pdGVtIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsXHJcbn1cclxuXHJcbi50bnMtaG9yaXpvbnRhbC50bnMtbm8tc3VicGl4ZWw6YWZ0ZXIge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIGNsZWFyOiBib3RoXHJcbn1cclxuXHJcbi50bnMtaG9yaXpvbnRhbC50bnMtbm8tc3VicGl4ZWwgPiAudG5zLWl0ZW0ge1xyXG4gICAgZmxvYXQ6IGxlZnRcclxufVxyXG5cclxuLnRucy1ob3Jpem9udGFsLnRucy1jYXJvdXNlbC50bnMtbm8tc3VicGl4ZWwgPiAudG5zLWl0ZW0ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAtMTAwJVxyXG59XHJcblxyXG4udG5zLW5vLWNhbGMge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbGVmdDogMFxyXG59XHJcblxyXG4udG5zLWdhbGxlcnkge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIG1pbi1oZWlnaHQ6IDFweFxyXG59XHJcblxyXG4udG5zLWdhbGxlcnkgPiAudG5zLWl0ZW0ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogLTEwMCU7XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IHRyYW5zZm9ybSAwcywgb3BhY2l0eSAwcztcclxuICAgIC1tb3otdHJhbnNpdGlvbjogdHJhbnNmb3JtIDBzLCBvcGFjaXR5IDBzO1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDBzLCBvcGFjaXR5IDBzXHJcbn1cclxuXHJcbi50bnMtZ2FsbGVyeSA+IC50bnMtc2xpZGUtYWN0aXZlIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGxlZnQ6IGF1dG8gIWltcG9ydGFudFxyXG59XHJcblxyXG4udG5zLWdhbGxlcnkgPiAudG5zLW1vdmluZyB7XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjI1cztcclxuICAgIC1tb3otdHJhbnNpdGlvbjogYWxsIDAuMjVzO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMjVzXHJcbn1cclxuXHJcbi50bnMtYXV0b3dpZHRoIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xyXG59XHJcblxyXG4udG5zLWxhenktaW1nIHtcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjZzO1xyXG4gICAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNnM7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNnM7XHJcbiAgICBvcGFjaXR5OiAwLjZcclxufVxyXG5cclxuLnRucy1sYXp5LWltZy50bnMtY29tcGxldGUge1xyXG4gICAgb3BhY2l0eTogMVxyXG59XHJcblxyXG4udG5zLWFoIHtcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogaGVpZ2h0IDBzO1xyXG4gICAgLW1vei10cmFuc2l0aW9uOiBoZWlnaHQgMHM7XHJcbiAgICB0cmFuc2l0aW9uOiBoZWlnaHQgMHNcclxufVxyXG5cclxuLnRucy1vdmgge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlblxyXG59XHJcblxyXG4udG5zLXZpc3VhbGx5LWhpZGRlbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAtMTAwMDBlbVxyXG59XHJcblxyXG4udG5zLXRyYW5zcGFyZW50IHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW5cclxufVxyXG5cclxuLnRucy1mYWRlSW4ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIGZpbHRlcjogYWxwaGEob3BhY2l0eT0xMDApO1xyXG4gICAgei1pbmRleDogMFxyXG59XHJcblxyXG4udG5zLW5vcm1hbCxcclxuLnRucy1mYWRlT3V0IHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MCk7XHJcbiAgICB6LWluZGV4OiAtMVxyXG59XHJcblxyXG4udG5zLXZwZml4IHtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXBcclxufVxyXG5cclxuLnRucy12cGZpeCA+IGRpdixcclxuLnRucy12cGZpeCA+IGxpIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xyXG59XHJcblxyXG4udG5zLXQtc3VicDIge1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB3aWR0aDogMzEwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuXHJcbn1cclxuXHJcbi50bnMtdC1jdCB7XHJcbiAgICB3aWR0aDogMjMzMy4zMzMzMzMzJTtcclxuICAgIHdpZHRoOiAtd2Via2l0LWNhbGMoMTAwJSAqIDcwIC8gMyk7XHJcbiAgICB3aWR0aDogLW1vei1jYWxjKDEwMCUgKiA3MCAvIDMpO1xyXG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDcwIC8gMyk7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogMFxyXG59XHJcblxyXG4udG5zLXQtY3Q6YWZ0ZXIge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIGNsZWFyOiBib3RoXHJcbn1cclxuXHJcbi50bnMtdC1jdCA+IGRpdiB7XHJcbiAgICB3aWR0aDogMS40Mjg1NzE0JTtcclxuICAgIHdpZHRoOiAtd2Via2l0LWNhbGMoMTAwJSAvIDcwKTtcclxuICAgIHdpZHRoOiAtbW96LWNhbGMoMTAwJSAvIDcwKTtcclxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLyA3MCk7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICBmbG9hdDogbGVmdFxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuLy8vLy8vIGN1c3RvbSBzdHlsZXNcclxuLnRucy1vdXRlciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcblxyXG5cclxuLyogcmVtb3ZpbmcgZG90cyBmb3Igbm93ICovXHJcbi50bnMtbmF2IHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi8qXHJcbi50bnMtbmF2IGJ1dHRvbiB7XHJcbiAgICB3aWR0aDogMS4yZW07XHJcbiAgICBoZWlnaHQ6IDEuMmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgbWFyZ2luOiAwIC4yNWVtO1xyXG59XHJcblxyXG4udG5zLW5hdiBidXR0b246aG92ZXIge1xyXG4gICAgb3BhY2l0eTogLjY7XHJcbn1cclxuXHJcbi50bnMtbmF2IC50bnMtbmF2LWFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxufVxyXG4qL1xyXG5cclxuXHJcblxyXG4vKiBVTkNPTU1FTlQgSUYgQ1VTVE9NIENPTlRST0xTIERPTlQgV09SS1xyXG5cclxuXHJcbi50bnMtY29udHJvbHMgYnV0dG9uOmZpcnN0LW9mLXR5cGUge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAxZW07XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XHJcbiAgICBcclxuICAgIHotaW5kZXg6IDUwMDA7XHJcbn1cclxuXHJcbi50bnMtY29udHJvbHMgYnV0dG9uOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDFlbTtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XHJcbiAgICBcclxuICAgICB6LWluZGV4OiA1MDAwOyAgIFxyXG5cclxufVxyXG5cclxuXHJcbiovXHJcblxyXG4uY3VzdG9taXplLWNvbnRyb2xzIGxpOmZpcnN0LW9mLXR5cGUge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGJvdHRvbTogLTEuNGVtO1xyXG4gICAgbGVmdDogMzAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMCUpO1xyXG4gICAgei1pbmRleDogNTAwMTtcclxuICAgIGNvbG9yOiAkZ29sZC1tZWRpdW07XHJcbiAgICBcclxuICAgIC8qaGVpZ2h0OiA2MHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDYwcHg7XHJcbiAgICBwYWRkaW5nOiAwIDE1cHg7Ki9cclxuICAgIFxyXG4gICAgZm9udC1zaXplOiAyLjVlbTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xyXG59XHJcblxyXG4uY3VzdG9taXplLWNvbnRyb2xzIGxpOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgYm90dG9tOiAtMS40ZW07XHJcbiAgICByaWdodDogMzAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMwJSk7XHJcbiAgICB6LWluZGV4OiA1MDAxO1xyXG4gICAgY29sb3I6ICRnb2xkLW1lZGl1bTtcclxuICAgIFxyXG4gICAgLypoZWlnaHQ6IDYwcHg7XHJcbiAgICBsaW5lLWhlaWdodDogNjBweDtcclxuICAgIHBhZGRpbmc6IDAgMTVweDsqL1xyXG4gICAgXHJcbiAgICBmb250LXNpemU6IDIuNWVtO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XHJcbn1cclxuXHJcbi5jdXN0b21pemUtY29udHJvbHMgbGk6aG92ZXIge1xyXG4gICAgY29sb3I6ICRnb2xkLWRhcms7XHJcbn1cclxuXHJcbi8qXHJcblxyXG5yZW1vdmluZyBwbGF5L3BhdXNlIGJ0biBmb3Igbm93XHJcblxyXG4udG5zLW91dGVyIGJ1dHRvbltkYXRhLWFjdGlvbl0ge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW46IDAgYXV0byAuNzVlbSBhdXRvO1xyXG4gICAgLy9ib3JkZXI6IG5vbmU7XHJcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcclxuICAgIGZvbnQtc2l6ZTogMS4zZW07XHJcbiAgICBwYWRkaW5nOiAuMmVtO1xyXG59XHJcblxyXG5cclxuKi9cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIiwiXHJcbi8qXHJcbktXRVMgV1JBUFMgRUFDSCBJTlBVVCBFTEVNRU5UIElOIEEgU1BBTiAua3ctZmllbGQtd3JhcHBlciBzbyB0aGUgMTAwJSB3aWR0aCBuZWVkcyB0byBiZSBhZGRlZCB0byB0aGlzIHNwYW4gYnV0IEkgc3RpbGwgbWlnaHQgbmVlZCB0byBhY2NvdW50IGZvciB0aGUgc3VibWl0IGJ1dHRvbiBhbnkgdGltZSBpcyBpcyBhIGJ1dHRvbiBlbGVtZW50IGFuZCBOT1QgYSBpbnB1dCB0eXBlPXN1Ym1pdCBlbGVtZW50XHJcbiovXHJcblxyXG4ua3ctZmllbGQtd3JhcHBlciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLy8ga2VlcHMgdGhlIGVycm9yIG1zZ3MgZnJvbSBtZXNzaW5nIHVwIHRoZSBsYXlvdXQgYnV0IG5lZWQgdG8gbWFrZSAuc3Vic2NyaWJlX19maWVsZC1wcmVmaXhlZCAgcmVsYXRpdmVseSBwb3NpdGlvbmVkXHJcbi5rdy1maWVsZC13cmFwcGVyIC5oZWxwIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxyXG59XHJcblxyXG5cclxuLnN1YnNjcmliZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsMCwwLC4zKSwgcmdiYSgwLDAsMCwuMykpLCB1cmwoJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2pkdXF1YWluL2Nfc2NhbGUsZl9hdXRvLHFfYXV0byx3XzE5MjAvdjE1NjM5MjgzNzIvZWFuZGIvc3Vic2NyaWJlLmpwZycpO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xyXG4gICAgcGFkZGluZy10b3A6IDhlbTtcclxuICAgIHBhZGRpbmctYm90dG9tOiA4ZW07XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJHNtYWxsKSB7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDZlbTtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNmVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX193cmFwIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDEyODBweDtcclxuICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faGVhZGluZyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjllbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fcGFyYWdyYXBoIHtcclxuICAgICAgICBmb250LXNpemU6IDEuMmVtO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA0ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2Zvcm0ge1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgyNTBweCwgMWZyKSk7XHJcbiAgICAgICAgZ3JpZC1nYXA6IDNlbSAxLjVlbTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkc21hbGwpIHtcclxuICAgICAgICAgICAgZ3JpZC1nYXA6IDEuMmVtIDEuNWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICAmX19pbnB1dCwgJl9fZW1haWwsICZfX2NvbW1lbnQge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDAgLjI1ZW0gLjI1ZW0gMDtcclxuICAgICAgICBwYWRkaW5nOiAuMzc1ZW0gLjMxMjVlbSAuMzEyNWVtO1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IFxyXG4gICAgICAgIGNvbG9yOiAjMTExOyAgXHJcbiAgICAgICAgaGVpZ2h0OiAyLjEyNWVtO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gaGVpZ2h0IGZvciB0ZXh0YXJlYSBuZWVkcyB0byBiZSBvbiBpdHMgd3JhcHBlclxyXG4gICAgJl9fZmllbGQtcHJlZml4ZWQgLmt3LWZpZWxkLXdyYXBwZXItNSB7XHJcbiAgICAgICAgaGVpZ2h0OiA2ZW07XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29tbWVudCB7IFxyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW5wdXQ6Zm9jdXMsICZfX2VtYWlsOmZvY3VzLCAmX19jb21tZW50OmZvY3VzIHtcclxuICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAuNWVtIHJnYmEoOTMsIDE2MiwgMjQ4LCAwLjUpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19sYWJlbCB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjRlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fZmllbGQtcHJlZml4ZWQge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gdGhpcyBpcyBuZWVkIHRvIGtlZXAgdGhlIGVycm9yIG1zZ3MgZnJvbSBtZXNzaW5nIHVwIHRoZSBsYXlvdXRcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19maWVsZC1wcmVmaXgge1xyXG4gICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0IDEwMG1zO1xyXG4gICAgICAgIGZsZXg6IDAgMCAyLjJlbTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAwO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IC4yNWVtIDAgMCAuMjVlbTtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIHBhZGRpbmc6IC4zNzVlbSAuMzc1ZW0gLjMxMjVlbSAuMzc1ZW07XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdvbGQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2ZpZWxkLXByZWZpeC5pbnB1dC1jb2xvciB7XHJcbiAgICAgICAgY29sb3I6ICRnb2xkO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pbnB1dC13cmFwOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICAgICAgYWxpZ24tc2VsZjogZW5kO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkc21hbGwpIHtcclxuICAgICAgICAgICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdWJtaXQge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoJGdvbGQsICRnb2xkLW1lZGl1bSk7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDJlbTtcclxuICAgICAgICBcclxuICAgICAgICAmOjpiZWZvcmUsICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAkZ29sZDtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxufVxyXG5cclxuXHJcblxyXG5cclxuIiwiXHJcbi8vIGRhcmtlbmQgdGhlIHByZS1oZWFkaW5nIGFuZCBoZGcgaW1nIHdoZW4gc2tld2VkIGdyYWRpZW50IGlzIHJlbW92ZWQgYXMgbm93IHRoZSBoZWFkaW5nIGlzIGNvbXBsZXRlbHkgaW4gZnJvbnQgb2YgdGhlIGltZ1xyXG5AaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkc21hbGwpIHtcclxuICAgIFxyXG4gICAgLnRlc3RpbW9uaWFsIC5wcmUtaGVhZGluZyB7XHJcbiAgICAgICAgY29sb3I6ICRncmV5LWRhcmstMTtcclxuICAgIH1cclxuXHJcbiAgICAudGVzdGltb25pYWwgLnNlY3QtaGVhZGluZy1pbWcge1xyXG4gICAgICAgIGNvbG9yOiAkZ3JleS1kYXJrLTE7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuIFxyXG59XHJcblxyXG5cclxuLnRlc3RpbW9uaWFsIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxMDVkZWcsICNmZmYsICNmZmYsIDUwJSwgdHJhbnNwYXJlbnQgNTAlKSwgdXJsKCdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9qZHVxdWFpbi9jX3NjYWxlLGZfYXV0byxxX2F1dG8sd18xOTIwL3YxNTYzNDU2OTExL2VhbmRiL2JnLXRlc3RpbW9uaWFsLmpwZycpO1xyXG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgcGFkZGluZzogNmVtIDJlbSA0ZW0gMmVtO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJHNtYWxsKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9qZHVxdWFpbi9pbWFnZS91cGxvYWQvY19maWxsLGZfYXV0byxnX2NlbnRlcixoXzEwMDAscV9hdXRvLHdfNzYwL3YxNTYzNDU2OTExL2VhbmRiL2JnLXRlc3RpbW9uaWFsLmpwZycpO1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSAwJTtcclxuICAgICAgICBcclxuICAgICAgICAvLyB0aGlzIGxvb2tzIGxpa2UgaXQgaXMgZml4aW5nIHRoZSBpc3N1ZSBvZiB0aGUgYmcgYmVpbmcgY29tcGxldGVseSBibHVycmVkXHJcbiAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XHJcbiAgICAgICAgcGFkZGluZzogNmVtIC41ZW0gMmVtIC41ZW07XHJcbiAgICAgICAgaGVpZ2h0OiAxMTB2aDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gZXh0cmEgYnRtIG1hcmdpbiB0byBtb3ZlIHNsaWRlciBkb3duIGEgYml0XHJcbiAgICAmIC5zZWN0LWhlYWRpbmctaW1nIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA0ZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJHNtYWxsKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX21haW4td3JhcCB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgcGFkZGluZzogMCAxMWVtO1xyXG5cclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJG1lZGl1bSkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwIDRlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJG1lZGl1bS1zbWFsbCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwIDJlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJHNtYWxsZXN0KSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgLjc1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICR0aW55KSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgLjM1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19jZWxsIHtcclxuICAgICAgICBvcGFjaXR5OiAuODU7XHJcbiAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGdvbGQtZGFyaztcclxuICAgICAgICBcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gdGVtcCBmaXggZm9yIGhlaWdodCBpc3N1ZVxyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxLjVlbTsgXHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2NlbGw6OmFmdGVyIHtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3gtc2hhZG93OiAxcHggMXB4IDAgMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpO1xyXG4gICAgICB3aWR0aDogMWVtOyBcclxuICAgICAgaGVpZ2h0OiAxZW07IFxyXG4gICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkZ3JleS1saWdodC0zO1xyXG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGdyZXktbGlnaHQtMztcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICBcclxuICAgICAgbGVmdDogNTAlO1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgICAgIGJvdHRvbTogMy44MGVtOyAvKndhcyAtOHB4Ki9cclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gICAgICB6LWluZGV4OiAyMDAwO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICR0aW55KSB7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMy40MGVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gdGhpcyBpcyB0aGUgd3JhcCBpbnNpZGUgdGhlIGNlbGwgXHJcbiAgICAmX193cmFwIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRncmV5LWxpZ2h0LTM7XHJcbiAgICAgICAgcGFkZGluZzogMWVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRzbWFsbGVzdCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuN2VtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiA1ZW07XHJcbiAgICAgICAgaGVpZ2h0OiA1ZW07XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmV5LWRhcmstMTtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkc21hbGxlc3QpIHtcclxuICAgICAgICAgICAgd2lkdGg6IDMuNWVtO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDMuNWVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19uYW1lIHtcclxuICAgICAgICBmb250LXNpemU6IDEuM2VtO1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgICAgICBjb2xvcjogJGdyZXktZGFyay0xO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBcclxuICAgICAgICBtYXJnaW4tdG9wOiAxZW07XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDdweCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJHRpbnkpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3JldmlldyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjFlbTtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS42O1xyXG4gICAgICAgIHBhZGRpbmc6IDEuNWVtO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB6LWluZGV4OiAyO1xyXG4gICAgICAgICBcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGdyZXktbGlnaHQtMztcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMDhlbTtcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbTtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMztcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgY29udGVudDogXCJcXDIwMUNcIjtcclxuICAgICAgICAgICAgY29sb3I6ICRnb2xkO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEyZW07XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAuNTtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IC4xNGVtO1xyXG4gICAgICAgICAgICBsZWZ0OiAtLjAzN2VtO1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbi8qKioqKioqKioqKiBMQU5EU0NBUEUgU1RZTEVTICoqKioqKioqKioqL1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzMTlweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA4MTJweCkge1xyXG4gICAgXHJcbiAgICAudGVzdGltb25pYWwge1xyXG4gICAgXHJcbiAgICAgICBoZWlnaHQ6IDE5MHZ3O1xyXG4gICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9qZHVxdWFpbi9jX3NjYWxlLGZfYXV0byxxX2F1dG8sd18xOTIwL3YxNTYzNDU2OTExL2VhbmRiL2JnLXRlc3RpbW9uaWFsLmpwZycpO1xyXG4gICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDAlO1xyXG4gICAgICAgIHBhZGRpbmc6IDZlbSAwIDRlbSAwO1xyXG4gICAgICAgIFxyXG4gICAgICAgLy8gdGhpcyBsb29rcyBsaWtlIGl0IGlzIGZpeGluZyB0aGUgaXNzdWUgb2YgdGhlIGJnIGJlaW5nIGNvbXBsZXRlbHkgYmx1cnJlZFxyXG4gICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7IFxyXG4gICAgXHJcbiAgICB9IFxyXG4gICAgXHJcbiAgICAudGVzdGltb25pYWwgLnByZS1oZWFkaW5nIHtcclxuICAgICAgICBjb2xvcjogJGdyZXktZGFyay0xO1xyXG4gICAgfVxyXG5cclxuICAgIC50ZXN0aW1vbmlhbCAuc2VjdC1oZWFkaW5nLWltZyB7XHJcbiAgICAgICAgY29sb3I6ICRncmV5LWRhcmstMTtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcclxuICAgIH1cclxuICBcclxufVxyXG5cclxuXHJcbi8vbGFwdG9wIHdpdGggc2NyZWVucyBub3QgdmVyeSB0YWxsICh3b3JrIGxhcHRvcClcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIGFuZCAobWF4LWhlaWdodDogNTg1cHgpICB7XHJcbiAgICBcclxuICAgIC50ZXN0aW1vbmlhbCB7XHJcbiAgICAgICBoZWlnaHQ6IDkwdnc7XHJcbiAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2pkdXF1YWluL2Nfc2NhbGUsZl9hdXRvLHFfYXV0byx3XzE5MjAvdjE1NjM0NTY5MTEvZWFuZGIvYmctdGVzdGltb25pYWwuanBnJyk7XHJcbiAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgMCU7XHJcbiAgICAgICBwYWRkaW5nOiA2ZW0gMCAzZW0gMDtcclxuICAgICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsOyBcclxuICAgIH0gXHJcbiAgICBcclxuICAgIC50ZXN0aW1vbmlhbF9fbWFpbi13cmFwIHtcclxuICAgICAgICBwYWRkaW5nOiAwIDllbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLnRlc3RpbW9uaWFsX19yZXZpZXcge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC50ZXN0aW1vbmlhbCAucHJlLWhlYWRpbmcge1xyXG4gICAgICAgIGNvbG9yOiAkZ3JleS1kYXJrLTE7XHJcbiAgICB9XHJcblxyXG4gICAgLnRlc3RpbW9uaWFsIC5zZWN0LWhlYWRpbmctaW1nIHtcclxuICAgICAgICBjb2xvcjogJGdyZXktZGFyay0xO1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNGVtO1xyXG4gICAgfVxyXG4gIFxyXG59XHJcblxyXG5cclxuXHJcbiIsIlxyXG5cclxuLmFwcG9pbnRtZW50cyB7XHJcbiAgICBwYWRkaW5nLXRvcDogMTJlbTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIiwiXHJcbi5mb290ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwxKTtcclxuICAgIGNvbG9yOiAjODg4O1xyXG4gICAgcGFkZGluZzogMy41ZW0gMmVtO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KG1heC13aWR0aCAkc21hbGwpIHtcclxuICAgICAgICBwYWRkaW5nOiAzZW0gMWVtO1xyXG4gICAgfVxyXG59XHJcblxyXG4uZm9vdGVyX193cmFwIHtcclxuICAgIG1heC13aWR0aDogMTI4MHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbi5sb2dvLWNvbnRhaW5lciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxLjVlbTtcclxufVxyXG5cclxuZm9vdGVyIGltZyB7XHJcbiAgICB3aWR0aDogN2VtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5kaXYuZm9vdGVyX19jb3B5cmlnaHQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmZvb3Rlcl9fbXlsaW5rcyB7XHJcbiAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgbWFyZ2luLWxlZnQ6IC43NWVtO1xyXG4gICAgY29sb3I6IGluaGVyaXQ7XHJcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLWluO1xyXG4gICAgXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBjb2xvcjogJGdvbGQ7IFxyXG4gICAgfVxyXG59XHJcblxyXG4uZm9vdGVyX19teWxpbmtzOmZpcnN0LW9mLXR5cGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IC41ZW07XHJcbn1cclxuXHJcbnAuZm9vdGVyLS1tYWluIHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBtYXJnaW46IDFlbSBhdXRvIC43ZW0gYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJHNtYWxsKSB7XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgIH1cclxufVxyXG5cclxuZGl2LmZvb3Rlck5hdldyYXBwZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XHJcbn1cclxuXHJcbmRpdi5mb290ZXItLWljb25zIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTUlO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJG1lZGl1bSkge1xyXG4gICAgICAgIGZsZXg6IDAgMCAxMDAlO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDIuNWVtO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIH1cclxufVxyXG5cclxuZGl2LmZvb3Rlci0taWNvbnMgYSB7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRtZWRpdW0pIHtcclxuICAgICAgICBmbGV4OiBpbml0aWFsO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG59XHJcblxyXG5kaXYuZm9vdGVyLS1pY29ucyBhOm5vdCg6bGFzdC1vZi10eXBlKSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcclxufVxyXG5cclxuZGl2LmZvb3Rlci0taWNvbnMgaSB7XHJcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLW91dCA1MG1zO1xyXG4gICAgY29sb3I6ICM4ODg7XHJcbiAgICB3aWR0aDogMS41ZW07XHJcbiAgICBoZWlnaHQ6IDEuNWVtO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjVlbTtcclxuICAgIGZvbnQtc2l6ZTogMS42ZW07XHJcbn1cclxuXHJcbmRpdi5mb290ZXItLWljb25zIGE6Zmlyc3Qtb2YtdHlwZSBpOmhvdmVyIHtcclxuICAgIGNvbG9yOiByZ2IoNTksIDg5LCAxNTIpO1xyXG59XHJcblxyXG5kaXYuZm9vdGVyLS1pY29ucyBhOm50aC1vZi10eXBlKDIpIGk6aG92ZXIge1xyXG4gICAgY29sb3I6IHJnYigyMDMsMzIsMzkpO1xyXG59XHJcblxyXG5kaXYuZm9vdGVyLS1pY29ucyBhOmxhc3Qtb2YtdHlwZSBpOmhvdmVyIHtcclxuICAgIGNvbG9yOiByZ2IoMTk1LDQyLDE2Myk7XHJcbn1cclxuXHJcbi5mb290ZXJfX25hdnMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobWF4LXdpZHRoICRtZWRpdW0pIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJG1lZGl1bSkge1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbi5mb290ZXJfX2xpbmtzIHtcclxuICAgIGNvbG9yOiAkZ29sZDtcclxuICAgIHBhZGRpbmc6IDFlbSAxLjI1ZW07XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAzMDBtcyBlYXNlLW91dCwgdHJhbnNmb3JtIDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBjb2xvcjogJGdvbGQtZGFyaztcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtM3B4KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludChtYXgtd2lkdGggJHNtYWxsKSB7XHJcbiAgICAgICAgcGFkZGluZzogMWVtIDFlbTtcclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG4uZm9vdGVyX19tZSB7XHJcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLWluO1xyXG4gICAgY29sb3I6IGluaGVyaXQ7XHJcbiAgICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGNvbG9yOiAkZ29sZDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJjphY3RpdmUge1xyXG4gICAgICAgIGNvbG9yOiAkZ29sZC1tZWRpdW07XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbiJdfQ== */
